{
  "{\"sourceRoot\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"filename\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulpfile.babel.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n\n/* eslint no-undef: \"off\" */\n'use strict'; // External dependencies\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"generateCert\", {\n  enumerable: true,\n  get: function get() {\n    return _generateCert[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"images\", {\n  enumerable: true,\n  get: function get() {\n    return _images[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"php\", {\n  enumerable: true,\n  get: function get() {\n    return _php[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"scripts\", {\n  enumerable: true,\n  get: function get() {\n    return _scripts[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"styles\", {\n  enumerable: true,\n  get: function get() {\n    return _styles[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"editorStyles\", {\n  enumerable: true,\n  get: function get() {\n    return _editorStyles[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"translate\", {\n  enumerable: true,\n  get: function get() {\n    return _translate[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"watch\", {\n  enumerable: true,\n  get: function get() {\n    return _watch[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"cleanCSS\", {\n  enumerable: true,\n  get: function get() {\n    return _clean.cleanCSS;\n  }\n});\nObject.defineProperty(exports, \"cleanJS\", {\n  enumerable: true,\n  get: function get() {\n    return _clean.cleanJS;\n  }\n});\nexports.bundleTheme = exports.buildDev = exports[\"default\"] = exports.firstRun = void 0;\n\nvar _gulp = require(\"gulp\");\n\nvar _generateCert = _interopRequireDefault(require(\"./gulp/generateCert\"));\n\nvar _images = _interopRequireDefault(require(\"./gulp/images\"));\n\nvar _php = _interopRequireDefault(require(\"./gulp/php\"));\n\nvar _browserSync = require(\"./gulp/browserSync\");\n\nvar _scripts = _interopRequireDefault(require(\"./gulp/scripts\"));\n\nvar _styles = _interopRequireDefault(require(\"./gulp/styles\"));\n\nvar _editorStyles = _interopRequireDefault(require(\"./gulp/editorStyles\"));\n\nvar _translate = _interopRequireDefault(require(\"./gulp/translate\"));\n\nvar _watch = _interopRequireDefault(require(\"./gulp/watch\"));\n\nvar _prodPrep = _interopRequireDefault(require(\"./gulp/prodPrep\"));\n\nvar _prodStringReplace = _interopRequireDefault(require(\"./gulp/prodStringReplace\"));\n\nvar _prodCompress = _interopRequireDefault(require(\"./gulp/prodCompress\"));\n\nvar _clean = require(\"./gulp/clean\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// Internal dependencies\n\n/**\n * Map out the sequence of events on first load and make it the default task\n */\nvar firstRun = (0, _gulp.series)(_clean.cleanCSS, _clean.cleanJS, (0, _gulp.parallel)(_php[\"default\"], _images[\"default\"], (0, _gulp.series)(_styles[\"default\"], _editorStyles[\"default\"]), _scripts[\"default\"]), _browserSync.serve, _watch[\"default\"]);\nexports.firstRun = firstRun;\nvar _default = firstRun;\n/**\n * Build theme for development without BrowserSync or watching\n */\n\nexports[\"default\"] = _default;\nvar buildDev = (0, _gulp.parallel)(_php[\"default\"], _images[\"default\"], (0, _gulp.series)(_styles[\"default\"], _editorStyles[\"default\"]), _scripts[\"default\"], _translate[\"default\"]);\n/**\n * Export theme for distribution.\n */\n\nexports.buildDev = buildDev;\nvar bundleTheme = (0, _gulp.series)(_prodPrep[\"default\"], (0, _gulp.parallel)(_php[\"default\"], _scripts[\"default\"], (0, _gulp.series)(_styles[\"default\"], _editorStyles[\"default\"]), _images[\"default\"]), _translate[\"default\"], _prodStringReplace[\"default\"], _prodCompress[\"default\"]);\n/**\n * Export all imported functions as tasks\n */\n\nexports.bundleTheme = bundleTheme;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbImZpcnN0UnVuIiwiY2xlYW5DU1MiLCJjbGVhbkpTIiwicGhwIiwiaW1hZ2VzIiwic3R5bGVzIiwiZWRpdG9yU3R5bGVzIiwic2NyaXB0cyIsInNlcnZlIiwid2F0Y2giLCJidWlsZERldiIsInRyYW5zbGF0ZSIsImJ1bmRsZVRoZW1lIiwicHJvZFByZXAiLCJwcm9kU3RyaW5nUmVwbGFjZSIsInByb2RDb21wcmVzcyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0E7QUFDQSxhLENBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQTs7QUFHQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQWJBOztBQWVBOzs7QUFHTyxJQUFNQSxRQUFRLEdBQUcsa0JBQ3BCQyxlQURvQixFQUNWQyxjQURVLEVBQ0Qsb0JBQVNDLGVBQVQsRUFBY0Msa0JBQWQsRUFBc0Isa0JBQVFDLGtCQUFSLEVBQWdCQyx3QkFBaEIsQ0FBdEIsRUFBc0RDLG1CQUF0RCxDQURDLEVBQytEQyxrQkFEL0QsRUFDc0VDLGlCQUR0RSxDQUFqQjs7ZUFJUVQsUTtBQUVmOzs7OztBQUdPLElBQU1VLFFBQVEsR0FBRyxvQkFDcEJQLGVBRG9CLEVBQ2ZDLGtCQURlLEVBQ1Asa0JBQVFDLGtCQUFSLEVBQWdCQyx3QkFBaEIsQ0FETyxFQUN5QkMsbUJBRHpCLEVBQ2tDSSxxQkFEbEMsQ0FBakI7QUFJUDs7Ozs7QUFHTyxJQUFNQyxXQUFXLEdBQUcsa0JBQ3ZCQyxvQkFEdUIsRUFDYixvQkFBU1YsZUFBVCxFQUFjSSxtQkFBZCxFQUF1QixrQkFBUUYsa0JBQVIsRUFBZ0JDLHdCQUFoQixDQUF2QixFQUF1REYsa0JBQXZELENBRGEsRUFDbURPLHFCQURuRCxFQUM4REcsNkJBRDlELEVBQ2lGQyx3QkFEakYsQ0FBcEI7QUFJUCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYXVzdGludHVkZS9Eb2N1bWVudHMvU3VwcmVtZSBIYXJkd29vZCBGbG9vcnMgSW5jL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmlnLXN1cHJlbWVoYXJkd29vZGZsb29yc2luYyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1lbnYgZXM2ICovXG4vKiBlc2xpbnQgbm8tdW5kZWY6IFwib2ZmXCIgKi9cbid1c2Ugc3RyaWN0JztcblxuLy8gRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG5pbXBvcnQge3BhcmFsbGVsLCBzZXJpZXN9IGZyb20gJ2d1bHAnO1xuXG4vLyBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbmltcG9ydCBnZW5lcmF0ZUNlcnQgZnJvbSAnLi9ndWxwL2dlbmVyYXRlQ2VydCc7XG5pbXBvcnQgaW1hZ2VzIGZyb20gJy4vZ3VscC9pbWFnZXMnO1xuaW1wb3J0IHBocCBmcm9tICcuL2d1bHAvcGhwJztcbmltcG9ydCB7c2VydmV9IGZyb20gJy4vZ3VscC9icm93c2VyU3luYyc7XG5pbXBvcnQgc2NyaXB0cyBmcm9tICcuL2d1bHAvc2NyaXB0cyc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vZ3VscC9zdHlsZXMnO1xuaW1wb3J0IGVkaXRvclN0eWxlcyBmcm9tICcuL2d1bHAvZWRpdG9yU3R5bGVzJztcbmltcG9ydCB0cmFuc2xhdGUgZnJvbSAnLi9ndWxwL3RyYW5zbGF0ZSc7XG5pbXBvcnQgd2F0Y2ggZnJvbSAnLi9ndWxwL3dhdGNoJztcbmltcG9ydCBwcm9kUHJlcCBmcm9tICcuL2d1bHAvcHJvZFByZXAnO1xuaW1wb3J0IHByb2RTdHJpbmdSZXBsYWNlIGZyb20gJy4vZ3VscC9wcm9kU3RyaW5nUmVwbGFjZSc7XG5pbXBvcnQgcHJvZENvbXByZXNzIGZyb20gJy4vZ3VscC9wcm9kQ29tcHJlc3MnO1xuaW1wb3J0IHtjbGVhbkNTUywgY2xlYW5KU30gZnJvbSAnLi9ndWxwL2NsZWFuJztcblxuLyoqXG4gKiBNYXAgb3V0IHRoZSBzZXF1ZW5jZSBvZiBldmVudHMgb24gZmlyc3QgbG9hZCBhbmQgbWFrZSBpdCB0aGUgZGVmYXVsdCB0YXNrXG4gKi9cbmV4cG9ydCBjb25zdCBmaXJzdFJ1biA9IHNlcmllcyhcbiAgICBjbGVhbkNTUywgY2xlYW5KUywgcGFyYWxsZWwocGhwLCBpbWFnZXMsIHNlcmllcyggc3R5bGVzLCBlZGl0b3JTdHlsZXMgKSwgc2NyaXB0cyksIHNlcnZlLCB3YXRjaFxuKTtcblxuZXhwb3J0IGRlZmF1bHQgZmlyc3RSdW47XG5cbi8qKlxuICogQnVpbGQgdGhlbWUgZm9yIGRldmVsb3BtZW50IHdpdGhvdXQgQnJvd3NlclN5bmMgb3Igd2F0Y2hpbmdcbiAqL1xuZXhwb3J0IGNvbnN0IGJ1aWxkRGV2ID0gcGFyYWxsZWwoXG4gICAgcGhwLCBpbWFnZXMsIHNlcmllcyggc3R5bGVzLCBlZGl0b3JTdHlsZXMgKSwgc2NyaXB0cywgdHJhbnNsYXRlXG4pO1xuXG4vKipcbiAqIEV4cG9ydCB0aGVtZSBmb3IgZGlzdHJpYnV0aW9uLlxuICovXG5leHBvcnQgY29uc3QgYnVuZGxlVGhlbWUgPSBzZXJpZXMoXG4gICAgcHJvZFByZXAsIHBhcmFsbGVsKHBocCwgc2NyaXB0cywgc2VyaWVzKCBzdHlsZXMsIGVkaXRvclN0eWxlcyApLCBpbWFnZXMpLCB0cmFuc2xhdGUsIHByb2RTdHJpbmdSZXBsYWNlLCBwcm9kQ29tcHJlc3Ncbik7XG5cbi8qKlxuICogRXhwb3J0IGFsbCBpbXBvcnRlZCBmdW5jdGlvbnMgYXMgdGFza3NcbiAqL1xuZXhwb3J0IHsgZ2VuZXJhdGVDZXJ0LCBpbWFnZXMsIHBocCwgc2NyaXB0cywgc3R5bGVzLCBlZGl0b3JTdHlsZXMsIHRyYW5zbGF0ZSwgd2F0Y2gsIGNsZWFuQ1NTLCBjbGVhbkpTIH07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "firstRun",
        "cleanCSS",
        "cleanJS",
        "php",
        "images",
        "styles",
        "editorStyles",
        "scripts",
        "serve",
        "watch",
        "buildDev",
        "translate",
        "bundleTheme",
        "prodPrep",
        "prodStringReplace",
        "prodCompress"
      ],
      "mappings": "AAAA;;AACA;AACA,a,CAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAbA;;AAeA;;;AAGO,IAAMA,QAAQ,GAAG,kBACpBC,eADoB,EACVC,cADU,EACD,oBAASC,eAAT,EAAcC,kBAAd,EAAsB,kBAAQC,kBAAR,EAAgBC,wBAAhB,CAAtB,EAAsDC,mBAAtD,CADC,EAC+DC,kBAD/D,EACsEC,iBADtE,CAAjB;;eAIQT,Q;AAEf;;;;;AAGO,IAAMU,QAAQ,GAAG,oBACpBP,eADoB,EACfC,kBADe,EACP,kBAAQC,kBAAR,EAAgBC,wBAAhB,CADO,EACyBC,mBADzB,EACkCI,qBADlC,CAAjB;AAIP;;;;;AAGO,IAAMC,WAAW,GAAG,kBACvBC,oBADuB,EACb,oBAASV,eAAT,EAAcI,mBAAd,EAAuB,kBAAQF,kBAAR,EAAgBC,wBAAhB,CAAvB,EAAuDF,kBAAvD,CADa,EACmDO,qBADnD,EAC8DG,6BAD9D,EACiFC,wBADjF,CAApB;AAIP",
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "sourcesContent": [
        "/* eslint-env es6 */\n/* eslint no-undef: \"off\" */\n'use strict';\n\n// External dependencies\nimport {parallel, series} from 'gulp';\n\n// Internal dependencies\nimport generateCert from './gulp/generateCert';\nimport images from './gulp/images';\nimport php from './gulp/php';\nimport {serve} from './gulp/browserSync';\nimport scripts from './gulp/scripts';\nimport styles from './gulp/styles';\nimport editorStyles from './gulp/editorStyles';\nimport translate from './gulp/translate';\nimport watch from './gulp/watch';\nimport prodPrep from './gulp/prodPrep';\nimport prodStringReplace from './gulp/prodStringReplace';\nimport prodCompress from './gulp/prodCompress';\nimport {cleanCSS, cleanJS} from './gulp/clean';\n\n/**\n * Map out the sequence of events on first load and make it the default task\n */\nexport const firstRun = series(\n    cleanCSS, cleanJS, parallel(php, images, series( styles, editorStyles ), scripts), serve, watch\n);\n\nexport default firstRun;\n\n/**\n * Build theme for development without BrowserSync or watching\n */\nexport const buildDev = parallel(\n    php, images, series( styles, editorStyles ), scripts, translate\n);\n\n/**\n * Export theme for distribution.\n */\nexport const bundleTheme = series(\n    prodPrep, parallel(php, scripts, series( styles, editorStyles ), images), translate, prodStringReplace, prodCompress\n);\n\n/**\n * Export all imported functions as tasks\n */\nexport { generateCert, images, php, scripts, styles, editorStyles, translate, watch, cleanCSS, cleanJS };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561222234000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"filename\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/generateCert.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/generateCert.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/generateCert.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/generateCert.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
        "sourceFileName": "generateCert.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = generateCert;\n\nvar _createCert = _interopRequireDefault(require(\"create-cert\"));\n\nvar _fancyLog = _interopRequireDefault(require(\"fancy-log\"));\n\nvar _ansiColors = _interopRequireDefault(require(\"ansi-colors\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _constants = require(\"./constants\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\nfunction generateCert(done) {\n  // Use pem to create a new key/cert\n\n  /*\n  const createCertOptions = {\n      days: 1825,\n      commonName: 'localhost'\n  };\n  */\n  var createCertOptions = {\n    days: 1825,\n    selfSigned: true,\n    country: 'US',\n    state: 'OR',\n    locality: 'Portland',\n    altNames: ['localhost'],\n    organization: 'WP Rig',\n    commonName: 'localhost'\n  };\n  (0, _createCert[\"default\"])(createCertOptions).then(function (keys) {\n    // Create the BrowserSync directory if needed\n    if (!_fs[\"default\"].existsSync(_constants.paths.browserSync.dir)) {\n      _fs[\"default\"].mkdirSync(_constants.paths.browserSync.dir);\n    } // Save the key\n\n\n    _fs[\"default\"].writeFileSync(_constants.paths.browserSync.key, keys.key, function (err) {\n      if (err) {\n        throw err;\n      }\n    }); // Save the cert\n\n\n    _fs[\"default\"].writeFileSync(_constants.paths.browserSync.cert, keys.cert, function (err) {\n      if (err) {\n        throw err;\n      }\n    }); // Save the CA cert\n\n\n    _fs[\"default\"].writeFileSync(_constants.paths.browserSync.caCert, keys.caCert, function (err) {\n      if (err) {\n        throw err;\n      }\n    });\n\n    (0, _fancyLog[\"default\"])(_ansiColors[\"default\"].green('Custom SSL key and certificate generated successfully!'));\n    done();\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbmVyYXRlQ2VydC5qcyJdLCJuYW1lcyI6WyJnZW5lcmF0ZUNlcnQiLCJkb25lIiwiY3JlYXRlQ2VydE9wdGlvbnMiLCJkYXlzIiwic2VsZlNpZ25lZCIsImNvdW50cnkiLCJzdGF0ZSIsImxvY2FsaXR5IiwiYWx0TmFtZXMiLCJvcmdhbml6YXRpb24iLCJjb21tb25OYW1lIiwidGhlbiIsImtleXMiLCJmcyIsImV4aXN0c1N5bmMiLCJwYXRocyIsImJyb3dzZXJTeW5jIiwiZGlyIiwibWtkaXJTeW5jIiwid3JpdGVGaWxlU3luYyIsImtleSIsImVyciIsImNlcnQiLCJjYUNlcnQiLCJjb2xvcnMiLCJncmVlbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUVBOzs7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFLQTs7OztBQUhBOzs7QUFLZSxTQUFTQSxZQUFULENBQXNCQyxJQUF0QixFQUE0QjtBQUV2Qzs7QUFDQTs7Ozs7O0FBT0EsTUFBTUMsaUJBQWlCLEdBQUc7QUFDdEJDLElBQUFBLElBQUksRUFBRSxJQURnQjtBQUV0QkMsSUFBQUEsVUFBVSxFQUFFLElBRlU7QUFHdEJDLElBQUFBLE9BQU8sRUFBRSxJQUhhO0FBSXRCQyxJQUFBQSxLQUFLLEVBQUUsSUFKZTtBQUt0QkMsSUFBQUEsUUFBUSxFQUFFLFVBTFk7QUFNdEJDLElBQUFBLFFBQVEsRUFBRSxDQUFDLFdBQUQsQ0FOWTtBQU90QkMsSUFBQUEsWUFBWSxFQUFFLFFBUFE7QUFRdEJDLElBQUFBLFVBQVUsRUFBRTtBQVJVLEdBQTFCO0FBV0EsOEJBQVdSLGlCQUFYLEVBQThCUyxJQUE5QixDQUFvQyxVQUFBQyxJQUFJLEVBQUk7QUFFeEM7QUFDQSxRQUFLLENBQUNDLGVBQUdDLFVBQUgsQ0FBY0MsaUJBQU1DLFdBQU4sQ0FBa0JDLEdBQWhDLENBQU4sRUFBNEM7QUFDeENKLHFCQUFHSyxTQUFILENBQWFILGlCQUFNQyxXQUFOLENBQWtCQyxHQUEvQjtBQUNILEtBTHVDLENBT3hDOzs7QUFDQUosbUJBQUdNLGFBQUgsQ0FBaUJKLGlCQUFNQyxXQUFOLENBQWtCSSxHQUFuQyxFQUF3Q1IsSUFBSSxDQUFDUSxHQUE3QyxFQUFrRCxVQUFDQyxHQUFELEVBQVM7QUFFdkQsVUFBSUEsR0FBSixFQUFTO0FBQ0wsY0FBTUEsR0FBTjtBQUNEO0FBRU4sS0FORCxFQVJ3QyxDQWdCeEM7OztBQUNBUixtQkFBR00sYUFBSCxDQUFpQkosaUJBQU1DLFdBQU4sQ0FBa0JNLElBQW5DLEVBQXlDVixJQUFJLENBQUNVLElBQTlDLEVBQW9ELFVBQUNELEdBQUQsRUFBUztBQUV6RCxVQUFJQSxHQUFKLEVBQVM7QUFDTCxjQUFNQSxHQUFOO0FBQ0g7QUFFSixLQU5ELEVBakJ3QyxDQXlCeEM7OztBQUNBUixtQkFBR00sYUFBSCxDQUFpQkosaUJBQU1DLFdBQU4sQ0FBa0JPLE1BQW5DLEVBQTJDWCxJQUFJLENBQUNXLE1BQWhELEVBQXdELFVBQUNGLEdBQUQsRUFBUztBQUU3RCxVQUFJQSxHQUFKLEVBQVM7QUFDTCxjQUFNQSxHQUFOO0FBQ0g7QUFFSixLQU5EOztBQVFBLDhCQUFJRyx1QkFBT0MsS0FBUCxDQUFhLHdEQUFiLENBQUo7QUFFQXhCLElBQUFBLElBQUk7QUFFUCxHQXRDRDtBQXdDSCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYXVzdGludHVkZS9Eb2N1bWVudHMvU3VwcmVtZSBIYXJkd29vZCBGbG9vcnMgSW5jL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmlnLXN1cHJlbWVoYXJkd29vZGZsb29yc2luYy9ndWxwIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWVudiBlczYgKi9cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IGNyZWF0ZUNlcnQgZnJvbSAnY3JlYXRlLWNlcnQnO1xuaW1wb3J0IGxvZyBmcm9tICdmYW5jeS1sb2cnO1xuaW1wb3J0IGNvbG9ycyBmcm9tICdhbnNpLWNvbG9ycyc7XG5pbXBvcnQgZnMgZnJvbSAnZnMnO1xuXG4vKipcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQge3BhdGhzfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdlbmVyYXRlQ2VydChkb25lKSB7XG5cbiAgICAvLyBVc2UgcGVtIHRvIGNyZWF0ZSBhIG5ldyBrZXkvY2VydFxuICAgIC8qXG4gICAgY29uc3QgY3JlYXRlQ2VydE9wdGlvbnMgPSB7XG4gICAgICAgIGRheXM6IDE4MjUsXG4gICAgICAgIGNvbW1vbk5hbWU6ICdsb2NhbGhvc3QnXG4gICAgfTtcbiAgICAqL1xuXG4gICAgY29uc3QgY3JlYXRlQ2VydE9wdGlvbnMgPSB7XG4gICAgICAgIGRheXM6IDE4MjUsXG4gICAgICAgIHNlbGZTaWduZWQ6IHRydWUsXG4gICAgICAgIGNvdW50cnk6ICdVUycsXG4gICAgICAgIHN0YXRlOiAnT1InLFxuICAgICAgICBsb2NhbGl0eTogJ1BvcnRsYW5kJyxcbiAgICAgICAgYWx0TmFtZXM6IFsnbG9jYWxob3N0J10sXG4gICAgICAgIG9yZ2FuaXphdGlvbjogJ1dQIFJpZycsXG4gICAgICAgIGNvbW1vbk5hbWU6ICdsb2NhbGhvc3QnXG4gICAgfTtcblxuICAgIGNyZWF0ZUNlcnQoY3JlYXRlQ2VydE9wdGlvbnMpLnRoZW4oIGtleXMgPT4ge1xuXG4gICAgICAgIC8vIENyZWF0ZSB0aGUgQnJvd3NlclN5bmMgZGlyZWN0b3J5IGlmIG5lZWRlZFxuICAgICAgICBpZiAoICFmcy5leGlzdHNTeW5jKHBhdGhzLmJyb3dzZXJTeW5jLmRpcikgKXtcbiAgICAgICAgICAgIGZzLm1rZGlyU3luYyhwYXRocy5icm93c2VyU3luYy5kaXIpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gU2F2ZSB0aGUga2V5XG4gICAgICAgIGZzLndyaXRlRmlsZVN5bmMocGF0aHMuYnJvd3NlclN5bmMua2V5LCBrZXlzLmtleSwgKGVycikgPT4geyAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgLy8gU2F2ZSB0aGUgY2VydFxuICAgICAgICBmcy53cml0ZUZpbGVTeW5jKHBhdGhzLmJyb3dzZXJTeW5jLmNlcnQsIGtleXMuY2VydCwgKGVycikgPT4geyAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICB9KTtcblxuICAgICAgICAvLyBTYXZlIHRoZSBDQSBjZXJ0XG4gICAgICAgIGZzLndyaXRlRmlsZVN5bmMocGF0aHMuYnJvd3NlclN5bmMuY2FDZXJ0LCBrZXlzLmNhQ2VydCwgKGVycikgPT4geyAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICB9KTtcblxuICAgICAgICBsb2coY29sb3JzLmdyZWVuKCdDdXN0b20gU1NMIGtleSBhbmQgY2VydGlmaWNhdGUgZ2VuZXJhdGVkIHN1Y2Nlc3NmdWxseSEnKSk7XG5cbiAgICAgICAgZG9uZSgpO1xuXG4gICAgfSk7XG5cbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "generateCert.js"
      ],
      "names": [
        "generateCert",
        "done",
        "createCertOptions",
        "days",
        "selfSigned",
        "country",
        "state",
        "locality",
        "altNames",
        "organization",
        "commonName",
        "then",
        "keys",
        "fs",
        "existsSync",
        "paths",
        "browserSync",
        "dir",
        "mkdirSync",
        "writeFileSync",
        "key",
        "err",
        "cert",
        "caCert",
        "colors",
        "green"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;AAGA;;AACA;;AACA;;AACA;;AAKA;;;;AAHA;;;AAKe,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;AAEvC;;AACA;;;;;;AAOA,MAAMC,iBAAiB,GAAG;AACtBC,IAAAA,IAAI,EAAE,IADgB;AAEtBC,IAAAA,UAAU,EAAE,IAFU;AAGtBC,IAAAA,OAAO,EAAE,IAHa;AAItBC,IAAAA,KAAK,EAAE,IAJe;AAKtBC,IAAAA,QAAQ,EAAE,UALY;AAMtBC,IAAAA,QAAQ,EAAE,CAAC,WAAD,CANY;AAOtBC,IAAAA,YAAY,EAAE,QAPQ;AAQtBC,IAAAA,UAAU,EAAE;AARU,GAA1B;AAWA,8BAAWR,iBAAX,EAA8BS,IAA9B,CAAoC,UAAAC,IAAI,EAAI;AAExC;AACA,QAAK,CAACC,eAAGC,UAAH,CAAcC,iBAAMC,WAAN,CAAkBC,GAAhC,CAAN,EAA4C;AACxCJ,qBAAGK,SAAH,CAAaH,iBAAMC,WAAN,CAAkBC,GAA/B;AACH,KALuC,CAOxC;;;AACAJ,mBAAGM,aAAH,CAAiBJ,iBAAMC,WAAN,CAAkBI,GAAnC,EAAwCR,IAAI,CAACQ,GAA7C,EAAkD,UAACC,GAAD,EAAS;AAEvD,UAAIA,GAAJ,EAAS;AACL,cAAMA,GAAN;AACD;AAEN,KAND,EARwC,CAgBxC;;;AACAR,mBAAGM,aAAH,CAAiBJ,iBAAMC,WAAN,CAAkBM,IAAnC,EAAyCV,IAAI,CAACU,IAA9C,EAAoD,UAACD,GAAD,EAAS;AAEzD,UAAIA,GAAJ,EAAS;AACL,cAAMA,GAAN;AACH;AAEJ,KAND,EAjBwC,CAyBxC;;;AACAR,mBAAGM,aAAH,CAAiBJ,iBAAMC,WAAN,CAAkBO,MAAnC,EAA2CX,IAAI,CAACW,MAAhD,EAAwD,UAACF,GAAD,EAAS;AAE7D,UAAIA,GAAJ,EAAS;AACL,cAAMA,GAAN;AACH;AAEJ,KAND;;AAQA,8BAAIG,uBAAOC,KAAP,CAAa,wDAAb,CAAJ;AAEAxB,IAAAA,IAAI;AAEP,GAtCD;AAwCH",
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport createCert from 'create-cert';\nimport log from 'fancy-log';\nimport colors from 'ansi-colors';\nimport fs from 'fs';\n\n/**\n * Internal dependencies\n */\nimport {paths} from './constants';\n\nexport default function generateCert(done) {\n\n    // Use pem to create a new key/cert\n    /*\n    const createCertOptions = {\n        days: 1825,\n        commonName: 'localhost'\n    };\n    */\n\n    const createCertOptions = {\n        days: 1825,\n        selfSigned: true,\n        country: 'US',\n        state: 'OR',\n        locality: 'Portland',\n        altNames: ['localhost'],\n        organization: 'WP Rig',\n        commonName: 'localhost'\n    };\n\n    createCert(createCertOptions).then( keys => {\n\n        // Create the BrowserSync directory if needed\n        if ( !fs.existsSync(paths.browserSync.dir) ){\n            fs.mkdirSync(paths.browserSync.dir);\n        }\n\n        // Save the key\n        fs.writeFileSync(paths.browserSync.key, keys.key, (err) => {  \n            \n            if (err) {\n                throw err;\n              }\n        \n        });\n        \n        // Save the cert\n        fs.writeFileSync(paths.browserSync.cert, keys.cert, (err) => {  \n            \n            if (err) {\n                throw err;\n            }\n        \n        });\n\n        // Save the CA cert\n        fs.writeFileSync(paths.browserSync.caCert, keys.caCert, (err) => {  \n            \n            if (err) {\n                throw err;\n            }\n        \n        });\n\n        log(colors.green('Custom SSL key and certificate generated successfully!'));\n\n        done();\n\n    });\n\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1561222234000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"filename\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/constants.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/constants.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/constants.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/constants.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
        "sourceFileName": "constants.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.paths = exports.nameFieldDefaults = exports.PHPCSOptions = exports.prodAssetsDir = exports.assetsDir = exports.prodThemePath = exports.isProd = exports.rootPath = exports.gulpPlugins = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar gulpPlugins = require('gulp-load-plugins')();\n\nexports.gulpPlugins = gulpPlugins;\n// Root path is where npm run commands happen\nvar rootPath = process.cwd(); // Dev or production\n\nexports.rootPath = rootPath;\nvar isProd = process.env.NODE_ENV === 'production'; // get the config\n\nexports.isProd = isProd;\nvar config = (0, _utils.getThemeConfig)(); // directory for the production theme\n\nvar prodThemePath = _path[\"default\"].normalize(\"\".concat(rootPath, \"/../\").concat(config.theme.slug)); // directory for assets (CSS, JS, images)\n\n\nexports.prodThemePath = prodThemePath;\nvar assetsDir = \"\".concat(rootPath, \"/assets\"); // directory for assets (CSS, JS, images) in production\n\nexports.assetsDir = assetsDir;\nvar prodAssetsDir = \"\".concat(prodThemePath, \"/assets\"); // PHPCS options\n\nexports.prodAssetsDir = prodAssetsDir;\nvar PHPCSOptions = {\n  bin: \"\".concat(rootPath, \"/vendor/bin/phpcs\"),\n  standard: \"\".concat(rootPath, \"/phpcs.xml.dist\"),\n  warningSeverity: 0\n}; // Theme config name fields and their defaults\n\nexports.PHPCSOptions = PHPCSOptions;\nvar nameFieldDefaults = {\n  author: 'The WP Rig Contributors',\n  PHPNamespace: 'WP_Rig\\\\WP_Rig',\n  slug: 'wp-rig',\n  name: 'WP Rig',\n  underscoreCase: 'wp_rig',\n  constant: 'WP_RIG',\n  camelCase: 'WpRig',\n  camelCaseVar: 'wpRig'\n}; // Project paths\n\nexports.nameFieldDefaults = nameFieldDefaults;\nvar paths = {\n  assetsDir: assetsDir,\n  browserSync: {\n    dir: \"\".concat(rootPath, \"/BrowserSync\"),\n    cert: \"\".concat(rootPath, \"/BrowserSync/wp-rig-browser-sync-cert.crt\"),\n    caCert: \"\".concat(rootPath, \"/BrowserSync/wp-rig-browser-sync-root-cert.crt\"),\n    key: \"\".concat(rootPath, \"/BrowserSync/wp-rig-browser-sync-key.key\")\n  },\n  config: {\n    themeConfig: \"\".concat(rootPath, \"/config/themeConfig.js\")\n  },\n  php: {\n    src: [\"\".concat(rootPath, \"/**/*.php\"), \"!\".concat(rootPath, \"/optional/**/*.*\"), \"!\".concat(rootPath, \"/tests/**/*.*\"), \"!\".concat(rootPath, \"/vendor/**/*.*\")],\n    dest: \"\".concat(rootPath, \"/\")\n  },\n  styles: {\n    editorSrc: [\"\".concat(assetsDir, \"/css/src/editor/**/*.css\"), // Ignore partial files.\n    \"!\".concat(assetsDir, \"/css/src/**/_*.css\")],\n    editorSrcDir: \"\".concat(assetsDir, \"/css/src/editor\"),\n    editorDest: \"\".concat(assetsDir, \"/css/editor\"),\n    src: [\"\".concat(assetsDir, \"/css/src/**/*.css\"), // Ignore partial files.\n    \"!\".concat(assetsDir, \"/css/src/**/_*.css\"), // Ignore editor source css.\n    \"!\".concat(assetsDir, \"/css/src/editor/**/*.css\")],\n    srcDir: \"\".concat(assetsDir, \"/css/src\"),\n    dest: \"\".concat(assetsDir, \"/css\")\n  },\n  scripts: {\n    src: [\"\".concat(assetsDir, \"/js/src/**/*.js\"), // Ignore partial files.\n    \"!\".concat(assetsDir, \"/js/src/**/_*.js\")],\n    srcDir: \"\".concat(assetsDir, \"/js/src\"),\n    dest: \"\".concat(assetsDir, \"/js\")\n  },\n  images: {\n    src: \"\".concat(assetsDir, \"/images/src/**/*.{jpg,JPG,png,svg,gif,GIF}\"),\n    dest: \"\".concat(assetsDir, \"/images/\")\n  },\n  languages: {\n    src: [\"\".concat(rootPath, \"/**/*.php\"), \"!\".concat(rootPath, \"/optional/**/*.*\"), \"!\".concat(rootPath, \"/tests/**/*.*\"), \"!\".concat(rootPath, \"/vendor/**/*.*\")],\n    dest: \"\".concat(rootPath, \"/languages/\").concat(nameFieldDefaults.slug, \".pot\")\n  },\n  \"export\": {\n    src: [],\n    dest: \"\".concat(prodThemePath, \"/\"),\n    stringReplaceSrc: [\"style.css\"]\n  }\n}; // Add rootPath to filesToCopy and additionalFilesToCopy\n\nexports.paths = paths;\nvar _iteratorNormalCompletion = true;\nvar _didIteratorError = false;\nvar _iteratorError = undefined;\n\ntry {\n  for (var _iterator = config[\"export\"].filesToCopy.concat(config[\"export\"].additionalFilesToCopy)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n    var filePath = _step.value;\n    paths[\"export\"].src.push(\"\".concat(rootPath, \"/\").concat(filePath));\n  } // Override paths for production\n\n} catch (err) {\n  _didIteratorError = true;\n  _iteratorError = err;\n} finally {\n  try {\n    if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n      _iterator[\"return\"]();\n    }\n  } finally {\n    if (_didIteratorError) {\n      throw _iteratorError;\n    }\n  }\n}\n\nif (isProd) {\n  paths.php.dest = \"\".concat(prodThemePath, \"/\");\n  paths.styles.dest = \"\".concat(prodAssetsDir, \"/css/\");\n  paths.styles.editorDest = \"\".concat(prodAssetsDir, \"/css/editor/\");\n  paths.scripts.dest = \"\".concat(prodAssetsDir, \"/js/\");\n  paths.images.dest = \"\".concat(prodAssetsDir, \"/images/\");\n  paths.languages = {\n    src: \"\".concat(prodThemePath, \"/**/*.php\"),\n    dest: \"\".concat(prodThemePath, \"/languages/\").concat(config.theme.slug, \".pot\")\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "constants.js"
      ],
      "names": [
        "gulpPlugins",
        "require",
        "rootPath",
        "process",
        "cwd",
        "isProd",
        "env",
        "NODE_ENV",
        "config",
        "prodThemePath",
        "path",
        "normalize",
        "theme",
        "slug",
        "assetsDir",
        "prodAssetsDir",
        "PHPCSOptions",
        "bin",
        "standard",
        "warningSeverity",
        "nameFieldDefaults",
        "author",
        "PHPNamespace",
        "name",
        "underscoreCase",
        "constant",
        "camelCase",
        "camelCaseVar",
        "paths",
        "browserSync",
        "dir",
        "cert",
        "caCert",
        "key",
        "themeConfig",
        "php",
        "src",
        "dest",
        "styles",
        "editorSrc",
        "editorSrcDir",
        "editorDest",
        "srcDir",
        "scripts",
        "images",
        "languages",
        "stringReplaceSrc",
        "filesToCopy",
        "concat",
        "additionalFilesToCopy",
        "filePath",
        "push"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;AAIA;;AAKA;;;;AANO,IAAMA,WAAW,GAAGC,OAAO,CAAC,mBAAD,CAAP,EAApB;;;AAQP;AACO,IAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,EAAjB,C,CAEP;;;AACO,IAAMC,MAAM,GAAKF,OAAO,CAACG,GAAR,CAAYC,QAAZ,KAAyB,YAA1C,C,CAEP;;;AACA,IAAMC,MAAM,GAAG,4BAAf,C,CAEA;;AACO,IAAMC,aAAa,GAAGC,iBAAKC,SAAL,WAAkBT,QAAlB,iBAAiCM,MAAM,CAACI,KAAP,CAAaC,IAA9C,EAAtB,C,CAEP;;;;AACO,IAAMC,SAAS,aAAMZ,QAAN,YAAf,C,CAEP;;;AACO,IAAMa,aAAa,aAAMN,aAAN,YAAnB,C,CAEP;;;AACO,IAAMO,YAAY,GAAG;AAC3BC,EAAAA,GAAG,YAAKf,QAAL,sBADwB;AAE3BgB,EAAAA,QAAQ,YAAKhB,QAAL,oBAFmB;AAG3BiB,EAAAA,eAAe,EAAE;AAHU,CAArB,C,CAMP;;;AACO,IAAMC,iBAAiB,GAAG;AAChCC,EAAAA,MAAM,EAAU,yBADgB;AAEhCC,EAAAA,YAAY,EAAI,gBAFgB;AAGhCT,EAAAA,IAAI,EAAY,QAHgB;AAIhCU,EAAAA,IAAI,EAAY,QAJgB;AAKhCC,EAAAA,cAAc,EAAE,QALgB;AAMhCC,EAAAA,QAAQ,EAAQ,QANgB;AAOhCC,EAAAA,SAAS,EAAO,OAPgB;AAQhCC,EAAAA,YAAY,EAAI;AARgB,CAA1B,C,CAWP;;;AACA,IAAIC,KAAK,GAAG;AACXd,EAAAA,SAAS,EAAEA,SADA;AAEXe,EAAAA,WAAW,EAAE;AACZC,IAAAA,GAAG,YAAK5B,QAAL,iBADS;AAEZ6B,IAAAA,IAAI,YAAK7B,QAAL,8CAFQ;AAGZ8B,IAAAA,MAAM,YAAK9B,QAAL,mDAHM;AAIZ+B,IAAAA,GAAG,YAAK/B,QAAL;AAJS,GAFF;AAQXM,EAAAA,MAAM,EAAE;AACP0B,IAAAA,WAAW,YAAKhC,QAAL;AADJ,GARG;AAWXiC,EAAAA,GAAG,EAAE;AACJC,IAAAA,GAAG,EAAE,WACDlC,QADC,2BAEAA,QAFA,kCAGAA,QAHA,+BAIAA,QAJA,oBADD;AAOJmC,IAAAA,IAAI,YAAKnC,QAAL;AAPA,GAXM;AAoBXoC,EAAAA,MAAM,EAAE;AACPC,IAAAA,SAAS,EAAE,WACPzB,SADO,+BAEV;AAFU,eAGNA,SAHM,wBADJ;AAMP0B,IAAAA,YAAY,YAAK1B,SAAL,oBANL;AAOP2B,IAAAA,UAAU,YAAK3B,SAAL,gBAPH;AAQPsB,IAAAA,GAAG,EAAE,WACDtB,SADC,wBAEJ;AAFI,eAGAA,SAHA,yBAIJ;AAJI,eAKAA,SALA,8BARE;AAeP4B,IAAAA,MAAM,YAAK5B,SAAL,aAfC;AAgBPuB,IAAAA,IAAI,YAAKvB,SAAL;AAhBG,GApBG;AAsCX6B,EAAAA,OAAO,EAAE;AACRP,IAAAA,GAAG,EAAE,WACDtB,SADC,sBAEJ;AAFI,eAGAA,SAHA,sBADG;AAMR4B,IAAAA,MAAM,YAAK5B,SAAL,YANE;AAORuB,IAAAA,IAAI,YAAKvB,SAAL;AAPI,GAtCE;AA+CX8B,EAAAA,MAAM,EAAE;AACPR,IAAAA,GAAG,YAAKtB,SAAL,+CADI;AAEPuB,IAAAA,IAAI,YAAKvB,SAAL;AAFG,GA/CG;AAmDX+B,EAAAA,SAAS,EAAE;AACVT,IAAAA,GAAG,EAAE,WACDlC,QADC,2BAEAA,QAFA,kCAGAA,QAHA,+BAIAA,QAJA,oBADK;AAOVmC,IAAAA,IAAI,YAAKnC,QAAL,wBAA2BkB,iBAAiB,CAACP,IAA7C;AAPM,GAnDA;AA4DX,YAAQ;AACPuB,IAAAA,GAAG,EAAE,EADE;AAEPC,IAAAA,IAAI,YAAK5B,aAAL,MAFG;AAGPqC,IAAAA,gBAAgB,EAAE;AAHX;AA5DG,CAAZ,C,CAmEA;;;;;;;;AACA,uBAAsBtC,MAAM,UAAN,CAAcuC,WAAd,CAA0BC,MAA1B,CAAkCxC,MAAM,UAAN,CAAcyC,qBAAhD,CAAtB,8HAAgG;AAAA,QAAtFC,QAAsF;AAC/FtB,IAAAA,KAAK,UAAL,CAAaQ,GAAb,CAAiBe,IAAjB,WAAyBjD,QAAzB,cAAqCgD,QAArC;AACA,G,CAED;;;;;;;;;;;;;;;;;AACA,IAAI7C,MAAJ,EAAY;AACXuB,EAAAA,KAAK,CAACO,GAAN,CAAUE,IAAV,aAAoB5B,aAApB;AACAmB,EAAAA,KAAK,CAACU,MAAN,CAAaD,IAAb,aAAuBtB,aAAvB;AACAa,EAAAA,KAAK,CAACU,MAAN,CAAaG,UAAb,aAA6B1B,aAA7B;AACAa,EAAAA,KAAK,CAACe,OAAN,CAAcN,IAAd,aAAwBtB,aAAxB;AACAa,EAAAA,KAAK,CAACgB,MAAN,CAAaP,IAAb,aAAuBtB,aAAvB;AACAa,EAAAA,KAAK,CAACiB,SAAN,GAAkB;AACjBT,IAAAA,GAAG,YAAK3B,aAAL,cADc;AAEjB4B,IAAAA,IAAI,YAAK5B,aAAL,wBAAgCD,MAAM,CAACI,KAAP,CAAaC,IAA7C;AAFa,GAAlB;AAIA",
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nexport const gulpPlugins = require('gulp-load-plugins')();\nimport path from 'path';\n\n/**\n * Internal dependencies\n */\nimport {getThemeConfig} from './utils';\n\n// Root path is where npm run commands happen\nexport const rootPath = process.cwd();\n\n// Dev or production\nexport const isProd = ( process.env.NODE_ENV === 'production' );\n\n// get the config\nconst config = getThemeConfig();\n\n// directory for the production theme\nexport const prodThemePath = path.normalize(`${rootPath}/../${config.theme.slug}`);\n\n// directory for assets (CSS, JS, images)\nexport const assetsDir = `${rootPath}/assets`;\n\n// directory for assets (CSS, JS, images) in production\nexport const prodAssetsDir = `${prodThemePath}/assets`;\n\n// PHPCS options\nexport const PHPCSOptions = {\n\tbin: `${rootPath}/vendor/bin/phpcs`,\n\tstandard: `${rootPath}/phpcs.xml.dist`,\n\twarningSeverity: 0\n};\n\n// Theme config name fields and their defaults\nexport const nameFieldDefaults = {\n\tauthor        : 'The WP Rig Contributors',\n\tPHPNamespace  : 'WP_Rig\\\\WP_Rig',\n\tslug          : 'wp-rig',\n\tname          : 'WP Rig',\n\tunderscoreCase: 'wp_rig',\n\tconstant      : 'WP_RIG',\n\tcamelCase     : 'WpRig',\n\tcamelCaseVar  : 'wpRig',\n};\n\n// Project paths\nlet paths = {\n\tassetsDir: assetsDir,\n\tbrowserSync: {\n\t\tdir: `${rootPath}/BrowserSync`,\n\t\tcert: `${rootPath}/BrowserSync/wp-rig-browser-sync-cert.crt`,\n\t\tcaCert: `${rootPath}/BrowserSync/wp-rig-browser-sync-root-cert.crt`,\n\t\tkey: `${rootPath}/BrowserSync/wp-rig-browser-sync-key.key`\n\t},\n\tconfig: {\n\t\tthemeConfig: `${rootPath}/config/themeConfig.js`\n\t},\n\tphp: {\n\t\tsrc: [\n\t\t\t`${rootPath}/**/*.php`,\n\t\t\t`!${rootPath}/optional/**/*.*`,\n\t\t\t`!${rootPath}/tests/**/*.*`,\n\t\t\t`!${rootPath}/vendor/**/*.*`,\n\t\t],\n\t\tdest: `${rootPath}/`\n\t},\n\tstyles: {\n\t\teditorSrc: [\n\t\t\t`${assetsDir}/css/src/editor/**/*.css`,\n\t\t\t// Ignore partial files.\n\t\t\t`!${assetsDir}/css/src/**/_*.css`,\n\t\t],\n\t\teditorSrcDir: `${assetsDir}/css/src/editor`,\n\t\teditorDest: `${assetsDir}/css/editor`,\n\t\tsrc: [\n\t\t\t`${assetsDir}/css/src/**/*.css`,\n\t\t\t// Ignore partial files.\n\t\t\t`!${assetsDir}/css/src/**/_*.css`,\n\t\t\t// Ignore editor source css.\n\t\t\t`!${assetsDir}/css/src/editor/**/*.css`\n\t\t],\n\t\tsrcDir: `${assetsDir}/css/src`,\n\t\tdest: `${assetsDir}/css`\n\t},\n\tscripts: {\n\t\tsrc: [\n\t\t\t`${assetsDir}/js/src/**/*.js`,\n\t\t\t// Ignore partial files.\n\t\t\t`!${assetsDir}/js/src/**/_*.js`,\n\t\t],\n\t\tsrcDir: `${assetsDir}/js/src`,\n\t\tdest: `${assetsDir}/js`\n\t},\n\timages: {\n\t\tsrc: `${assetsDir}/images/src/**/*.{jpg,JPG,png,svg,gif,GIF}`,\n\t\tdest: `${assetsDir}/images/`\n\t},\n\tlanguages: {\n\t\tsrc: [\n\t\t\t`${rootPath}/**/*.php`,\n\t\t\t`!${rootPath}/optional/**/*.*`,\n\t\t\t`!${rootPath}/tests/**/*.*`,\n\t\t\t`!${rootPath}/vendor/**/*.*`,\n\t\t],\n\t\tdest: `${rootPath}/languages/${nameFieldDefaults.slug}.pot`\n\t},\n\texport: {\n\t\tsrc: [],\n\t\tdest: `${prodThemePath}/`,\n\t\tstringReplaceSrc: [`style.css`]\n\t}\n};\n\n// Add rootPath to filesToCopy and additionalFilesToCopy\nfor ( let filePath of config.export.filesToCopy.concat( config.export.additionalFilesToCopy ) ) {\n\tpaths.export.src.push(`${rootPath}/${filePath}`);\n}\n\n// Override paths for production\nif( isProd ){\n\tpaths.php.dest = `${prodThemePath}/`;\n\tpaths.styles.dest = `${prodAssetsDir}/css/`;\n\tpaths.styles.editorDest = `${prodAssetsDir}/css/editor/`;\n\tpaths.scripts.dest = `${prodAssetsDir}/js/`;\n\tpaths.images.dest = `${prodAssetsDir}/images/`;\n\tpaths.languages = {\n\t\tsrc: `${prodThemePath}/**/*.php`,\n\t\tdest: `${prodThemePath}/languages/${config.theme.slug}.pot`\n\t};\n}\n\nexport {paths};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561222234000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"filename\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/utils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/utils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/utils.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getThemeConfig = getThemeConfig;\nexports.getStringReplacementTasks = getStringReplacementTasks;\nexports.logError = logError;\nexports.createProdDir = createProdDir;\nexports.gulpRelativeDest = gulpRelativeDest;\nexports.backslashToForwardSlash = backslashToForwardSlash;\nexports.configValueDefined = configValueDefined;\nexports.appendBaseToFilePathArray = appendBaseToFilePathArray;\nexports.getDefaultConfig = void 0;\n\nvar _importFresh = _interopRequireDefault(require(\"import-fresh\"));\n\nvar _fancyLog = _interopRequireDefault(require(\"fancy-log\"));\n\nvar _ansiColors = _interopRequireDefault(require(\"ansi-colors\"));\n\nvar _rimraf = _interopRequireDefault(require(\"rimraf\"));\n\nvar _mkdirp = _interopRequireDefault(require(\"mkdirp\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _mississippi = require(\"mississippi\");\n\nvar _constants = require(\"./constants\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\nvar getDefaultConfig = function getDefaultConfig() {\n  return require(\"\".concat(_constants.rootPath, \"/config/config.default.json\"));\n};\n/**\n * Get theme configuration.\n *\n * @param {bool} uncached Whether to get an uncached version of the configuration. Defaults to false.\n * @return {object} Theme configuration data.\n */\n\n\nexports.getDefaultConfig = getDefaultConfig;\n\nfunction getThemeConfig() {\n  var uncached = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var config;\n  var configPath = \"\".concat(process.cwd(), \"/config/themeConfig.js\");\n\n  if (uncached) {\n    config = (0, _importFresh[\"default\"])(configPath);\n  } else {\n    config = require(configPath);\n  }\n\n  if (!config.theme.slug) {\n    config.theme.slug = config.theme.name.toLowerCase().replace(/[\\s_]+/g, '-').replace(/[^a-z0-9-]+/g, '');\n  }\n\n  if (!config.theme.underscoreCase) {\n    config.theme.underscoreCase = config.theme.slug.replace(/-/g, '_');\n  }\n\n  if (!config.theme.constant) {\n    config.theme.constant = config.theme.underscoreCase.toUpperCase();\n  }\n\n  if (!config.theme.camelCase) {\n    config.theme.camelCase = config.theme.slug.split('-').map(function (part) {\n      return part[0].toUpperCase() + part.substring(1);\n    }).join('');\n  }\n\n  if (!config.theme.camelCaseVar) {\n    config.theme.camelCaseVar = config.theme.camelCase[0].toLowerCase() + config.theme.camelCase.substring(1);\n  }\n\n  return config;\n}\n/**\n * Get string replacement streams to push into a pump process.\n *\n * @return {array} List of tasks.\n */\n\n\nfunction getStringReplacementTasks() {\n  // Get a copy of the config\n  var config = getThemeConfig(_constants.isProd);\n  var stringReplacementTasks = Object.keys(_constants.nameFieldDefaults).map(function (nameField) {\n    return _constants.gulpPlugins.stringReplace( // Backslashes must be double escaped for regex\n    _constants.nameFieldDefaults[nameField].replace(/\\\\/g, '\\\\\\\\'), config.theme[nameField], {\n      logs: {\n        enabled: false\n      },\n      searchValue: 'regex'\n    });\n  }); // Return a single stream containing all the\n  // string replacement tasks\n\n  return _mississippi.pipeline.obj(stringReplacementTasks);\n}\n\nfunction logError() {\n  var errorTitle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'gulp';\n  return _constants.gulpPlugins.plumber({\n    errorHandler: _constants.gulpPlugins.notify.onError({\n      title: errorTitle,\n      message: '<%= error.message %>'\n    })\n  });\n}\n\nfunction createProdDir() {\n  (0, _fancyLog[\"default\"])(_ansiColors[\"default\"].green(\"Creating the production theme directory \".concat(_constants.prodThemePath))); // Check if the prod theme directory exists\n\n  if (_fs[\"default\"].existsSync(_constants.prodThemePath)) {\n    // and remove it\n    _rimraf[\"default\"].sync(_constants.prodThemePath);\n  } // Create the prod theme directory\n\n\n  (0, _mkdirp[\"default\"])(_constants.prodThemePath);\n}\n\nfunction gulpRelativeDest(file) {\n  var relativeProdFilePath = file.base.replace(file.cwd, _constants.prodThemePath);\n  return relativeProdFilePath;\n}\n\nfunction backslashToForwardSlash(path) {\n  var replace_fn = function replace_fn(p) {\n    return p.replace(/\\\\/g, '/');\n  };\n\n  if (Array.isArray(path)) {\n    var paths = [];\n    path.forEach(function (p) {\n      return paths.push(replace_fn(p));\n    });\n    return paths;\n  }\n\n  return replace_fn(path);\n}\n/**\n * Determine if a config value is defined\n * @param {string} configValueLocation a config value path to search for, e.g. 'config.theme.slug'\n * @return {bool}\n */\n\n\nfunction configValueDefined(configValueLocation) {\n  // We won't find anything if the location to search is empty\n  if (0 === configValueLocation.length) {\n    return false;\n  } // Get a copy of the config\n\n\n  var config = getThemeConfig(_constants.isProd); // Turn the value location given into an array\n\n  var configValueLocationArray = configValueLocation.split('.'); // Remove config from the array if present\n\n  if ('config' === configValueLocationArray[0]) {\n    configValueLocationArray.shift();\n  } // Loop through the config value paths passed\n\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = configValueLocationArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var currentValueLocation = _step.value;\n\n      // Check if there is a match in the current object level\n      if (!config.hasOwnProperty(currentValueLocation)) {\n        // Return false if no match\n        return false;\n      } // Move the config object to the next level\n\n\n      config = config[currentValueLocation];\n    } // If we've made it this far there is a match for the given config value path\n\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Append a base file path to a list of files\n * @param {string|array} filePaths the file or files to append the base path to\n * @param {string} basePath the base path to append\n */\n\n\nfunction appendBaseToFilePathArray(filePaths, basePath) {\n  if (!Array.isArray(filePaths)) {\n    return \"\".concat(basePath, \"/\").concat(filePaths);\n  }\n\n  var output = []; // Loop through all file paths\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = filePaths[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var filePath = _step2.value;\n      // And push them into output with the base added\n      output.push(\"\".concat(basePath, \"/\").concat(filePath));\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n        _iterator2[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return output;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "getDefaultConfig",
        "require",
        "rootPath",
        "getThemeConfig",
        "uncached",
        "config",
        "configPath",
        "process",
        "cwd",
        "theme",
        "slug",
        "name",
        "toLowerCase",
        "replace",
        "underscoreCase",
        "constant",
        "toUpperCase",
        "camelCase",
        "split",
        "map",
        "part",
        "substring",
        "join",
        "camelCaseVar",
        "getStringReplacementTasks",
        "isProd",
        "stringReplacementTasks",
        "Object",
        "keys",
        "nameFieldDefaults",
        "nameField",
        "gulpPlugins",
        "stringReplace",
        "logs",
        "enabled",
        "searchValue",
        "pipeline",
        "obj",
        "logError",
        "errorTitle",
        "plumber",
        "errorHandler",
        "notify",
        "onError",
        "title",
        "message",
        "createProdDir",
        "colors",
        "green",
        "prodThemePath",
        "fs",
        "existsSync",
        "rimraf",
        "sync",
        "gulpRelativeDest",
        "file",
        "relativeProdFilePath",
        "base",
        "backslashToForwardSlash",
        "path",
        "replace_fn",
        "p",
        "Array",
        "isArray",
        "paths",
        "forEach",
        "push",
        "configValueDefined",
        "configValueLocation",
        "length",
        "configValueLocationArray",
        "shift",
        "currentValueLocation",
        "hasOwnProperty",
        "appendBaseToFilePathArray",
        "filePaths",
        "basePath",
        "output",
        "filePath"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;;;;;;;;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAKA;;;;AAHA;;;AAWO,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAMC,OAAO,WAAIC,mBAAJ,iCAAb;AAAA,CAAzB;AAEP;;;;;;;;;;AAMO,SAASC,cAAT,GAA0C;AAAA,MAAjBC,QAAiB,uEAAR,KAAQ;AAEhD,MAAIC,MAAJ;AACA,MAAMC,UAAU,aAAKC,OAAO,CAACC,GAAR,EAAL,2BAAhB;;AAEA,MAAKJ,QAAL,EAAgB;AACfC,IAAAA,MAAM,GAAG,6BAAYC,UAAZ,CAAT;AACA,GAFD,MAEO;AACND,IAAAA,MAAM,GAAGJ,OAAO,CAACK,UAAD,CAAhB;AACA;;AAED,MAAK,CAAED,MAAM,CAACI,KAAP,CAAaC,IAApB,EAA2B;AAC1BL,IAAAA,MAAM,CAACI,KAAP,CAAaC,IAAb,GAAoBL,MAAM,CAACI,KAAP,CAAaE,IAAb,CAAkBC,WAAlB,GAAgCC,OAAhC,CAAyC,SAAzC,EAAoD,GAApD,EAA0DA,OAA1D,CAAmE,cAAnE,EAAmF,EAAnF,CAApB;AACA;;AAED,MAAK,CAAER,MAAM,CAACI,KAAP,CAAaK,cAApB,EAAqC;AACpCT,IAAAA,MAAM,CAACI,KAAP,CAAaK,cAAb,GAA8BT,MAAM,CAACI,KAAP,CAAaC,IAAb,CAAkBG,OAAlB,CAA2B,IAA3B,EAAiC,GAAjC,CAA9B;AACA;;AAED,MAAK,CAAER,MAAM,CAACI,KAAP,CAAaM,QAApB,EAA+B;AAC9BV,IAAAA,MAAM,CAACI,KAAP,CAAaM,QAAb,GAAwBV,MAAM,CAACI,KAAP,CAAaK,cAAb,CAA4BE,WAA5B,EAAxB;AACA;;AAED,MAAK,CAAEX,MAAM,CAACI,KAAP,CAAaQ,SAApB,EAAgC;AAC/BZ,IAAAA,MAAM,CAACI,KAAP,CAAaQ,SAAb,GAAyBZ,MAAM,CAACI,KAAP,CAAaC,IAAb,CACvBQ,KADuB,CAChB,GADgB,EAEvBC,GAFuB,CAElB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQJ,WAAR,KAAwBI,IAAI,CAACC,SAAL,CAAgB,CAAhB,CAA5B;AAAA,KAFc,EAGvBC,IAHuB,CAGjB,EAHiB,CAAzB;AAIA;;AAED,MAAK,CAAEjB,MAAM,CAACI,KAAP,CAAac,YAApB,EAAmC;AAClClB,IAAAA,MAAM,CAACI,KAAP,CAAac,YAAb,GAA4BlB,MAAM,CAACI,KAAP,CAAaQ,SAAb,CAAuB,CAAvB,EAA0BL,WAA1B,KAA0CP,MAAM,CAACI,KAAP,CAAaQ,SAAb,CAAuBI,SAAvB,CAAkC,CAAlC,CAAtE;AACA;;AAED,SAAOhB,MAAP;AACA;AAED;;;;;;;AAKO,SAASmB,yBAAT,GAAqC;AAC3C;AACA,MAAMnB,MAAM,GAAGF,cAAc,CAACsB,iBAAD,CAA7B;AAEA,MAAMC,sBAAsB,GAAGC,MAAM,CAACC,IAAP,CAAaC,4BAAb,EAAiCV,GAAjC,CAAsC,UAAAW,SAAS,EAAI;AACjF,WAAOC,uBAAYC,aAAZ,EACN;AACAH,iCAAmBC,SAAnB,EAA+BjB,OAA/B,CAAuC,KAAvC,EAA6C,MAA7C,CAFM,EAGNR,MAAM,CAACI,KAAP,CAAcqB,SAAd,CAHM,EAIN;AACCG,MAAAA,IAAI,EAAE;AACLC,QAAAA,OAAO,EAAE;AADJ,OADP;AAICC,MAAAA,WAAW,EAAE;AAJd,KAJM,CAAP;AAWA,GAZ8B,CAA/B,CAJ2C,CAkB3C;AACA;;AACA,SAAOC,sBAASC,GAAT,CAAcX,sBAAd,CAAP;AACA;;AAEM,SAASY,QAAT,GAAqC;AAAA,MAAnBC,UAAmB,uEAAR,MAAQ;AAC3C,SAAOR,uBAAYS,OAAZ,CAAoB;AAC1BC,IAAAA,YAAY,EAAEV,uBAAYW,MAAZ,CAAmBC,OAAnB,CAA2B;AACxCC,MAAAA,KAAK,EAAEL,UADiC;AAExCM,MAAAA,OAAO,EAAE;AAF+B,KAA3B;AADY,GAApB,CAAP;AAMA;;AAEM,SAASC,aAAT,GAAyB;AAC/B,4BAAIC,uBAAOC,KAAP,mDAAwDC,wBAAxD,EAAJ,EAD+B,CAE5B;;AACA,MAAKC,eAAGC,UAAH,CAAcF,wBAAd,CAAL,EAAoC;AAChC;AACAG,uBAAOC,IAAP,CAAYJ,wBAAZ;AACH,GAN2B,CAQ5B;;;AACH,0BAAOA,wBAAP;AACA;;AAEM,SAASK,gBAAT,CAA2BC,IAA3B,EAAkC;AACxC,MAAMC,oBAAoB,GAAGD,IAAI,CAACE,IAAL,CAAU5C,OAAV,CAAkB0C,IAAI,CAAC/C,GAAvB,EAA4ByC,wBAA5B,CAA7B;AACA,SAAOO,oBAAP;AACA;;AAEM,SAASE,uBAAT,CAAiCC,IAAjC,EAAuC;AAC7C,MAAIC,UAAU,GAAK,SAAfA,UAAe,CAAAC,CAAC;AAAA,WAAIA,CAAC,CAAChD,OAAF,CAAU,KAAV,EAAiB,GAAjB,CAAJ;AAAA,GAApB;;AACA,MAAKiD,KAAK,CAACC,OAAN,CAAcJ,IAAd,CAAL,EAA2B;AAC1B,QAAIK,KAAK,GAAG,EAAZ;AACAL,IAAAA,IAAI,CAACM,OAAL,CAAc,UAAAJ,CAAC;AAAA,aAAIG,KAAK,CAACE,IAAN,CAAYN,UAAU,CAACC,CAAD,CAAtB,CAAJ;AAAA,KAAf;AACA,WAAOG,KAAP;AACA;;AACD,SAAOJ,UAAU,CAACD,IAAD,CAAjB;AACA;AAED;;;;;;;AAKO,SAASQ,kBAAT,CAA4BC,mBAA5B,EAAiD;AAEvD;AACA,MAAI,MAAMA,mBAAmB,CAACC,MAA9B,EAAuC;AACtC,WAAO,KAAP;AACA,GALsD,CAOvD;;;AACA,MAAIhE,MAAM,GAAGF,cAAc,CAACsB,iBAAD,CAA3B,CARuD,CAUvD;;AACA,MAAI6C,wBAAwB,GAAGF,mBAAmB,CAAClD,KAApB,CAA0B,GAA1B,CAA/B,CAXuD,CAavD;;AACA,MAAI,aAAaoD,wBAAwB,CAAC,CAAD,CAAzC,EAA+C;AAC9CA,IAAAA,wBAAwB,CAACC,KAAzB;AACA,GAhBsD,CAkBvD;;;AAlBuD;AAAA;AAAA;;AAAA;AAmBvD,yBAAkCD,wBAAlC,8HAA6D;AAAA,UAAnDE,oBAAmD;;AAE5D;AACA,UAAI,CAAEnE,MAAM,CAACoE,cAAP,CAAsBD,oBAAtB,CAAN,EAAoD;AACnD;AACA,eAAO,KAAP;AACA,OAN2D,CAQ5D;;;AACAnE,MAAAA,MAAM,GAAGA,MAAM,CAACmE,oBAAD,CAAf;AACA,KA7BsD,CA+BvD;;AA/BuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgCvD,SAAO,IAAP;AACA;AAED;;;;;;;AAKO,SAASE,yBAAT,CAAmCC,SAAnC,EAA8CC,QAA9C,EAAwD;AAC9D,MAAK,CAAEd,KAAK,CAACC,OAAN,CAAcY,SAAd,CAAP,EAAkC;AACjC,qBAAUC,QAAV,cAAsBD,SAAtB;AACA;;AAED,MAAIE,MAAM,GAAG,EAAb,CAL8D,CAO9D;;AAP8D;AAAA;AAAA;;AAAA;AAQ9D,0BAAsBF,SAAtB,mIAAkC;AAAA,UAAxBG,QAAwB;AACjC;AACAD,MAAAA,MAAM,CAACX,IAAP,WAAeU,QAAf,cAA2BE,QAA3B;AACA;AAX6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAa9D,SAAOD,MAAP;AACA",
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport importFresh from 'import-fresh';\nimport log from 'fancy-log';\nimport colors from 'ansi-colors';\nimport rimraf from 'rimraf';\nimport mkdirp from 'mkdirp';\nimport fs from 'fs';\nimport { pipeline } from 'mississippi';\n\n/**\n * Internal dependencies\n */\nimport {\n\tgulpPlugins,\n\tnameFieldDefaults,\n\tprodThemePath,\n\tisProd,\n\trootPath\n} from './constants';\n\nexport const getDefaultConfig = () => require(`${rootPath}/config/config.default.json`);\n\n/**\n * Get theme configuration.\n *\n * @param {bool} uncached Whether to get an uncached version of the configuration. Defaults to false.\n * @return {object} Theme configuration data.\n */\nexport function getThemeConfig( uncached=false ) {\n\n\tlet config;\n\tconst configPath =`${process.cwd()}/config/themeConfig.js`;\n\n\tif ( uncached ) {\n\t\tconfig = importFresh(configPath);\n\t} else {\n\t\tconfig = require(configPath);\n\t}\n\n\tif ( ! config.theme.slug ) {\n\t\tconfig.theme.slug = config.theme.name.toLowerCase().replace( /[\\s_]+/g, '-' ).replace( /[^a-z0-9-]+/g, '' );\n\t}\n\n\tif ( ! config.theme.underscoreCase ) {\n\t\tconfig.theme.underscoreCase = config.theme.slug.replace( /-/g, '_' );\n\t}\n\n\tif ( ! config.theme.constant ) {\n\t\tconfig.theme.constant = config.theme.underscoreCase.toUpperCase();\n\t}\n\n\tif ( ! config.theme.camelCase ) {\n\t\tconfig.theme.camelCase = config.theme.slug\n\t\t\t.split( '-' )\n\t\t\t.map( part => part[0].toUpperCase() + part.substring( 1 ) )\n\t\t\t.join( '' );\n\t}\n\n\tif ( ! config.theme.camelCaseVar ) {\n\t\tconfig.theme.camelCaseVar = config.theme.camelCase[0].toLowerCase() + config.theme.camelCase.substring( 1 );\n\t}\n\n\treturn config;\n}\n\n/**\n * Get string replacement streams to push into a pump process.\n *\n * @return {array} List of tasks.\n */\nexport function getStringReplacementTasks() {\n\t// Get a copy of the config\n\tconst config = getThemeConfig(isProd);\n\n\tconst stringReplacementTasks = Object.keys( nameFieldDefaults ).map( nameField => {\n\t\treturn gulpPlugins.stringReplace(\n\t\t\t// Backslashes must be double escaped for regex\n\t\t\tnameFieldDefaults[ nameField ].replace(/\\\\/g,'\\\\\\\\'),\n\t\t\tconfig.theme[ nameField ],\n\t\t\t{\n\t\t\t\tlogs: {\n\t\t\t\t\tenabled: false\n\t\t\t\t},\n\t\t\t\tsearchValue: 'regex'\n\t\t\t}\n\t\t);\n\t});\n\n\t// Return a single stream containing all the\n\t// string replacement tasks\n\treturn pipeline.obj( stringReplacementTasks );\n}\n\nexport function logError(errorTitle='gulp') {\n\treturn gulpPlugins.plumber({\n\t\terrorHandler: gulpPlugins.notify.onError({\n\t\t\ttitle: errorTitle,\n\t\t\tmessage: '<%= error.message %>'\n\t\t})\n\t});\n}\n\nexport function createProdDir() {\n\tlog(colors.green(`Creating the production theme directory ${prodThemePath}`));\n    // Check if the prod theme directory exists\n    if ( fs.existsSync(prodThemePath) ) {\n        // and remove it\n        rimraf.sync(prodThemePath);\n    }\n\n    // Create the prod theme directory\n\tmkdirp(prodThemePath);\n}\n\nexport function gulpRelativeDest( file ) {\n\tconst relativeProdFilePath = file.base.replace(file.cwd, prodThemePath);\n\treturn relativeProdFilePath;\n}\n\nexport function backslashToForwardSlash(path) {\n\tlet replace_fn = ( p => p.replace(/\\\\/g, '/') );\n\tif ( Array.isArray(path) ) {\n\t\tlet paths = [];\n\t\tpath.forEach( p => paths.push( replace_fn(p) ) );\n\t\treturn paths;\n\t}\n\treturn replace_fn(path);\n}\n\n/**\n * Determine if a config value is defined\n * @param {string} configValueLocation a config value path to search for, e.g. 'config.theme.slug'\n * @return {bool}\n */\nexport function configValueDefined(configValueLocation) {\n\n\t// We won't find anything if the location to search is empty\n\tif( 0 === configValueLocation.length ) {\n\t\treturn false;\n\t}\n\n\t// Get a copy of the config\n\tlet config = getThemeConfig(isProd);\n\n\t// Turn the value location given into an array\n\tlet configValueLocationArray = configValueLocation.split('.');\n\n\t// Remove config from the array if present\n\tif( 'config' === configValueLocationArray[0] ) {\n\t\tconfigValueLocationArray.shift();\n\t}\n\n\t// Loop through the config value paths passed\n\tfor ( let currentValueLocation of configValueLocationArray ) {\n\n\t\t// Check if there is a match in the current object level\n\t\tif( ! config.hasOwnProperty(currentValueLocation) ) {\n\t\t\t// Return false if no match\n\t\t\treturn false;\n\t\t}\n\n\t\t// Move the config object to the next level\n\t\tconfig = config[currentValueLocation];\n\t}\n\n\t// If we've made it this far there is a match for the given config value path\n\treturn true;\n}\n\n/**\n * Append a base file path to a list of files\n * @param {string|array} filePaths the file or files to append the base path to\n * @param {string} basePath the base path to append\n */\nexport function appendBaseToFilePathArray(filePaths, basePath) {\n\tif ( ! Array.isArray(filePaths) ) {\n\t\treturn `${basePath}/${filePaths}`;\n\t}\n\n\tlet output = [];\n\n\t// Loop through all file paths\n\tfor ( let filePath of filePaths ) {\n\t\t// And push them into output with the base added\n\t\toutput.push(`${basePath}/${filePath}`);\n\t}\n\n\treturn output;\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561222234000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/config\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"filename\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/config/themeConfig.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/config",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/config/themeConfig.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/config/themeConfig.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/config/themeConfig.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/config",
        "sourceFileName": "themeConfig.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar fs = require('fs');\n\nvar custom = __dirname + '/config.json';\nvar local = __dirname + '/config.local.json';\n\nvar defaultConfig = require(__dirname + '/config.default.json');\n\nvar hasCustom = fs.existsSync(custom);\nvar hasLocal = fs.existsSync(local);\n\nif (hasCustom || hasLocal) {\n  var merge = require('deepmerge');\n\n  var config = defaultConfig;\n\n  if (hasCustom) {\n    config = merge(config, require(custom));\n  }\n\n  if (hasLocal) {\n    config = merge(config, require(local));\n  }\n\n  module.exports = config;\n} else {\n  module.exports = defaultConfig;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRoZW1lQ29uZmlnLmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsImN1c3RvbSIsIl9fZGlybmFtZSIsImxvY2FsIiwiZGVmYXVsdENvbmZpZyIsImhhc0N1c3RvbSIsImV4aXN0c1N5bmMiLCJoYXNMb2NhbCIsIm1lcmdlIiwiY29uZmlnIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EsSUFBTUEsRUFBRSxHQUFHQyxPQUFPLENBQUUsSUFBRixDQUFsQjs7QUFFQSxJQUFNQyxNQUFNLEdBQUdDLFNBQVMsR0FBRyxjQUEzQjtBQUNBLElBQU1DLEtBQUssR0FBR0QsU0FBUyxHQUFHLG9CQUExQjs7QUFDQSxJQUFNRSxhQUFhLEdBQUdKLE9BQU8sQ0FBQ0UsU0FBUyxHQUFHLHNCQUFiLENBQTdCOztBQUVBLElBQU1HLFNBQVMsR0FBR04sRUFBRSxDQUFDTyxVQUFILENBQWVMLE1BQWYsQ0FBbEI7QUFDQSxJQUFNTSxRQUFRLEdBQUdSLEVBQUUsQ0FBQ08sVUFBSCxDQUFlSCxLQUFmLENBQWpCOztBQUVBLElBQUtFLFNBQVMsSUFBSUUsUUFBbEIsRUFBNkI7QUFDNUIsTUFBTUMsS0FBSyxHQUFHUixPQUFPLENBQUUsV0FBRixDQUFyQjs7QUFDQSxNQUFJUyxNQUFNLEdBQUdMLGFBQWI7O0FBQ0EsTUFBS0MsU0FBTCxFQUFpQjtBQUNoQkksSUFBQUEsTUFBTSxHQUFHRCxLQUFLLENBQUNDLE1BQUQsRUFBUVQsT0FBTyxDQUFFQyxNQUFGLENBQWYsQ0FBZDtBQUNBOztBQUNELE1BQUtNLFFBQUwsRUFBZ0I7QUFDZkUsSUFBQUEsTUFBTSxHQUFHRCxLQUFLLENBQUNDLE1BQUQsRUFBUVQsT0FBTyxDQUFFRyxLQUFGLENBQWYsQ0FBZDtBQUNHOztBQUNETyxFQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUJGLE1BQWpCO0FBQ0gsQ0FWRCxNQVVPO0FBQ05DLEVBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlAsYUFBakI7QUFDQSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYXVzdGludHVkZS9Eb2N1bWVudHMvU3VwcmVtZSBIYXJkd29vZCBGbG9vcnMgSW5jL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmlnLXN1cHJlbWVoYXJkd29vZGZsb29yc2luYy9jb25maWciLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCBmcyA9IHJlcXVpcmUoICdmcycgKTtcblxuY29uc3QgY3VzdG9tID0gX19kaXJuYW1lICsgJy9jb25maWcuanNvbic7XG5jb25zdCBsb2NhbCA9IF9fZGlybmFtZSArICcvY29uZmlnLmxvY2FsLmpzb24nO1xuY29uc3QgZGVmYXVsdENvbmZpZyA9IHJlcXVpcmUoX19kaXJuYW1lICsgJy9jb25maWcuZGVmYXVsdC5qc29uJyApO1xuXG5jb25zdCBoYXNDdXN0b20gPSBmcy5leGlzdHNTeW5jKCBjdXN0b20gKTtcbmNvbnN0IGhhc0xvY2FsID0gZnMuZXhpc3RzU3luYyggbG9jYWwgKTtcblxuaWYgKCBoYXNDdXN0b20gfHwgaGFzTG9jYWwgKSB7XG5cdGNvbnN0IG1lcmdlID0gcmVxdWlyZSggJ2RlZXBtZXJnZScgKTtcblx0bGV0IGNvbmZpZyA9IGRlZmF1bHRDb25maWc7XG5cdGlmICggaGFzQ3VzdG9tICkge1xuXHRcdGNvbmZpZyA9IG1lcmdlKGNvbmZpZyxyZXF1aXJlKCBjdXN0b20gKSk7XG5cdH1cblx0aWYgKCBoYXNMb2NhbCApIHtcblx0XHRjb25maWcgPSBtZXJnZShjb25maWcscmVxdWlyZSggbG9jYWwgKSk7XG4gICAgfVxuICAgIG1vZHVsZS5leHBvcnRzID0gY29uZmlnXG59IGVsc2Uge1xuXHRtb2R1bGUuZXhwb3J0cyA9IGRlZmF1bHRDb25maWc7XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "themeConfig.js"
      ],
      "names": [
        "fs",
        "require",
        "custom",
        "__dirname",
        "local",
        "defaultConfig",
        "hasCustom",
        "existsSync",
        "hasLocal",
        "merge",
        "config",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AACA,IAAMA,EAAE,GAAGC,OAAO,CAAE,IAAF,CAAlB;;AAEA,IAAMC,MAAM,GAAGC,SAAS,GAAG,cAA3B;AACA,IAAMC,KAAK,GAAGD,SAAS,GAAG,oBAA1B;;AACA,IAAME,aAAa,GAAGJ,OAAO,CAACE,SAAS,GAAG,sBAAb,CAA7B;;AAEA,IAAMG,SAAS,GAAGN,EAAE,CAACO,UAAH,CAAeL,MAAf,CAAlB;AACA,IAAMM,QAAQ,GAAGR,EAAE,CAACO,UAAH,CAAeH,KAAf,CAAjB;;AAEA,IAAKE,SAAS,IAAIE,QAAlB,EAA6B;AAC5B,MAAMC,KAAK,GAAGR,OAAO,CAAE,WAAF,CAArB;;AACA,MAAIS,MAAM,GAAGL,aAAb;;AACA,MAAKC,SAAL,EAAiB;AAChBI,IAAAA,MAAM,GAAGD,KAAK,CAACC,MAAD,EAAQT,OAAO,CAAEC,MAAF,CAAf,CAAd;AACA;;AACD,MAAKM,QAAL,EAAgB;AACfE,IAAAA,MAAM,GAAGD,KAAK,CAACC,MAAD,EAAQT,OAAO,CAAEG,KAAF,CAAf,CAAd;AACG;;AACDO,EAAAA,MAAM,CAACC,OAAP,GAAiBF,MAAjB;AACH,CAVD,MAUO;AACNC,EAAAA,MAAM,CAACC,OAAP,GAAiBP,aAAjB;AACA",
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/config",
      "sourcesContent": [
        "'use strict';\nconst fs = require( 'fs' );\n\nconst custom = __dirname + '/config.json';\nconst local = __dirname + '/config.local.json';\nconst defaultConfig = require(__dirname + '/config.default.json' );\n\nconst hasCustom = fs.existsSync( custom );\nconst hasLocal = fs.existsSync( local );\n\nif ( hasCustom || hasLocal ) {\n\tconst merge = require( 'deepmerge' );\n\tlet config = defaultConfig;\n\tif ( hasCustom ) {\n\t\tconfig = merge(config,require( custom ));\n\t}\n\tif ( hasLocal ) {\n\t\tconfig = merge(config,require( local ));\n    }\n    module.exports = config\n} else {\n\tmodule.exports = defaultConfig;\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1561222234000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"filename\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/images.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/images.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/images.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/images.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
        "sourceFileName": "images.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = images;\n\nvar _gulp = require(\"gulp\");\n\nvar _pump = _interopRequireDefault(require(\"pump\"));\n\nvar _constants = require(\"./constants\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\n\n/**\n * Optimize images.\n */\nfunction images(done) {\n  (0, _pump[\"default\"])([(0, _gulp.src)(_constants.paths.images.src), _constants.gulpPlugins.newer(_constants.paths.images.dest), _constants.gulpPlugins.imagemin(), (0, _gulp.dest)(_constants.paths.images.dest)], done);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltYWdlcy5qcyJdLCJuYW1lcyI6WyJpbWFnZXMiLCJkb25lIiwicGF0aHMiLCJzcmMiLCJndWxwUGx1Z2lucyIsIm5ld2VyIiwiZGVzdCIsImltYWdlbWluIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBRUE7Ozs7Ozs7OztBQUdBOztBQUNBOztBQUtBOzs7O0FBSEE7Ozs7QUFLQTs7O0FBR2UsU0FBU0EsTUFBVCxDQUFnQkMsSUFBaEIsRUFBc0I7QUFDakMsd0JBQUssQ0FDRCxlQUFJQyxpQkFBTUYsTUFBTixDQUFhRyxHQUFqQixDQURDLEVBRURDLHVCQUFZQyxLQUFaLENBQWtCSCxpQkFBTUYsTUFBTixDQUFhTSxJQUEvQixDQUZDLEVBR0RGLHVCQUFZRyxRQUFaLEVBSEMsRUFJRCxnQkFBS0wsaUJBQU1GLE1BQU4sQ0FBYU0sSUFBbEIsQ0FKQyxDQUFMLEVBS0dMLElBTEg7QUFNSCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYXVzdGludHVkZS9Eb2N1bWVudHMvU3VwcmVtZSBIYXJkd29vZCBGbG9vcnMgSW5jL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmlnLXN1cHJlbWVoYXJkd29vZGZsb29yc2luYy9ndWxwIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWVudiBlczYgKi9cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHtzcmMsIGRlc3R9IGZyb20gJ2d1bHAnO1xuaW1wb3J0IHB1bXAgZnJvbSAncHVtcCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7cGF0aHMsIGd1bHBQbHVnaW5zfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbi8qKlxuICogT3B0aW1pemUgaW1hZ2VzLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpbWFnZXMoZG9uZSkge1xuICAgIHB1bXAoW1xuICAgICAgICBzcmMocGF0aHMuaW1hZ2VzLnNyYyksXG4gICAgICAgIGd1bHBQbHVnaW5zLm5ld2VyKHBhdGhzLmltYWdlcy5kZXN0KSxcbiAgICAgICAgZ3VscFBsdWdpbnMuaW1hZ2VtaW4oKSxcbiAgICAgICAgZGVzdChwYXRocy5pbWFnZXMuZGVzdCksXG4gICAgXSwgZG9uZSk7XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "images.js"
      ],
      "names": [
        "images",
        "done",
        "paths",
        "src",
        "gulpPlugins",
        "newer",
        "dest",
        "imagemin"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;AAGA;;AACA;;AAKA;;;;AAHA;;;;AAKA;;;AAGe,SAASA,MAAT,CAAgBC,IAAhB,EAAsB;AACjC,wBAAK,CACD,eAAIC,iBAAMF,MAAN,CAAaG,GAAjB,CADC,EAEDC,uBAAYC,KAAZ,CAAkBH,iBAAMF,MAAN,CAAaM,IAA/B,CAFC,EAGDF,uBAAYG,QAAZ,EAHC,EAID,gBAAKL,iBAAMF,MAAN,CAAaM,IAAlB,CAJC,CAAL,EAKGL,IALH;AAMH",
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport {src, dest} from 'gulp';\nimport pump from 'pump';\n\n/**\n * Internal dependencies\n */\nimport {paths, gulpPlugins} from './constants';\n\n/**\n * Optimize images.\n */\nexport default function images(done) {\n    pump([\n        src(paths.images.src),\n        gulpPlugins.newer(paths.images.dest),\n        gulpPlugins.imagemin(),\n        dest(paths.images.dest),\n    ], done);\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1561222234000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"filename\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/php.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/php.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/php.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/php.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
        "sourceFileName": "php.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.phpBeforeReplacementStream = phpBeforeReplacementStream;\nexports[\"default\"] = php;\n\nvar _pump = _interopRequireDefault(require(\"pump\"));\n\nvar _gulp = require(\"gulp\");\n\nvar _mississippi = require(\"mississippi\");\n\nvar _constants = require(\"./constants\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\nfunction phpBeforeReplacementStream() {\n  var config = (0, _utils.getThemeConfig)(); // Return a single stream containing all the\n  // before replacement functionality\n\n  return _mississippi.pipeline.obj([// Only code sniff PHP files if the debug setting is true\n  _constants.gulpPlugins[\"if\"](config.dev.debug.phpcs, _constants.gulpPlugins.phpcs(_constants.PHPCSOptions)), // Log all problems that were found.\n  _constants.gulpPlugins.phpcs.reporter('log')]);\n}\n/**\n * PHP via PHP Code Sniffer.\n */\n\n\nfunction php(done) {\n  if (_constants.isProd) {\n    // Only do string replacements and save PHP files when building for production\n    return (0, _pump[\"default\"])([(0, _gulp.src)(_constants.paths.php.src), phpBeforeReplacementStream(), (0, _utils.getStringReplacementTasks)(), (0, _gulp.dest)(_constants.paths.php.dest)], done);\n  } else {\n    // Only run code sniffing in dev, don't save PHP files\n    return (0, _pump[\"default\"])([(0, _gulp.src)(_constants.paths.php.src), phpBeforeReplacementStream()], done);\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBocC5qcyJdLCJuYW1lcyI6WyJwaHBCZWZvcmVSZXBsYWNlbWVudFN0cmVhbSIsImNvbmZpZyIsInBpcGVsaW5lIiwib2JqIiwiZ3VscFBsdWdpbnMiLCJkZXYiLCJkZWJ1ZyIsInBocGNzIiwiUEhQQ1NPcHRpb25zIiwicmVwb3J0ZXIiLCJwaHAiLCJkb25lIiwiaXNQcm9kIiwicGF0aHMiLCJzcmMiLCJkZXN0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBRUE7Ozs7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFDQTs7QUFLQTs7QUFDQTs7OztBQUpBOzs7QUFNTyxTQUFTQSwwQkFBVCxHQUFzQztBQUM1QyxNQUFNQyxNQUFNLEdBQUcsNEJBQWYsQ0FENEMsQ0FHNUM7QUFDQTs7QUFDQSxTQUFPQyxzQkFBU0MsR0FBVCxDQUFhLENBQ25CO0FBQ0FDLCtCQUNDSCxNQUFNLENBQUNJLEdBQVAsQ0FBV0MsS0FBWCxDQUFpQkMsS0FEbEIsRUFFQ0gsdUJBQVlHLEtBQVosQ0FBa0JDLHVCQUFsQixDQUZELENBRm1CLEVBTW5CO0FBQ0FKLHlCQUFZRyxLQUFaLENBQWtCRSxRQUFsQixDQUEyQixLQUEzQixDQVBtQixDQUFiLENBQVA7QUFTQTtBQUVEOzs7OztBQUdlLFNBQVNDLEdBQVQsQ0FBYUMsSUFBYixFQUFtQjtBQUVqQyxNQUFJQyxpQkFBSixFQUFhO0FBRVo7QUFDQSxXQUFPLHNCQUFLLENBQ1gsZUFBSUMsaUJBQU1ILEdBQU4sQ0FBVUksR0FBZCxDQURXLEVBRVhkLDBCQUEwQixFQUZmLEVBR1gsdUNBSFcsRUFJWCxnQkFBTWEsaUJBQU1ILEdBQU4sQ0FBVUssSUFBaEIsQ0FKVyxDQUFMLEVBS0pKLElBTEksQ0FBUDtBQU9BLEdBVkQsTUFVTztBQUVOO0FBQ0EsV0FBTyxzQkFBSyxDQUNYLGVBQUlFLGlCQUFNSCxHQUFOLENBQVVJLEdBQWQsQ0FEVyxFQUVYZCwwQkFBMEIsRUFGZixDQUFMLEVBR0pXLElBSEksQ0FBUDtBQUtBO0FBRUQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2F1c3RpbnR1ZGUvRG9jdW1lbnRzL1N1cHJlbWUgSGFyZHdvb2QgRmxvb3JzIEluYy93cC1jb250ZW50L3RoZW1lcy93cHJpZy1zdXByZW1laGFyZHdvb2RmbG9vcnNpbmMvZ3VscCIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1lbnYgZXM2ICovXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBwdW1wIGZyb20gJ3B1bXAnO1xuaW1wb3J0IHtzcmMsIGRlc3R9IGZyb20gJ2d1bHAnO1xuaW1wb3J0IHsgcGlwZWxpbmUgfSBmcm9tICdtaXNzaXNzaXBwaSc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7cGF0aHMsIFBIUENTT3B0aW9ucywgZ3VscFBsdWdpbnMsIGlzUHJvZH0gZnJvbSAnLi9jb25zdGFudHMnO1xuaW1wb3J0IHtnZXRTdHJpbmdSZXBsYWNlbWVudFRhc2tzLCBnZXRUaGVtZUNvbmZpZ30gZnJvbSAnLi91dGlscyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBwaHBCZWZvcmVSZXBsYWNlbWVudFN0cmVhbSgpIHtcblx0Y29uc3QgY29uZmlnID0gZ2V0VGhlbWVDb25maWcoKTtcblxuXHQvLyBSZXR1cm4gYSBzaW5nbGUgc3RyZWFtIGNvbnRhaW5pbmcgYWxsIHRoZVxuXHQvLyBiZWZvcmUgcmVwbGFjZW1lbnQgZnVuY3Rpb25hbGl0eVxuXHRyZXR1cm4gcGlwZWxpbmUub2JqKFtcblx0XHQvLyBPbmx5IGNvZGUgc25pZmYgUEhQIGZpbGVzIGlmIHRoZSBkZWJ1ZyBzZXR0aW5nIGlzIHRydWVcblx0XHRndWxwUGx1Z2lucy5pZihcblx0XHRcdGNvbmZpZy5kZXYuZGVidWcucGhwY3MsXG5cdFx0XHRndWxwUGx1Z2lucy5waHBjcyhQSFBDU09wdGlvbnMpXG5cdFx0KSxcblx0XHQvLyBMb2cgYWxsIHByb2JsZW1zIHRoYXQgd2VyZSBmb3VuZC5cblx0XHRndWxwUGx1Z2lucy5waHBjcy5yZXBvcnRlcignbG9nJyksXG5cdF0pO1xufVxuXG4vKipcbiAqIFBIUCB2aWEgUEhQIENvZGUgU25pZmZlci5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGhwKGRvbmUpIHtcblxuXHRpZiggaXNQcm9kICkge1xuXG5cdFx0Ly8gT25seSBkbyBzdHJpbmcgcmVwbGFjZW1lbnRzIGFuZCBzYXZlIFBIUCBmaWxlcyB3aGVuIGJ1aWxkaW5nIGZvciBwcm9kdWN0aW9uXG5cdFx0cmV0dXJuIHB1bXAoW1xuXHRcdFx0c3JjKHBhdGhzLnBocC5zcmMpLFxuXHRcdFx0cGhwQmVmb3JlUmVwbGFjZW1lbnRTdHJlYW0oKSxcblx0XHRcdGdldFN0cmluZ1JlcGxhY2VtZW50VGFza3MoKSxcblx0XHRcdGRlc3QoIHBhdGhzLnBocC5kZXN0IClcblx0XHRdLCBkb25lKTtcblxuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gT25seSBydW4gY29kZSBzbmlmZmluZyBpbiBkZXYsIGRvbid0IHNhdmUgUEhQIGZpbGVzXG5cdFx0cmV0dXJuIHB1bXAoW1xuXHRcdFx0c3JjKHBhdGhzLnBocC5zcmMpLFxuXHRcdFx0cGhwQmVmb3JlUmVwbGFjZW1lbnRTdHJlYW0oKSxcblx0XHRdLCBkb25lKTtcblxuXHR9XG5cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "php.js"
      ],
      "names": [
        "phpBeforeReplacementStream",
        "config",
        "pipeline",
        "obj",
        "gulpPlugins",
        "dev",
        "debug",
        "phpcs",
        "PHPCSOptions",
        "reporter",
        "php",
        "done",
        "isProd",
        "paths",
        "src",
        "dest"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;;AAGA;;AACA;;AACA;;AAKA;;AACA;;;;AAJA;;;AAMO,SAASA,0BAAT,GAAsC;AAC5C,MAAMC,MAAM,GAAG,4BAAf,CAD4C,CAG5C;AACA;;AACA,SAAOC,sBAASC,GAAT,CAAa,CACnB;AACAC,+BACCH,MAAM,CAACI,GAAP,CAAWC,KAAX,CAAiBC,KADlB,EAECH,uBAAYG,KAAZ,CAAkBC,uBAAlB,CAFD,CAFmB,EAMnB;AACAJ,yBAAYG,KAAZ,CAAkBE,QAAlB,CAA2B,KAA3B,CAPmB,CAAb,CAAP;AASA;AAED;;;;;AAGe,SAASC,GAAT,CAAaC,IAAb,EAAmB;AAEjC,MAAIC,iBAAJ,EAAa;AAEZ;AACA,WAAO,sBAAK,CACX,eAAIC,iBAAMH,GAAN,CAAUI,GAAd,CADW,EAEXd,0BAA0B,EAFf,EAGX,uCAHW,EAIX,gBAAMa,iBAAMH,GAAN,CAAUK,IAAhB,CAJW,CAAL,EAKJJ,IALI,CAAP;AAOA,GAVD,MAUO;AAEN;AACA,WAAO,sBAAK,CACX,eAAIE,iBAAMH,GAAN,CAAUI,GAAd,CADW,EAEXd,0BAA0B,EAFf,CAAL,EAGJW,IAHI,CAAP;AAKA;AAED",
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport pump from 'pump';\nimport {src, dest} from 'gulp';\nimport { pipeline } from 'mississippi';\n\n/**\n * Internal dependencies\n */\nimport {paths, PHPCSOptions, gulpPlugins, isProd} from './constants';\nimport {getStringReplacementTasks, getThemeConfig} from './utils';\n\nexport function phpBeforeReplacementStream() {\n\tconst config = getThemeConfig();\n\n\t// Return a single stream containing all the\n\t// before replacement functionality\n\treturn pipeline.obj([\n\t\t// Only code sniff PHP files if the debug setting is true\n\t\tgulpPlugins.if(\n\t\t\tconfig.dev.debug.phpcs,\n\t\t\tgulpPlugins.phpcs(PHPCSOptions)\n\t\t),\n\t\t// Log all problems that were found.\n\t\tgulpPlugins.phpcs.reporter('log'),\n\t]);\n}\n\n/**\n * PHP via PHP Code Sniffer.\n */\nexport default function php(done) {\n\n\tif( isProd ) {\n\n\t\t// Only do string replacements and save PHP files when building for production\n\t\treturn pump([\n\t\t\tsrc(paths.php.src),\n\t\t\tphpBeforeReplacementStream(),\n\t\t\tgetStringReplacementTasks(),\n\t\t\tdest( paths.php.dest )\n\t\t], done);\n\n\t} else {\n\n\t\t// Only run code sniffing in dev, don't save PHP files\n\t\treturn pump([\n\t\t\tsrc(paths.php.src),\n\t\t\tphpBeforeReplacementStream(),\n\t\t], done);\n\n\t}\n\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561222234000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"filename\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/browserSync.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/browserSync.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/browserSync.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/browserSync.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
        "sourceFileName": "browserSync.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serve = serve;\nexports.reload = reload;\nexports.server = void 0;\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _fancyLog = _interopRequireDefault(require(\"fancy-log\"));\n\nvar _ansiColors = _interopRequireDefault(require(\"ansi-colors\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _constants = require(\"./constants\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\n\n/**\n * Conditionally set up BrowserSync.\n * Only run BrowserSync if config.browserSync.live = true.\n */\n// Create a BrowserSync instance:\nvar server = _browserSync[\"default\"].create(); // Initialize the BrowserSync server conditionally:\n\n\nexports.server = server;\n\nfunction serve(done) {\n  var config = (0, _utils.getThemeConfig)(); // bail early if not serving via BrowserSync\n\n  if (!config.dev.browserSync.live) {\n    done();\n  }\n\n  var serverConfig = {\n    proxy: config.dev.browserSync.proxyURL,\n    port: config.dev.browserSync.bypassPort,\n    liveReload: true,\n    https: false\n  }; // Only setup HTTPS certificates if HTTPS is enabled\n\n  if (config.dev.browserSync.https) {\n    // Use a custom path key/cert if defined, otherwise use the default path\n    var certPath = config.dev.browserSync.hasOwnProperty('certPath') ? config.dev.browserSync.certPath : _constants.paths.browserSync.cert;\n    var keyPath = config.dev.browserSync.hasOwnProperty('keyPath') ? config.dev.browserSync.keyPath : _constants.paths.browserSync.key; // Ensure the key/cert files exist\n\n    var certFound = _fs[\"default\"].existsSync(certPath);\n\n    var keyFound = _fs[\"default\"].existsSync(keyPath); // Let the user know if we found a cert\n\n\n    if (certFound) {\n      (0, _fancyLog[\"default\"])(_ansiColors[\"default\"].yellow(\"Using the SSL certificate \".concat(_ansiColors[\"default\"].bold(certPath))));\n    } else {\n      (0, _fancyLog[\"default\"])(_ansiColors[\"default\"].yellow(\"No SSL certificate found, HTTPS will \".concat(_ansiColors[\"default\"].bold('not'), \" be enabled\")));\n    } // Let the user know if we found a key\n\n\n    if (keyFound) {\n      (0, _fancyLog[\"default\"])(_ansiColors[\"default\"].yellow(\"Using the SSL key \".concat(_ansiColors[\"default\"].bold(keyPath))));\n    } else {\n      (0, _fancyLog[\"default\"])(_ansiColors[\"default\"].yellow(\"No SSL key found, HTTPS will \".concat(_ansiColors[\"default\"].bold('not'), \" be enabled\")));\n    } // Only enable HTTPS if there is a cert and a key\n\n\n    if (certFound && keyFound) {\n      (0, _fancyLog[\"default\"])(_ansiColors[\"default\"].yellow(\"HTTPS is \".concat(_ansiColors[\"default\"].bold('on'))));\n      serverConfig.https = {\n        key: keyPath,\n        cert: certPath\n      };\n    }\n  } // Start the BrowserSync server\n\n\n  server.init(serverConfig);\n  done();\n} // Reload the live site:\n\n\nfunction reload(done) {\n  var config = (0, _utils.getThemeConfig)();\n\n  if (config.dev.browserSync.live) {\n    if (server.paused) {\n      server.resume();\n    }\n\n    server.reload();\n  } else {\n    server.pause();\n  }\n\n  done();\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJyb3dzZXJTeW5jLmpzIl0sIm5hbWVzIjpbInNlcnZlciIsImJyb3dzZXJTeW5jIiwiY3JlYXRlIiwic2VydmUiLCJkb25lIiwiY29uZmlnIiwiZGV2IiwibGl2ZSIsInNlcnZlckNvbmZpZyIsInByb3h5IiwicHJveHlVUkwiLCJwb3J0IiwiYnlwYXNzUG9ydCIsImxpdmVSZWxvYWQiLCJodHRwcyIsImNlcnRQYXRoIiwiaGFzT3duUHJvcGVydHkiLCJwYXRocyIsImNlcnQiLCJrZXlQYXRoIiwia2V5IiwiY2VydEZvdW5kIiwiZnMiLCJleGlzdHNTeW5jIiwia2V5Rm91bmQiLCJjb2xvcnMiLCJ5ZWxsb3ciLCJib2xkIiwiaW5pdCIsInJlbG9hZCIsInBhdXNlZCIsInJlc3VtZSIsInBhdXNlIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBRUE7Ozs7Ozs7Ozs7O0FBR0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBS0E7O0FBQ0E7Ozs7QUFKQTs7OztBQU1BOzs7O0FBS0E7QUFDTyxJQUFNQSxNQUFNLEdBQUdDLHdCQUFZQyxNQUFaLEVBQWYsQyxDQUVQOzs7OztBQUNPLFNBQVNDLEtBQVQsQ0FBZUMsSUFBZixFQUFxQjtBQUN4QixNQUFNQyxNQUFNLEdBQUcsNEJBQWYsQ0FEd0IsQ0FHeEI7O0FBQ0EsTUFBSSxDQUFFQSxNQUFNLENBQUNDLEdBQVAsQ0FBV0wsV0FBWCxDQUF1Qk0sSUFBN0IsRUFBbUM7QUFDckNILElBQUFBLElBQUk7QUFDSjs7QUFFRSxNQUFJSSxZQUFZLEdBQUc7QUFDZkMsSUFBQUEsS0FBSyxFQUFFSixNQUFNLENBQUNDLEdBQVAsQ0FBV0wsV0FBWCxDQUF1QlMsUUFEZjtBQUVmQyxJQUFBQSxJQUFJLEVBQUVOLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXTCxXQUFYLENBQXVCVyxVQUZkO0FBR2ZDLElBQUFBLFVBQVUsRUFBRSxJQUhHO0FBSWZDLElBQUFBLEtBQUssRUFBRTtBQUpRLEdBQW5CLENBUndCLENBZXhCOztBQUNBLE1BQUlULE1BQU0sQ0FBQ0MsR0FBUCxDQUFXTCxXQUFYLENBQXVCYSxLQUEzQixFQUFpQztBQUU3QjtBQUNBLFFBQU1DLFFBQVEsR0FBR1YsTUFBTSxDQUFDQyxHQUFQLENBQVdMLFdBQVgsQ0FBdUJlLGNBQXZCLENBQXNDLFVBQXRDLElBQW9EWCxNQUFNLENBQUNDLEdBQVAsQ0FBV0wsV0FBWCxDQUF1QmMsUUFBM0UsR0FBc0ZFLGlCQUFNaEIsV0FBTixDQUFrQmlCLElBQXpIO0FBQ0EsUUFBTUMsT0FBTyxHQUFHZCxNQUFNLENBQUNDLEdBQVAsQ0FBV0wsV0FBWCxDQUF1QmUsY0FBdkIsQ0FBc0MsU0FBdEMsSUFBbURYLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXTCxXQUFYLENBQXVCa0IsT0FBMUUsR0FBb0ZGLGlCQUFNaEIsV0FBTixDQUFrQm1CLEdBQXRILENBSjZCLENBTTdCOztBQUNBLFFBQU1DLFNBQVMsR0FBR0MsZUFBR0MsVUFBSCxDQUFjUixRQUFkLENBQWxCOztBQUNBLFFBQU1TLFFBQVEsR0FBR0YsZUFBR0MsVUFBSCxDQUFjSixPQUFkLENBQWpCLENBUjZCLENBVTdCOzs7QUFDQSxRQUFJRSxTQUFKLEVBQWU7QUFDWCxnQ0FBSUksdUJBQU9DLE1BQVAscUNBQTJDRCx1QkFBT0UsSUFBUCxDQUFZWixRQUFaLENBQTNDLEVBQUo7QUFDSCxLQUZELE1BRU87QUFDSCxnQ0FBSVUsdUJBQU9DLE1BQVAsZ0RBQXNERCx1QkFBT0UsSUFBUCxDQUFZLEtBQVosQ0FBdEQsaUJBQUo7QUFDSCxLQWY0QixDQWlCN0I7OztBQUNBLFFBQUlILFFBQUosRUFBYztBQUNWLGdDQUFJQyx1QkFBT0MsTUFBUCw2QkFBbUNELHVCQUFPRSxJQUFQLENBQVlSLE9BQVosQ0FBbkMsRUFBSjtBQUNILEtBRkQsTUFFTztBQUNILGdDQUFJTSx1QkFBT0MsTUFBUCx3Q0FBOENELHVCQUFPRSxJQUFQLENBQVksS0FBWixDQUE5QyxpQkFBSjtBQUNILEtBdEI0QixDQXdCN0I7OztBQUNBLFFBQUlOLFNBQVMsSUFBSUcsUUFBakIsRUFBMkI7QUFDdkIsZ0NBQUlDLHVCQUFPQyxNQUFQLG9CQUEwQkQsdUJBQU9FLElBQVAsQ0FBWSxJQUFaLENBQTFCLEVBQUo7QUFDQW5CLE1BQUFBLFlBQVksQ0FBQ00sS0FBYixHQUFxQjtBQUNqQk0sUUFBQUEsR0FBRyxFQUFFRCxPQURZO0FBRWpCRCxRQUFBQSxJQUFJLEVBQUVIO0FBRlcsT0FBckI7QUFJSDtBQUVKLEdBakR1QixDQW1EeEI7OztBQUNBZixFQUFBQSxNQUFNLENBQUM0QixJQUFQLENBQVlwQixZQUFaO0FBRUhKLEVBQUFBLElBQUk7QUFDSixDLENBRUQ7OztBQUNPLFNBQVN5QixNQUFULENBQWdCekIsSUFBaEIsRUFBc0I7QUFDNUIsTUFBTUMsTUFBTSxHQUFHLDRCQUFmOztBQUVBLE1BQUlBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXTCxXQUFYLENBQXVCTSxJQUEzQixFQUFpQztBQUNoQyxRQUFJUCxNQUFNLENBQUM4QixNQUFYLEVBQW1CO0FBQ2xCOUIsTUFBQUEsTUFBTSxDQUFDK0IsTUFBUDtBQUNBOztBQUNEL0IsSUFBQUEsTUFBTSxDQUFDNkIsTUFBUDtBQUNBLEdBTEQsTUFLTztBQUNON0IsSUFBQUEsTUFBTSxDQUFDZ0MsS0FBUDtBQUNHOztBQUVKNUIsRUFBQUEsSUFBSTtBQUNKIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9hdXN0aW50dWRlL0RvY3VtZW50cy9TdXByZW1lIEhhcmR3b29kIEZsb29ycyBJbmMvd3AtY29udGVudC90aGVtZXMvd3ByaWctc3VwcmVtZWhhcmR3b29kZmxvb3JzaW5jL2d1bHAiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZW52IGVzNiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgYnJvd3NlclN5bmMgZnJvbSAnYnJvd3Nlci1zeW5jJztcbmltcG9ydCBsb2cgZnJvbSAnZmFuY3ktbG9nJztcbmltcG9ydCBjb2xvcnMgZnJvbSAnYW5zaS1jb2xvcnMnO1xuaW1wb3J0IGZzIGZyb20gJ2ZzJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHtwYXRoc30gZnJvbSAnLi9jb25zdGFudHMnO1xuaW1wb3J0IHtnZXRUaGVtZUNvbmZpZ30gZnJvbSAnLi91dGlscyc7XG5cbi8qKlxuICogQ29uZGl0aW9uYWxseSBzZXQgdXAgQnJvd3NlclN5bmMuXG4gKiBPbmx5IHJ1biBCcm93c2VyU3luYyBpZiBjb25maWcuYnJvd3NlclN5bmMubGl2ZSA9IHRydWUuXG4gKi9cblxuLy8gQ3JlYXRlIGEgQnJvd3NlclN5bmMgaW5zdGFuY2U6XG5leHBvcnQgY29uc3Qgc2VydmVyID0gYnJvd3NlclN5bmMuY3JlYXRlKCk7XG5cbi8vIEluaXRpYWxpemUgdGhlIEJyb3dzZXJTeW5jIHNlcnZlciBjb25kaXRpb25hbGx5OlxuZXhwb3J0IGZ1bmN0aW9uIHNlcnZlKGRvbmUpIHtcbiAgICBjb25zdCBjb25maWcgPSBnZXRUaGVtZUNvbmZpZygpO1xuXG4gICAgLy8gYmFpbCBlYXJseSBpZiBub3Qgc2VydmluZyB2aWEgQnJvd3NlclN5bmNcbiAgICBpZiAoISBjb25maWcuZGV2LmJyb3dzZXJTeW5jLmxpdmUpIHtcblx0XHRkb25lKCk7XG5cdH1cblxuICAgIGxldCBzZXJ2ZXJDb25maWcgPSB7XG4gICAgICAgIHByb3h5OiBjb25maWcuZGV2LmJyb3dzZXJTeW5jLnByb3h5VVJMLFxuICAgICAgICBwb3J0OiBjb25maWcuZGV2LmJyb3dzZXJTeW5jLmJ5cGFzc1BvcnQsXG4gICAgICAgIGxpdmVSZWxvYWQ6IHRydWUsXG4gICAgICAgIGh0dHBzOiBmYWxzZVxuICAgIH07XG5cbiAgICAvLyBPbmx5IHNldHVwIEhUVFBTIGNlcnRpZmljYXRlcyBpZiBIVFRQUyBpcyBlbmFibGVkXG4gICAgaWYgKGNvbmZpZy5kZXYuYnJvd3NlclN5bmMuaHR0cHMpe1xuXG4gICAgICAgIC8vIFVzZSBhIGN1c3RvbSBwYXRoIGtleS9jZXJ0IGlmIGRlZmluZWQsIG90aGVyd2lzZSB1c2UgdGhlIGRlZmF1bHQgcGF0aFxuICAgICAgICBjb25zdCBjZXJ0UGF0aCA9IGNvbmZpZy5kZXYuYnJvd3NlclN5bmMuaGFzT3duUHJvcGVydHkoJ2NlcnRQYXRoJykgPyBjb25maWcuZGV2LmJyb3dzZXJTeW5jLmNlcnRQYXRoIDogcGF0aHMuYnJvd3NlclN5bmMuY2VydDtcbiAgICAgICAgY29uc3Qga2V5UGF0aCA9IGNvbmZpZy5kZXYuYnJvd3NlclN5bmMuaGFzT3duUHJvcGVydHkoJ2tleVBhdGgnKSA/IGNvbmZpZy5kZXYuYnJvd3NlclN5bmMua2V5UGF0aCA6IHBhdGhzLmJyb3dzZXJTeW5jLmtleTtcblxuICAgICAgICAvLyBFbnN1cmUgdGhlIGtleS9jZXJ0IGZpbGVzIGV4aXN0XG4gICAgICAgIGNvbnN0IGNlcnRGb3VuZCA9IGZzLmV4aXN0c1N5bmMoY2VydFBhdGgpO1xuICAgICAgICBjb25zdCBrZXlGb3VuZCA9IGZzLmV4aXN0c1N5bmMoa2V5UGF0aCk7XG5cbiAgICAgICAgLy8gTGV0IHRoZSB1c2VyIGtub3cgaWYgd2UgZm91bmQgYSBjZXJ0XG4gICAgICAgIGlmKCBjZXJ0Rm91bmQgKXtcbiAgICAgICAgICAgIGxvZyhjb2xvcnMueWVsbG93KGBVc2luZyB0aGUgU1NMIGNlcnRpZmljYXRlICR7Y29sb3JzLmJvbGQoY2VydFBhdGgpfWApKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGxvZyhjb2xvcnMueWVsbG93KGBObyBTU0wgY2VydGlmaWNhdGUgZm91bmQsIEhUVFBTIHdpbGwgJHtjb2xvcnMuYm9sZCgnbm90Jyl9IGJlIGVuYWJsZWRgKSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBMZXQgdGhlIHVzZXIga25vdyBpZiB3ZSBmb3VuZCBhIGtleVxuICAgICAgICBpZigga2V5Rm91bmQgKXtcbiAgICAgICAgICAgIGxvZyhjb2xvcnMueWVsbG93KGBVc2luZyB0aGUgU1NMIGtleSAke2NvbG9ycy5ib2xkKGtleVBhdGgpfWApKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGxvZyhjb2xvcnMueWVsbG93KGBObyBTU0wga2V5IGZvdW5kLCBIVFRQUyB3aWxsICR7Y29sb3JzLmJvbGQoJ25vdCcpfSBiZSBlbmFibGVkYCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gT25seSBlbmFibGUgSFRUUFMgaWYgdGhlcmUgaXMgYSBjZXJ0IGFuZCBhIGtleVxuICAgICAgICBpZiggY2VydEZvdW5kICYmIGtleUZvdW5kICl7XG4gICAgICAgICAgICBsb2coY29sb3JzLnllbGxvdyhgSFRUUFMgaXMgJHtjb2xvcnMuYm9sZCgnb24nKX1gKSk7XG4gICAgICAgICAgICBzZXJ2ZXJDb25maWcuaHR0cHMgPSB7XG4gICAgICAgICAgICAgICAga2V5OiBrZXlQYXRoLFxuICAgICAgICAgICAgICAgIGNlcnQ6IGNlcnRQYXRoXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICB9XG5cbiAgICAvLyBTdGFydCB0aGUgQnJvd3NlclN5bmMgc2VydmVyXG4gICAgc2VydmVyLmluaXQoc2VydmVyQ29uZmlnKTtcblxuXHRkb25lKCk7XG59XG5cbi8vIFJlbG9hZCB0aGUgbGl2ZSBzaXRlOlxuZXhwb3J0IGZ1bmN0aW9uIHJlbG9hZChkb25lKSB7XG5cdGNvbnN0IGNvbmZpZyA9IGdldFRoZW1lQ29uZmlnKCk7XG5cblx0aWYgKGNvbmZpZy5kZXYuYnJvd3NlclN5bmMubGl2ZSkge1xuXHRcdGlmIChzZXJ2ZXIucGF1c2VkKSB7XG5cdFx0XHRzZXJ2ZXIucmVzdW1lKCk7XG5cdFx0fVxuXHRcdHNlcnZlci5yZWxvYWQoKTtcblx0fSBlbHNlIHtcblx0XHRzZXJ2ZXIucGF1c2UoKTtcbiAgICB9XG5cblx0ZG9uZSgpO1xufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "browserSync.js"
      ],
      "names": [
        "server",
        "browserSync",
        "create",
        "serve",
        "done",
        "config",
        "dev",
        "live",
        "serverConfig",
        "proxy",
        "proxyURL",
        "port",
        "bypassPort",
        "liveReload",
        "https",
        "certPath",
        "hasOwnProperty",
        "paths",
        "cert",
        "keyPath",
        "key",
        "certFound",
        "fs",
        "existsSync",
        "keyFound",
        "colors",
        "yellow",
        "bold",
        "init",
        "reload",
        "paused",
        "resume",
        "pause"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;;;AAGA;;AACA;;AACA;;AACA;;AAKA;;AACA;;;;AAJA;;;;AAMA;;;;AAKA;AACO,IAAMA,MAAM,GAAGC,wBAAYC,MAAZ,EAAf,C,CAEP;;;;;AACO,SAASC,KAAT,CAAeC,IAAf,EAAqB;AACxB,MAAMC,MAAM,GAAG,4BAAf,CADwB,CAGxB;;AACA,MAAI,CAAEA,MAAM,CAACC,GAAP,CAAWL,WAAX,CAAuBM,IAA7B,EAAmC;AACrCH,IAAAA,IAAI;AACJ;;AAEE,MAAII,YAAY,GAAG;AACfC,IAAAA,KAAK,EAAEJ,MAAM,CAACC,GAAP,CAAWL,WAAX,CAAuBS,QADf;AAEfC,IAAAA,IAAI,EAAEN,MAAM,CAACC,GAAP,CAAWL,WAAX,CAAuBW,UAFd;AAGfC,IAAAA,UAAU,EAAE,IAHG;AAIfC,IAAAA,KAAK,EAAE;AAJQ,GAAnB,CARwB,CAexB;;AACA,MAAIT,MAAM,CAACC,GAAP,CAAWL,WAAX,CAAuBa,KAA3B,EAAiC;AAE7B;AACA,QAAMC,QAAQ,GAAGV,MAAM,CAACC,GAAP,CAAWL,WAAX,CAAuBe,cAAvB,CAAsC,UAAtC,IAAoDX,MAAM,CAACC,GAAP,CAAWL,WAAX,CAAuBc,QAA3E,GAAsFE,iBAAMhB,WAAN,CAAkBiB,IAAzH;AACA,QAAMC,OAAO,GAAGd,MAAM,CAACC,GAAP,CAAWL,WAAX,CAAuBe,cAAvB,CAAsC,SAAtC,IAAmDX,MAAM,CAACC,GAAP,CAAWL,WAAX,CAAuBkB,OAA1E,GAAoFF,iBAAMhB,WAAN,CAAkBmB,GAAtH,CAJ6B,CAM7B;;AACA,QAAMC,SAAS,GAAGC,eAAGC,UAAH,CAAcR,QAAd,CAAlB;;AACA,QAAMS,QAAQ,GAAGF,eAAGC,UAAH,CAAcJ,OAAd,CAAjB,CAR6B,CAU7B;;;AACA,QAAIE,SAAJ,EAAe;AACX,gCAAII,uBAAOC,MAAP,qCAA2CD,uBAAOE,IAAP,CAAYZ,QAAZ,CAA3C,EAAJ;AACH,KAFD,MAEO;AACH,gCAAIU,uBAAOC,MAAP,gDAAsDD,uBAAOE,IAAP,CAAY,KAAZ,CAAtD,iBAAJ;AACH,KAf4B,CAiB7B;;;AACA,QAAIH,QAAJ,EAAc;AACV,gCAAIC,uBAAOC,MAAP,6BAAmCD,uBAAOE,IAAP,CAAYR,OAAZ,CAAnC,EAAJ;AACH,KAFD,MAEO;AACH,gCAAIM,uBAAOC,MAAP,wCAA8CD,uBAAOE,IAAP,CAAY,KAAZ,CAA9C,iBAAJ;AACH,KAtB4B,CAwB7B;;;AACA,QAAIN,SAAS,IAAIG,QAAjB,EAA2B;AACvB,gCAAIC,uBAAOC,MAAP,oBAA0BD,uBAAOE,IAAP,CAAY,IAAZ,CAA1B,EAAJ;AACAnB,MAAAA,YAAY,CAACM,KAAb,GAAqB;AACjBM,QAAAA,GAAG,EAAED,OADY;AAEjBD,QAAAA,IAAI,EAAEH;AAFW,OAArB;AAIH;AAEJ,GAjDuB,CAmDxB;;;AACAf,EAAAA,MAAM,CAAC4B,IAAP,CAAYpB,YAAZ;AAEHJ,EAAAA,IAAI;AACJ,C,CAED;;;AACO,SAASyB,MAAT,CAAgBzB,IAAhB,EAAsB;AAC5B,MAAMC,MAAM,GAAG,4BAAf;;AAEA,MAAIA,MAAM,CAACC,GAAP,CAAWL,WAAX,CAAuBM,IAA3B,EAAiC;AAChC,QAAIP,MAAM,CAAC8B,MAAX,EAAmB;AAClB9B,MAAAA,MAAM,CAAC+B,MAAP;AACA;;AACD/B,IAAAA,MAAM,CAAC6B,MAAP;AACA,GALD,MAKO;AACN7B,IAAAA,MAAM,CAACgC,KAAP;AACG;;AAEJ5B,EAAAA,IAAI;AACJ",
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport browserSync from 'browser-sync';\nimport log from 'fancy-log';\nimport colors from 'ansi-colors';\nimport fs from 'fs';\n\n/**\n * Internal dependencies\n */\nimport {paths} from './constants';\nimport {getThemeConfig} from './utils';\n\n/**\n * Conditionally set up BrowserSync.\n * Only run BrowserSync if config.browserSync.live = true.\n */\n\n// Create a BrowserSync instance:\nexport const server = browserSync.create();\n\n// Initialize the BrowserSync server conditionally:\nexport function serve(done) {\n    const config = getThemeConfig();\n\n    // bail early if not serving via BrowserSync\n    if (! config.dev.browserSync.live) {\n\t\tdone();\n\t}\n\n    let serverConfig = {\n        proxy: config.dev.browserSync.proxyURL,\n        port: config.dev.browserSync.bypassPort,\n        liveReload: true,\n        https: false\n    };\n\n    // Only setup HTTPS certificates if HTTPS is enabled\n    if (config.dev.browserSync.https){\n\n        // Use a custom path key/cert if defined, otherwise use the default path\n        const certPath = config.dev.browserSync.hasOwnProperty('certPath') ? config.dev.browserSync.certPath : paths.browserSync.cert;\n        const keyPath = config.dev.browserSync.hasOwnProperty('keyPath') ? config.dev.browserSync.keyPath : paths.browserSync.key;\n\n        // Ensure the key/cert files exist\n        const certFound = fs.existsSync(certPath);\n        const keyFound = fs.existsSync(keyPath);\n\n        // Let the user know if we found a cert\n        if( certFound ){\n            log(colors.yellow(`Using the SSL certificate ${colors.bold(certPath)}`));\n        } else {\n            log(colors.yellow(`No SSL certificate found, HTTPS will ${colors.bold('not')} be enabled`));\n        }\n\n        // Let the user know if we found a key\n        if( keyFound ){\n            log(colors.yellow(`Using the SSL key ${colors.bold(keyPath)}`));\n        } else {\n            log(colors.yellow(`No SSL key found, HTTPS will ${colors.bold('not')} be enabled`));\n        }\n\n        // Only enable HTTPS if there is a cert and a key\n        if( certFound && keyFound ){\n            log(colors.yellow(`HTTPS is ${colors.bold('on')}`));\n            serverConfig.https = {\n                key: keyPath,\n                cert: certPath\n            };\n        }\n\n    }\n\n    // Start the BrowserSync server\n    server.init(serverConfig);\n\n\tdone();\n}\n\n// Reload the live site:\nexport function reload(done) {\n\tconst config = getThemeConfig();\n\n\tif (config.dev.browserSync.live) {\n\t\tif (server.paused) {\n\t\t\tserver.resume();\n\t\t}\n\t\tserver.reload();\n\t} else {\n\t\tserver.pause();\n    }\n\n\tdone();\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1561222234000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"filename\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/scripts.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/scripts.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/scripts.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/scripts.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
        "sourceFileName": "scripts.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict'; // External dependencies\n\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.scriptsBeforeReplacementStream = scriptsBeforeReplacementStream;\nexports.scriptsAfterReplacementStream = scriptsAfterReplacementStream;\nexports[\"default\"] = scripts;\n\nvar _gulp = require(\"gulp\");\n\nvar _pump = _interopRequireDefault(require(\"pump\"));\n\nvar _mississippi = require(\"mississippi\");\n\nvar _constants = require(\"./constants\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\nfunction scriptsBeforeReplacementStream() {\n  // Return a single stream containing all the\n  // before replacement functionality\n  return _mississippi.pipeline.obj([(0, _utils.logError)('JavaScript'), _constants.gulpPlugins.newer({\n    dest: _constants.paths.scripts.dest,\n    extra: [_constants.paths.config.themeConfig]\n  }), _constants.gulpPlugins.eslint(), _constants.gulpPlugins.eslint.format()]);\n}\n\nfunction scriptsAfterReplacementStream() {\n  var config = (0, _utils.getThemeConfig)(); // Return a single stream containing all the\n  // after replacement functionality\n\n  return _mississippi.pipeline.obj([_constants.gulpPlugins.babel({\n    presets: ['@babel/preset-env']\n  }), _constants.gulpPlugins[\"if\"](!config.dev.debug.scripts, _constants.gulpPlugins.uglify()), _constants.gulpPlugins.rename({\n    suffix: '.min'\n  })]);\n}\n/**\n * JavaScript via Babel, ESlint, and uglify.\n */\n\n\nfunction scripts(done) {\n  return (0, _pump[\"default\"])([(0, _gulp.src)(_constants.paths.scripts.src, {\n    sourcemaps: !_constants.isProd\n  }), scriptsBeforeReplacementStream(), // Only do string replacements when building for production\n  _constants.gulpPlugins[\"if\"](_constants.isProd, (0, _utils.getStringReplacementTasks)()), scriptsAfterReplacementStream(), (0, _gulp.dest)(_constants.paths.scripts.dest, {\n    sourcemaps: !_constants.isProd\n  })], done);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOlsic2NyaXB0c0JlZm9yZVJlcGxhY2VtZW50U3RyZWFtIiwicGlwZWxpbmUiLCJvYmoiLCJndWxwUGx1Z2lucyIsIm5ld2VyIiwiZGVzdCIsInBhdGhzIiwic2NyaXB0cyIsImV4dHJhIiwiY29uZmlnIiwidGhlbWVDb25maWciLCJlc2xpbnQiLCJmb3JtYXQiLCJzY3JpcHRzQWZ0ZXJSZXBsYWNlbWVudFN0cmVhbSIsImJhYmVsIiwicHJlc2V0cyIsImRldiIsImRlYnVnIiwidWdsaWZ5IiwicmVuYW1lIiwic3VmZml4IiwiZG9uZSIsInNyYyIsInNvdXJjZW1hcHMiLCJpc1Byb2QiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsYSxDQUVBOztBQUNBOzs7Ozs7Ozs7OztBQUdBOztBQUNBOztBQUNBOztBQUtBOztBQUNBOzs7O0FBSkE7OztBQU1PLFNBQVNBLDhCQUFULEdBQTBDO0FBRWhEO0FBQ0E7QUFDQSxTQUFPQyxzQkFBU0MsR0FBVCxDQUFhLENBQ25CLHFCQUFTLFlBQVQsQ0FEbUIsRUFFbkJDLHVCQUFZQyxLQUFaLENBQWtCO0FBQ2pCQyxJQUFBQSxJQUFJLEVBQUVDLGlCQUFNQyxPQUFOLENBQWNGLElBREg7QUFFakJHLElBQUFBLEtBQUssRUFBRSxDQUFDRixpQkFBTUcsTUFBTixDQUFhQyxXQUFkO0FBRlUsR0FBbEIsQ0FGbUIsRUFNbkJQLHVCQUFZUSxNQUFaLEVBTm1CLEVBT25CUix1QkFBWVEsTUFBWixDQUFtQkMsTUFBbkIsRUFQbUIsQ0FBYixDQUFQO0FBU0E7O0FBRU0sU0FBU0MsNkJBQVQsR0FBeUM7QUFDL0MsTUFBTUosTUFBTSxHQUFHLDRCQUFmLENBRCtDLENBRy9DO0FBQ0E7O0FBQ0EsU0FBT1Isc0JBQVNDLEdBQVQsQ0FBYSxDQUNuQkMsdUJBQVlXLEtBQVosQ0FBa0I7QUFDakJDLElBQUFBLE9BQU8sRUFBRSxDQUNSLG1CQURRO0FBRFEsR0FBbEIsQ0FEbUIsRUFNbkJaLDZCQUNDLENBQUNNLE1BQU0sQ0FBQ08sR0FBUCxDQUFXQyxLQUFYLENBQWlCVixPQURuQixFQUVDSix1QkFBWWUsTUFBWixFQUZELENBTm1CLEVBVW5CZix1QkFBWWdCLE1BQVosQ0FBbUI7QUFDbEJDLElBQUFBLE1BQU0sRUFBRTtBQURVLEdBQW5CLENBVm1CLENBQWIsQ0FBUDtBQWNBO0FBRUQ7Ozs7O0FBR2UsU0FBU2IsT0FBVCxDQUFpQmMsSUFBakIsRUFBdUI7QUFFckMsU0FBTyxzQkFBSyxDQUNYLGVBQUlmLGlCQUFNQyxPQUFOLENBQWNlLEdBQWxCLEVBQXVCO0FBQUNDLElBQUFBLFVBQVUsRUFBRSxDQUFDQztBQUFkLEdBQXZCLENBRFcsRUFFWHhCLDhCQUE4QixFQUZuQixFQUdYO0FBQ0FHLCtCQUNDcUIsaUJBREQsRUFFQyx1Q0FGRCxDQUpXLEVBUVhYLDZCQUE2QixFQVJsQixFQVNYLGdCQUFLUCxpQkFBTUMsT0FBTixDQUFjRixJQUFuQixFQUF5QjtBQUFDa0IsSUFBQUEsVUFBVSxFQUFFLENBQUNDO0FBQWQsR0FBekIsQ0FUVyxDQUFMLEVBVUpILElBVkksQ0FBUDtBQVdBIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9hdXN0aW50dWRlL0RvY3VtZW50cy9TdXByZW1lIEhhcmR3b29kIEZsb29ycyBJbmMvd3AtY29udGVudC90aGVtZXMvd3ByaWctc3VwcmVtZWhhcmR3b29kZmxvb3JzaW5jL2d1bHAiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZW52IGVzNiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG4vLyBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7c3JjLCBkZXN0fSBmcm9tICdndWxwJztcbmltcG9ydCBwdW1wIGZyb20gJ3B1bXAnO1xuaW1wb3J0IHsgcGlwZWxpbmUgfSBmcm9tICdtaXNzaXNzaXBwaSc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7cGF0aHMsIGd1bHBQbHVnaW5zLCBpc1Byb2R9IGZyb20gJy4vY29uc3RhbnRzJztcbmltcG9ydCB7Z2V0VGhlbWVDb25maWcsIGdldFN0cmluZ1JlcGxhY2VtZW50VGFza3MsIGxvZ0Vycm9yfSBmcm9tICcuL3V0aWxzJztcblxuZXhwb3J0IGZ1bmN0aW9uIHNjcmlwdHNCZWZvcmVSZXBsYWNlbWVudFN0cmVhbSgpIHtcblxuXHQvLyBSZXR1cm4gYSBzaW5nbGUgc3RyZWFtIGNvbnRhaW5pbmcgYWxsIHRoZVxuXHQvLyBiZWZvcmUgcmVwbGFjZW1lbnQgZnVuY3Rpb25hbGl0eVxuXHRyZXR1cm4gcGlwZWxpbmUub2JqKFtcblx0XHRsb2dFcnJvcignSmF2YVNjcmlwdCcpLFxuXHRcdGd1bHBQbHVnaW5zLm5ld2VyKHtcblx0XHRcdGRlc3Q6IHBhdGhzLnNjcmlwdHMuZGVzdCxcblx0XHRcdGV4dHJhOiBbcGF0aHMuY29uZmlnLnRoZW1lQ29uZmlnXVxuXHRcdH0pLFxuXHRcdGd1bHBQbHVnaW5zLmVzbGludCgpLFxuXHRcdGd1bHBQbHVnaW5zLmVzbGludC5mb3JtYXQoKSxcblx0XSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzY3JpcHRzQWZ0ZXJSZXBsYWNlbWVudFN0cmVhbSgpIHtcblx0Y29uc3QgY29uZmlnID0gZ2V0VGhlbWVDb25maWcoKTtcblxuXHQvLyBSZXR1cm4gYSBzaW5nbGUgc3RyZWFtIGNvbnRhaW5pbmcgYWxsIHRoZVxuXHQvLyBhZnRlciByZXBsYWNlbWVudCBmdW5jdGlvbmFsaXR5XG5cdHJldHVybiBwaXBlbGluZS5vYmooW1xuXHRcdGd1bHBQbHVnaW5zLmJhYmVsKHtcblx0XHRcdHByZXNldHM6IFtcblx0XHRcdFx0J0BiYWJlbC9wcmVzZXQtZW52J1xuXHRcdFx0XVxuXHRcdH0pLFxuXHRcdGd1bHBQbHVnaW5zLmlmKFxuXHRcdFx0IWNvbmZpZy5kZXYuZGVidWcuc2NyaXB0cyxcblx0XHRcdGd1bHBQbHVnaW5zLnVnbGlmeSgpXG5cdFx0KSxcblx0XHRndWxwUGx1Z2lucy5yZW5hbWUoe1xuXHRcdFx0c3VmZml4OiAnLm1pbidcblx0XHR9KSxcblx0XSk7XG59XG5cbi8qKlxuICogSmF2YVNjcmlwdCB2aWEgQmFiZWwsIEVTbGludCwgYW5kIHVnbGlmeS5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2NyaXB0cyhkb25lKSB7XG5cblx0cmV0dXJuIHB1bXAoW1xuXHRcdHNyYyhwYXRocy5zY3JpcHRzLnNyYywge3NvdXJjZW1hcHM6ICFpc1Byb2R9KSxcblx0XHRzY3JpcHRzQmVmb3JlUmVwbGFjZW1lbnRTdHJlYW0oKSxcblx0XHQvLyBPbmx5IGRvIHN0cmluZyByZXBsYWNlbWVudHMgd2hlbiBidWlsZGluZyBmb3IgcHJvZHVjdGlvblxuXHRcdGd1bHBQbHVnaW5zLmlmKFxuXHRcdFx0aXNQcm9kLFxuXHRcdFx0Z2V0U3RyaW5nUmVwbGFjZW1lbnRUYXNrcygpXG5cdFx0KSxcblx0XHRzY3JpcHRzQWZ0ZXJSZXBsYWNlbWVudFN0cmVhbSgpLFxuXHRcdGRlc3QocGF0aHMuc2NyaXB0cy5kZXN0LCB7c291cmNlbWFwczogIWlzUHJvZH0pLFxuXHRdLCBkb25lKTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "scripts.js"
      ],
      "names": [
        "scriptsBeforeReplacementStream",
        "pipeline",
        "obj",
        "gulpPlugins",
        "newer",
        "dest",
        "paths",
        "scripts",
        "extra",
        "config",
        "themeConfig",
        "eslint",
        "format",
        "scriptsAfterReplacementStream",
        "babel",
        "presets",
        "dev",
        "debug",
        "uglify",
        "rename",
        "suffix",
        "done",
        "src",
        "sourcemaps",
        "isProd"
      ],
      "mappings": "AAAA;AACA,a,CAEA;;AACA;;;;;;;;;;;AAGA;;AACA;;AACA;;AAKA;;AACA;;;;AAJA;;;AAMO,SAASA,8BAAT,GAA0C;AAEhD;AACA;AACA,SAAOC,sBAASC,GAAT,CAAa,CACnB,qBAAS,YAAT,CADmB,EAEnBC,uBAAYC,KAAZ,CAAkB;AACjBC,IAAAA,IAAI,EAAEC,iBAAMC,OAAN,CAAcF,IADH;AAEjBG,IAAAA,KAAK,EAAE,CAACF,iBAAMG,MAAN,CAAaC,WAAd;AAFU,GAAlB,CAFmB,EAMnBP,uBAAYQ,MAAZ,EANmB,EAOnBR,uBAAYQ,MAAZ,CAAmBC,MAAnB,EAPmB,CAAb,CAAP;AASA;;AAEM,SAASC,6BAAT,GAAyC;AAC/C,MAAMJ,MAAM,GAAG,4BAAf,CAD+C,CAG/C;AACA;;AACA,SAAOR,sBAASC,GAAT,CAAa,CACnBC,uBAAYW,KAAZ,CAAkB;AACjBC,IAAAA,OAAO,EAAE,CACR,mBADQ;AADQ,GAAlB,CADmB,EAMnBZ,6BACC,CAACM,MAAM,CAACO,GAAP,CAAWC,KAAX,CAAiBV,OADnB,EAECJ,uBAAYe,MAAZ,EAFD,CANmB,EAUnBf,uBAAYgB,MAAZ,CAAmB;AAClBC,IAAAA,MAAM,EAAE;AADU,GAAnB,CAVmB,CAAb,CAAP;AAcA;AAED;;;;;AAGe,SAASb,OAAT,CAAiBc,IAAjB,EAAuB;AAErC,SAAO,sBAAK,CACX,eAAIf,iBAAMC,OAAN,CAAce,GAAlB,EAAuB;AAACC,IAAAA,UAAU,EAAE,CAACC;AAAd,GAAvB,CADW,EAEXxB,8BAA8B,EAFnB,EAGX;AACAG,+BACCqB,iBADD,EAEC,uCAFD,CAJW,EAQXX,6BAA6B,EARlB,EASX,gBAAKP,iBAAMC,OAAN,CAAcF,IAAnB,EAAyB;AAACkB,IAAAA,UAAU,EAAE,CAACC;AAAd,GAAzB,CATW,CAAL,EAUJH,IAVI,CAAP;AAWA",
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n// External dependencies\n/**\n * External dependencies\n */\nimport {src, dest} from 'gulp';\nimport pump from 'pump';\nimport { pipeline } from 'mississippi';\n\n/**\n * Internal dependencies\n */\nimport {paths, gulpPlugins, isProd} from './constants';\nimport {getThemeConfig, getStringReplacementTasks, logError} from './utils';\n\nexport function scriptsBeforeReplacementStream() {\n\n\t// Return a single stream containing all the\n\t// before replacement functionality\n\treturn pipeline.obj([\n\t\tlogError('JavaScript'),\n\t\tgulpPlugins.newer({\n\t\t\tdest: paths.scripts.dest,\n\t\t\textra: [paths.config.themeConfig]\n\t\t}),\n\t\tgulpPlugins.eslint(),\n\t\tgulpPlugins.eslint.format(),\n\t]);\n}\n\nexport function scriptsAfterReplacementStream() {\n\tconst config = getThemeConfig();\n\n\t// Return a single stream containing all the\n\t// after replacement functionality\n\treturn pipeline.obj([\n\t\tgulpPlugins.babel({\n\t\t\tpresets: [\n\t\t\t\t'@babel/preset-env'\n\t\t\t]\n\t\t}),\n\t\tgulpPlugins.if(\n\t\t\t!config.dev.debug.scripts,\n\t\t\tgulpPlugins.uglify()\n\t\t),\n\t\tgulpPlugins.rename({\n\t\t\tsuffix: '.min'\n\t\t}),\n\t]);\n}\n\n/**\n * JavaScript via Babel, ESlint, and uglify.\n */\nexport default function scripts(done) {\n\n\treturn pump([\n\t\tsrc(paths.scripts.src, {sourcemaps: !isProd}),\n\t\tscriptsBeforeReplacementStream(),\n\t\t// Only do string replacements when building for production\n\t\tgulpPlugins.if(\n\t\t\tisProd,\n\t\t\tgetStringReplacementTasks()\n\t\t),\n\t\tscriptsAfterReplacementStream(),\n\t\tdest(paths.scripts.dest, {sourcemaps: !isProd}),\n\t], done);\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561222234000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"filename\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/styles.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/styles.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/styles.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/styles.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
        "sourceFileName": "styles.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stylesBeforeReplacementStream = stylesBeforeReplacementStream;\nexports.stylesAfterReplacementStream = stylesAfterReplacementStream;\nexports[\"default\"] = styles;\n\nvar _gulp = require(\"gulp\");\n\nvar _postcssPresetEnv = _interopRequireDefault(require(\"postcss-preset-env\"));\n\nvar _postcssImport = _interopRequireDefault(require(\"postcss-import\"));\n\nvar _pump = _interopRequireDefault(require(\"pump\"));\n\nvar _cssnano = _interopRequireDefault(require(\"cssnano\"));\n\nvar _stylelint = _interopRequireDefault(require(\"stylelint\"));\n\nvar _postcssReporter = _interopRequireDefault(require(\"postcss-reporter\"));\n\nvar _postcssCalc = _interopRequireDefault(require(\"postcss-calc\"));\n\nvar _mississippi = require(\"mississippi\");\n\nvar _constants = require(\"./constants\");\n\nvar _utils = require(\"./utils\");\n\nvar _browserSync = require(\"./browserSync\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\nfunction stylesBeforeReplacementStream() {\n  // Return a single stream containing all the\n  // before replacement functionality\n  return _mississippi.pipeline.obj([(0, _utils.logError)('CSS'), _constants.gulpPlugins.newer({\n    dest: _constants.paths.styles.dest,\n    extra: [_constants.paths.config.themeConfig]\n  }), _constants.gulpPlugins.phpcs({\n    bin: \"\".concat(_constants.rootPath, \"/vendor/bin/phpcs\"),\n    standard: 'WordPress',\n    warningSeverity: 0\n  }), // Log all problems that were found.\n  _constants.gulpPlugins.phpcs.reporter('log')]);\n}\n\nfunction stylesAfterReplacementStream() {\n  var config = (0, _utils.getThemeConfig)();\n  var postcssPlugins = [(0, _stylelint[\"default\"])(), (0, _postcssPresetEnv[\"default\"])({\n    importFrom: (0, _utils.configValueDefined)('config.dev.styles.importFrom') ? (0, _utils.appendBaseToFilePathArray)(config.dev.styles.importFrom, _constants.paths.styles.srcDir) : [],\n    stage: (0, _utils.configValueDefined)('config.dev.styles.stage') ? config.dev.styles.stage : 3,\n    autoprefixer: (0, _utils.configValueDefined)('config.dev.styles.autoprefixer') ? config.dev.styles.autoprefixer : {},\n    features: (0, _utils.configValueDefined)('config.dev.styles.features') ? config.dev.styles.features : {\n      'custom-media-queries': {\n        preserve: false\n      },\n      'custom-properties': {\n        preserve: true\n      },\n      'nesting-rules': true\n    }\n  }), (0, _postcssCalc[\"default\"])({\n    preserve: false\n  }), (0, _cssnano[\"default\"])()]; // Skip minifying files if we aren't building for\n  // production and debug is enabled\n\n  if (config.dev.debug.styles && !_constants.isProd) {\n    postcssPlugins.pop();\n  } // Report messages from other postcss plugins\n\n\n  postcssPlugins.push((0, _postcssReporter[\"default\"])({\n    clearReportedMessages: true\n  })); // Return a single stream containing all the\n  // after replacement functionality\n\n  return _mississippi.pipeline.obj([_constants.gulpPlugins.postcss([(0, _postcssImport[\"default\"])({\n    path: [_constants.paths.styles.srcDir],\n    plugins: [(0, _stylelint[\"default\"])()]\n  })]), _constants.gulpPlugins.postcss(postcssPlugins), _constants.gulpPlugins[\"if\"](config.dev.debug.styles, _constants.gulpPlugins.tabify(2, true)), _constants.gulpPlugins.rename({\n    suffix: '.min'\n  }), _browserSync.server.stream({\n    match: \"**/*.css\"\n  })]);\n}\n/**\n* CSS via PostCSS + CSSNext (includes Autoprefixer by default).\n*/\n\n\nfunction styles(done) {\n  return (0, _pump[\"default\"])([(0, _gulp.src)(_constants.paths.styles.src, {\n    sourcemaps: !_constants.isProd\n  }), stylesBeforeReplacementStream(), // Only do string replacements when building for production\n  _constants.gulpPlugins[\"if\"](_constants.isProd, (0, _utils.getStringReplacementTasks)()), stylesAfterReplacementStream(), (0, _gulp.dest)(_constants.paths.styles.dest, {\n    sourcemaps: !_constants.isProd\n  })], done);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "styles.js"
      ],
      "names": [
        "stylesBeforeReplacementStream",
        "pipeline",
        "obj",
        "gulpPlugins",
        "newer",
        "dest",
        "paths",
        "styles",
        "extra",
        "config",
        "themeConfig",
        "phpcs",
        "bin",
        "rootPath",
        "standard",
        "warningSeverity",
        "reporter",
        "stylesAfterReplacementStream",
        "postcssPlugins",
        "importFrom",
        "dev",
        "srcDir",
        "stage",
        "autoprefixer",
        "features",
        "preserve",
        "debug",
        "isProd",
        "pop",
        "push",
        "clearReportedMessages",
        "postcss",
        "path",
        "plugins",
        "tabify",
        "rename",
        "suffix",
        "server",
        "stream",
        "match",
        "done",
        "src",
        "sourcemaps"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAKA;;AACA;;AAOA;;;;AAXA;;;AAaO,SAASA,6BAAT,GAAyC;AAE/C;AACA;AACA,SAAOC,sBAASC,GAAT,CAAa,CACnB,qBAAS,KAAT,CADmB,EAEnBC,uBAAYC,KAAZ,CAAkB;AACjBC,IAAAA,IAAI,EAAEC,iBAAMC,MAAN,CAAaF,IADF;AAEjBG,IAAAA,KAAK,EAAE,CAACF,iBAAMG,MAAN,CAAaC,WAAd;AAFU,GAAlB,CAFmB,EAMnBP,uBAAYQ,KAAZ,CAAkB;AACjBC,IAAAA,GAAG,YAAKC,mBAAL,sBADc;AAEjBC,IAAAA,QAAQ,EAAE,WAFO;AAGjBC,IAAAA,eAAe,EAAE;AAHA,GAAlB,CANmB,EAWnB;AACAZ,yBAAYQ,KAAZ,CAAkBK,QAAlB,CAA2B,KAA3B,CAZmB,CAAb,CAAP;AAcA;;AAEM,SAASC,4BAAT,GAAwC;AAC9C,MAAMR,MAAM,GAAG,4BAAf;AAEA,MAAMS,cAAc,GAAG,CACtB,4BADsB,EAEtB,kCAAiB;AAChBC,IAAAA,UAAU,EACT,+BAAmB,8BAAnB,IACA,sCAA0BV,MAAM,CAACW,GAAP,CAAWb,MAAX,CAAkBY,UAA5C,EAAwDb,iBAAMC,MAAN,CAAac,MAArE,CADA,GAEA,EAJe;AAMhBC,IAAAA,KAAK,EACJ,+BAAmB,yBAAnB,IACAb,MAAM,CAACW,GAAP,CAAWb,MAAX,CAAkBe,KADlB,GAEA,CATe;AAWhBC,IAAAA,YAAY,EACX,+BAAmB,gCAAnB,IACAd,MAAM,CAACW,GAAP,CAAWb,MAAX,CAAkBgB,YADlB,GAEA,EAde;AAgBhBC,IAAAA,QAAQ,EACP,+BAAmB,4BAAnB,IACAf,MAAM,CAACW,GAAP,CAAWb,MAAX,CAAkBiB,QADlB,GAEA;AACC,8BAAwB;AACvBC,QAAAA,QAAQ,EAAE;AADa,OADzB;AAIC,2BAAqB;AACpBA,QAAAA,QAAQ,EAAE;AADU,OAJtB;AAOC,uBAAiB;AAPlB;AAnBe,GAAjB,CAFsB,EAgCtB,6BAAK;AACJA,IAAAA,QAAQ,EAAE;AADN,GAAL,CAhCsB,EAmCtB,0BAnCsB,CAAvB,CAH8C,CAyC9C;AACA;;AACA,MAAIhB,MAAM,CAACW,GAAP,CAAWM,KAAX,CAAiBnB,MAAjB,IAA2B,CAAEoB,iBAAjC,EAA0C;AACzCT,IAAAA,cAAc,CAACU,GAAf;AACA,GA7C6C,CA+C9C;;;AACAV,EAAAA,cAAc,CAACW,IAAf,CACC,iCAAS;AAAEC,IAAAA,qBAAqB,EAAE;AAAzB,GAAT,CADD,EAhD8C,CAoD9C;AACA;;AACA,SAAO7B,sBAASC,GAAT,CAAa,CACnBC,uBAAY4B,OAAZ,CAAoB,CACnB,+BAAS;AACRC,IAAAA,IAAI,EAAE,CAAC1B,iBAAMC,MAAN,CAAac,MAAd,CADE;AAERY,IAAAA,OAAO,EAAE,CACR,4BADQ;AAFD,GAAT,CADmB,CAApB,CADmB,EASnB9B,uBAAY4B,OAAZ,CAAoBb,cAApB,CATmB,EAUnBf,6BACUM,MAAM,CAACW,GAAP,CAAWM,KAAX,CAAiBnB,MAD3B,EAEUJ,uBAAY+B,MAAZ,CAAmB,CAAnB,EAAsB,IAAtB,CAFV,CAVmB,EAcnB/B,uBAAYgC,MAAZ,CAAmB;AAClBC,IAAAA,MAAM,EAAE;AADU,GAAnB,CAdmB,EAiBnBC,oBAAOC,MAAP,CAAc;AAACC,IAAAA,KAAK,EAAE;AAAR,GAAd,CAjBmB,CAAb,CAAP;AAmBA;AAED;;;;;AAGe,SAAShC,MAAT,CAAgBiC,IAAhB,EAAsB;AAEpC,SAAO,sBAAK,CACX,eAAKlC,iBAAMC,MAAN,CAAakC,GAAlB,EAAuB;AAACC,IAAAA,UAAU,EAAE,CAACf;AAAd,GAAvB,CADW,EAEX3B,6BAA6B,EAFlB,EAGX;AACAG,+BACCwB,iBADD,EAEC,uCAFD,CAJW,EAQXV,4BAA4B,EARjB,EASX,gBAAKX,iBAAMC,MAAN,CAAaF,IAAlB,EAAwB;AAACqC,IAAAA,UAAU,EAAE,CAACf;AAAd,GAAxB,CATW,CAAL,EAUJa,IAVI,CAAP;AAWA",
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport {src, dest} from 'gulp';\nimport postcssPresetEnv from 'postcss-preset-env';\nimport AtImport from 'postcss-import';\nimport pump from 'pump';\nimport cssnano from 'cssnano';\nimport stylelint from 'stylelint';\nimport reporter from 'postcss-reporter';\nimport calc from 'postcss-calc';\nimport { pipeline } from 'mississippi';\n\n/**\n * Internal dependencies\n */\nimport {rootPath, paths, gulpPlugins, isProd} from './constants';\nimport {\n\tgetThemeConfig,\n\tgetStringReplacementTasks,\n\tlogError,\n\tconfigValueDefined,\n\tappendBaseToFilePathArray\n} from './utils';\nimport {server} from './browserSync';\n\nexport function stylesBeforeReplacementStream() {\n\n\t// Return a single stream containing all the\n\t// before replacement functionality\n\treturn pipeline.obj([\n\t\tlogError('CSS'),\n\t\tgulpPlugins.newer({\n\t\t\tdest: paths.styles.dest,\n\t\t\textra: [paths.config.themeConfig]\n\t\t}),\n\t\tgulpPlugins.phpcs({\n\t\t\tbin: `${rootPath}/vendor/bin/phpcs`,\n\t\t\tstandard: 'WordPress',\n\t\t\twarningSeverity: 0\n\t\t}),\n\t\t// Log all problems that were found.\n\t\tgulpPlugins.phpcs.reporter('log'),\n\t]);\n}\n\nexport function stylesAfterReplacementStream() {\n\tconst config = getThemeConfig();\n\n\tconst postcssPlugins = [\n\t\tstylelint(),\n\t\tpostcssPresetEnv({\n\t\t\timportFrom: (\n\t\t\t\tconfigValueDefined('config.dev.styles.importFrom') ?\n\t\t\t\tappendBaseToFilePathArray(config.dev.styles.importFrom, paths.styles.srcDir) :\n\t\t\t\t[]\n\t\t\t),\n\t\t\tstage: (\n\t\t\t\tconfigValueDefined('config.dev.styles.stage') ?\n\t\t\t\tconfig.dev.styles.stage :\n\t\t\t\t3\n\t\t\t),\n\t\t\tautoprefixer: (\n\t\t\t\tconfigValueDefined('config.dev.styles.autoprefixer') ?\n\t\t\t\tconfig.dev.styles.autoprefixer :\n\t\t\t\t{}\n\t\t\t),\n\t\t\tfeatures: (\n\t\t\t\tconfigValueDefined('config.dev.styles.features') ?\n\t\t\t\tconfig.dev.styles.features :\n\t\t\t\t{\n\t\t\t\t\t'custom-media-queries': {\n\t\t\t\t\t\tpreserve: false\n\t\t\t\t\t},\n\t\t\t\t\t'custom-properties': {\n\t\t\t\t\t\tpreserve: true\n\t\t\t\t\t},\n\t\t\t\t\t'nesting-rules': true\n\t\t\t\t}\n\t\t\t)\n\t\t}),\n\t\tcalc({\n\t\t\tpreserve: false\n\t\t}),\n\t\tcssnano(),\n\t];\n\n\t// Skip minifying files if we aren't building for\n\t// production and debug is enabled\n\tif( config.dev.debug.styles && ! isProd ) {\n\t\tpostcssPlugins.pop();\n\t}\n\n\t// Report messages from other postcss plugins\n\tpostcssPlugins.push(\n\t\treporter({ clearReportedMessages: true })\n\t);\n\n\t// Return a single stream containing all the\n\t// after replacement functionality\n\treturn pipeline.obj([\n\t\tgulpPlugins.postcss([\n\t\t\tAtImport({\n\t\t\t\tpath: [paths.styles.srcDir],\n\t\t\t\tplugins: [\n\t\t\t\t\tstylelint(),\n\t\t\t\t]\n\t\t\t})\n\t\t]),\n\t\tgulpPlugins.postcss(postcssPlugins),\n\t\tgulpPlugins.if(\n            config.dev.debug.styles,\n            gulpPlugins.tabify(2, true)\n        ),\n\t\tgulpPlugins.rename({\n\t\t\tsuffix: '.min'\n\t\t}),\n\t\tserver.stream({match: \"**/*.css\"}),\n\t]);\n}\n\n/**\n* CSS via PostCSS + CSSNext (includes Autoprefixer by default).\n*/\nexport default function styles(done) {\n\n\treturn pump([\n\t\tsrc( paths.styles.src, {sourcemaps: !isProd} ),\n\t\tstylesBeforeReplacementStream(),\n\t\t// Only do string replacements when building for production\n\t\tgulpPlugins.if(\n\t\t\tisProd,\n\t\t\tgetStringReplacementTasks()\n\t\t),\n\t\tstylesAfterReplacementStream(),\n\t\tdest(paths.styles.dest, {sourcemaps: !isProd}),\n\t], done);\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561222234000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"filename\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/editorStyles.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/editorStyles.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/editorStyles.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/editorStyles.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
        "sourceFileName": "editorStyles.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.editorStylesBeforeReplacementStream = editorStylesBeforeReplacementStream;\nexports.editorStylesAfterReplacementStream = editorStylesAfterReplacementStream;\nexports[\"default\"] = editorStyles;\n\nvar _gulp = require(\"gulp\");\n\nvar _postcssPresetEnv = _interopRequireDefault(require(\"postcss-preset-env\"));\n\nvar _postcssImport = _interopRequireDefault(require(\"postcss-import\"));\n\nvar _pump = _interopRequireDefault(require(\"pump\"));\n\nvar _cssnano = _interopRequireDefault(require(\"cssnano\"));\n\nvar _stylelint = _interopRequireDefault(require(\"stylelint\"));\n\nvar _postcssReporter = _interopRequireDefault(require(\"postcss-reporter\"));\n\nvar _postcssCalc = _interopRequireDefault(require(\"postcss-calc\"));\n\nvar _mississippi = require(\"mississippi\");\n\nvar _constants = require(\"./constants\");\n\nvar _utils = require(\"./utils\");\n\nvar _browserSync = require(\"./browserSync\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\nfunction editorStylesBeforeReplacementStream() {\n  // Return a single stream containing all the\n  // before replacement functionality\n  return _mississippi.pipeline.obj([(0, _utils.logError)('Editor CSS'), _constants.gulpPlugins.newer({\n    dest: _constants.paths.styles.dest,\n    extra: [_constants.paths.config.themeConfig]\n  }), _constants.gulpPlugins.phpcs({\n    bin: \"\".concat(_constants.rootPath, \"/vendor/bin/phpcs\"),\n    standard: 'WordPress',\n    warningSeverity: 0\n  }), // Log all problems that were found.\n  _constants.gulpPlugins.phpcs.reporter('log')]);\n}\n\nfunction editorStylesAfterReplacementStream() {\n  var config = (0, _utils.getThemeConfig)();\n  var postcssPlugins = [(0, _stylelint[\"default\"])(), (0, _postcssPresetEnv[\"default\"])({\n    importFrom: (0, _utils.configValueDefined)('config.dev.styles.importFrom') ? (0, _utils.appendBaseToFilePathArray)(config.dev.styles.importFrom, _constants.paths.styles.srcDir) : [],\n    stage: (0, _utils.configValueDefined)('config.dev.styles.stage') ? config.dev.styles.stage : 3,\n    autoprefixer: (0, _utils.configValueDefined)('config.dev.styles.autoprefixer') ? config.dev.styles.autoprefixer : {},\n    preserve: false,\n    features: (0, _utils.configValueDefined)('config.dev.styles.features') ? config.dev.styles.features : {\n      'custom-media-queries': {\n        preserve: false\n      },\n      'custom-properties': {\n        // Preserve must always be false for the editor\n        preserve: false\n      },\n      'nesting-rules': true\n    }\n  }), (0, _postcssCalc[\"default\"])({\n    preserve: false\n  }), (0, _cssnano[\"default\"])()]; // Skip minifying files if we aren't building for\n  // production and debug is enabled\n\n  if (config.dev.debug.styles && !_constants.isProd) {\n    postcssPlugins.pop();\n  } // Report messages from other postcss plugins\n\n\n  postcssPlugins.push((0, _postcssReporter[\"default\"])({\n    clearReportedMessages: true\n  })); // Return a single stream containing all the\n  // after replacement functionality\n\n  return _mississippi.pipeline.obj([_constants.gulpPlugins.postcss([(0, _postcssImport[\"default\"])({\n    path: [_constants.paths.styles.srcDir],\n    plugins: [(0, _stylelint[\"default\"])()]\n  })]), _constants.gulpPlugins.postcss(postcssPlugins), _constants.gulpPlugins[\"if\"](config.dev.debug.styles, _constants.gulpPlugins.tabify(2, true)), _constants.gulpPlugins.rename({\n    suffix: '.min'\n  }), _browserSync.server.stream({\n    match: \"**/*.css\"\n  })]);\n}\n/**\n* CSS via PostCSS + CSSNext (includes Autoprefixer by default).\n*/\n\n\nfunction editorStyles(done) {\n  return (0, _pump[\"default\"])([(0, _gulp.src)(_constants.paths.styles.editorSrc, {\n    sourcemaps: !_constants.isProd\n  }), editorStylesBeforeReplacementStream(), // Only do string replacements when building for production\n  _constants.gulpPlugins[\"if\"](_constants.isProd, (0, _utils.getStringReplacementTasks)()), editorStylesAfterReplacementStream(), (0, _gulp.dest)(_constants.paths.styles.editorDest, {\n    sourcemaps: !_constants.isProd\n  })], done);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "editorStyles.js"
      ],
      "names": [
        "editorStylesBeforeReplacementStream",
        "pipeline",
        "obj",
        "gulpPlugins",
        "newer",
        "dest",
        "paths",
        "styles",
        "extra",
        "config",
        "themeConfig",
        "phpcs",
        "bin",
        "rootPath",
        "standard",
        "warningSeverity",
        "reporter",
        "editorStylesAfterReplacementStream",
        "postcssPlugins",
        "importFrom",
        "dev",
        "srcDir",
        "stage",
        "autoprefixer",
        "preserve",
        "features",
        "debug",
        "isProd",
        "pop",
        "push",
        "clearReportedMessages",
        "postcss",
        "path",
        "plugins",
        "tabify",
        "rename",
        "suffix",
        "server",
        "stream",
        "match",
        "editorStyles",
        "done",
        "editorSrc",
        "sourcemaps",
        "editorDest"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAKA;;AACA;;AAOA;;;;AAXA;;;AAaO,SAASA,mCAAT,GAA+C;AAErD;AACA;AACA,SAAOC,sBAASC,GAAT,CAAa,CACnB,qBAAS,YAAT,CADmB,EAEnBC,uBAAYC,KAAZ,CAAkB;AACjBC,IAAAA,IAAI,EAAEC,iBAAMC,MAAN,CAAaF,IADF;AAEjBG,IAAAA,KAAK,EAAE,CAACF,iBAAMG,MAAN,CAAaC,WAAd;AAFU,GAAlB,CAFmB,EAMnBP,uBAAYQ,KAAZ,CAAkB;AACjBC,IAAAA,GAAG,YAAKC,mBAAL,sBADc;AAEjBC,IAAAA,QAAQ,EAAE,WAFO;AAGjBC,IAAAA,eAAe,EAAE;AAHA,GAAlB,CANmB,EAWnB;AACAZ,yBAAYQ,KAAZ,CAAkBK,QAAlB,CAA2B,KAA3B,CAZmB,CAAb,CAAP;AAcA;;AAEM,SAASC,kCAAT,GAA8C;AACpD,MAAMR,MAAM,GAAG,4BAAf;AAEA,MAAMS,cAAc,GAAG,CACtB,4BADsB,EAEtB,kCAAiB;AAChBC,IAAAA,UAAU,EACT,+BAAmB,8BAAnB,IACA,sCAA0BV,MAAM,CAACW,GAAP,CAAWb,MAAX,CAAkBY,UAA5C,EAAwDb,iBAAMC,MAAN,CAAac,MAArE,CADA,GAEA,EAJe;AAMhBC,IAAAA,KAAK,EACJ,+BAAmB,yBAAnB,IACAb,MAAM,CAACW,GAAP,CAAWb,MAAX,CAAkBe,KADlB,GAEA,CATe;AAWhBC,IAAAA,YAAY,EACX,+BAAmB,gCAAnB,IACAd,MAAM,CAACW,GAAP,CAAWb,MAAX,CAAkBgB,YADlB,GAEA,EAde;AAgBhBC,IAAAA,QAAQ,EAAE,KAhBM;AAiBhBC,IAAAA,QAAQ,EACP,+BAAmB,4BAAnB,IACAhB,MAAM,CAACW,GAAP,CAAWb,MAAX,CAAkBkB,QADlB,GAEA;AACC,8BAAwB;AACvBD,QAAAA,QAAQ,EAAE;AADa,OADzB;AAIC,2BAAqB;AACpB;AACAA,QAAAA,QAAQ,EAAE;AAFU,OAJtB;AAQC,uBAAiB;AARlB;AApBe,GAAjB,CAFsB,EAkCtB,6BAAK;AACJA,IAAAA,QAAQ,EAAE;AADN,GAAL,CAlCsB,EAqCtB,0BArCsB,CAAvB,CAHoD,CA2CpD;AACA;;AACA,MAAIf,MAAM,CAACW,GAAP,CAAWM,KAAX,CAAiBnB,MAAjB,IAA2B,CAAEoB,iBAAjC,EAA0C;AACzCT,IAAAA,cAAc,CAACU,GAAf;AACA,GA/CmD,CAiDpD;;;AACAV,EAAAA,cAAc,CAACW,IAAf,CACC,iCAAS;AAAEC,IAAAA,qBAAqB,EAAE;AAAzB,GAAT,CADD,EAlDoD,CAsDpD;AACA;;AACA,SAAO7B,sBAASC,GAAT,CAAa,CACnBC,uBAAY4B,OAAZ,CAAoB,CACnB,+BAAS;AACRC,IAAAA,IAAI,EAAE,CAAC1B,iBAAMC,MAAN,CAAac,MAAd,CADE;AAERY,IAAAA,OAAO,EAAE,CACR,4BADQ;AAFD,GAAT,CADmB,CAApB,CADmB,EASnB9B,uBAAY4B,OAAZ,CAAoBb,cAApB,CATmB,EAUnBf,6BACUM,MAAM,CAACW,GAAP,CAAWM,KAAX,CAAiBnB,MAD3B,EAEUJ,uBAAY+B,MAAZ,CAAmB,CAAnB,EAAsB,IAAtB,CAFV,CAVmB,EAcnB/B,uBAAYgC,MAAZ,CAAmB;AAClBC,IAAAA,MAAM,EAAE;AADU,GAAnB,CAdmB,EAiBnBC,oBAAOC,MAAP,CAAc;AAACC,IAAAA,KAAK,EAAE;AAAR,GAAd,CAjBmB,CAAb,CAAP;AAmBA;AAED;;;;;AAGe,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AAE1C,SAAO,sBAAK,CACX,eAAKnC,iBAAMC,MAAN,CAAamC,SAAlB,EAA6B;AAACC,IAAAA,UAAU,EAAE,CAAChB;AAAd,GAA7B,CADW,EAEX3B,mCAAmC,EAFxB,EAGX;AACAG,+BACCwB,iBADD,EAEC,uCAFD,CAJW,EAQXV,kCAAkC,EARvB,EASX,gBAAKX,iBAAMC,MAAN,CAAaqC,UAAlB,EAA8B;AAACD,IAAAA,UAAU,EAAE,CAAChB;AAAd,GAA9B,CATW,CAAL,EAUJc,IAVI,CAAP;AAWA",
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport {src, dest} from 'gulp';\nimport postcssPresetEnv from 'postcss-preset-env';\nimport AtImport from 'postcss-import';\nimport pump from 'pump';\nimport cssnano from 'cssnano';\nimport stylelint from 'stylelint';\nimport reporter from 'postcss-reporter';\nimport calc from 'postcss-calc';\nimport { pipeline } from 'mississippi';\n\n/**\n * Internal dependencies\n */\nimport {rootPath, paths, gulpPlugins, isProd} from './constants';\nimport {\n\tgetThemeConfig,\n\tgetStringReplacementTasks,\n\tlogError,\n\tconfigValueDefined,\n\tappendBaseToFilePathArray\n} from './utils';\nimport {server} from './browserSync';\n\nexport function editorStylesBeforeReplacementStream() {\n\n\t// Return a single stream containing all the\n\t// before replacement functionality\n\treturn pipeline.obj([\n\t\tlogError('Editor CSS'),\n\t\tgulpPlugins.newer({\n\t\t\tdest: paths.styles.dest,\n\t\t\textra: [paths.config.themeConfig]\n\t\t}),\n\t\tgulpPlugins.phpcs({\n\t\t\tbin: `${rootPath}/vendor/bin/phpcs`,\n\t\t\tstandard: 'WordPress',\n\t\t\twarningSeverity: 0\n\t\t}),\n\t\t// Log all problems that were found.\n\t\tgulpPlugins.phpcs.reporter('log'),\n\t]);\n}\n\nexport function editorStylesAfterReplacementStream() {\n\tconst config = getThemeConfig();\n\n\tconst postcssPlugins = [\n\t\tstylelint(),\n\t\tpostcssPresetEnv({\n\t\t\timportFrom: (\n\t\t\t\tconfigValueDefined('config.dev.styles.importFrom') ?\n\t\t\t\tappendBaseToFilePathArray(config.dev.styles.importFrom, paths.styles.srcDir) :\n\t\t\t\t[]\n\t\t\t),\n\t\t\tstage: (\n\t\t\t\tconfigValueDefined('config.dev.styles.stage') ?\n\t\t\t\tconfig.dev.styles.stage :\n\t\t\t\t3\n\t\t\t),\n\t\t\tautoprefixer: (\n\t\t\t\tconfigValueDefined('config.dev.styles.autoprefixer') ?\n\t\t\t\tconfig.dev.styles.autoprefixer :\n\t\t\t\t{}\n\t\t\t),\n\t\t\tpreserve: false,\n\t\t\tfeatures: (\n\t\t\t\tconfigValueDefined('config.dev.styles.features') ?\n\t\t\t\tconfig.dev.styles.features :\n\t\t\t\t{\n\t\t\t\t\t'custom-media-queries': {\n\t\t\t\t\t\tpreserve: false\n\t\t\t\t\t},\n\t\t\t\t\t'custom-properties': {\n\t\t\t\t\t\t// Preserve must always be false for the editor\n\t\t\t\t\t\tpreserve: false\n\t\t\t\t\t},\n\t\t\t\t\t'nesting-rules': true\n\t\t\t\t}\n\t\t\t)\n\t\t}),\n\t\tcalc({\n\t\t\tpreserve: false\n\t\t}),\n\t\tcssnano(),\n\t];\n\n\t// Skip minifying files if we aren't building for\n\t// production and debug is enabled\n\tif( config.dev.debug.styles && ! isProd ) {\n\t\tpostcssPlugins.pop();\n\t}\n\n\t// Report messages from other postcss plugins\n\tpostcssPlugins.push(\n\t\treporter({ clearReportedMessages: true })\n\t);\n\n\t// Return a single stream containing all the\n\t// after replacement functionality\n\treturn pipeline.obj([\n\t\tgulpPlugins.postcss([\n\t\t\tAtImport({\n\t\t\t\tpath: [paths.styles.srcDir],\n\t\t\t\tplugins: [\n\t\t\t\t\tstylelint(),\n\t\t\t\t]\n\t\t\t})\n\t\t]),\n\t\tgulpPlugins.postcss(postcssPlugins),\n\t\tgulpPlugins.if(\n            config.dev.debug.styles,\n            gulpPlugins.tabify(2, true)\n        ),\n\t\tgulpPlugins.rename({\n\t\t\tsuffix: '.min'\n\t\t}),\n\t\tserver.stream({match: \"**/*.css\"}),\n\t]);\n}\n\n/**\n* CSS via PostCSS + CSSNext (includes Autoprefixer by default).\n*/\nexport default function editorStyles(done) {\n\n\treturn pump([\n\t\tsrc( paths.styles.editorSrc, {sourcemaps: !isProd} ),\n\t\teditorStylesBeforeReplacementStream(),\n\t\t// Only do string replacements when building for production\n\t\tgulpPlugins.if(\n\t\t\tisProd,\n\t\t\tgetStringReplacementTasks()\n\t\t),\n\t\teditorStylesAfterReplacementStream(),\n\t\tdest(paths.styles.editorDest, {sourcemaps: !isProd}),\n\t], done);\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561222234000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"filename\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/translate.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/translate.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/translate.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/translate.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
        "sourceFileName": "translate.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = translate;\n\nvar _gulp = require(\"gulp\");\n\nvar _pump = _interopRequireDefault(require(\"pump\"));\n\nvar _constants = require(\"./constants\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\n\n/**\n * Generate translation files.\n */\nfunction translate(done) {\n  var config = (0, _utils.getThemeConfig)(); // Don't generate .pot file on production if the config flag is false\n\n  if (_constants.isProd && !config[\"export\"].generatePotFile) {\n    return done();\n  }\n\n  (0, _pump[\"default\"])([(0, _gulp.src)(_constants.paths.languages.src), _constants.gulpPlugins.sort(), _constants.gulpPlugins.wpPot({\n    domain: _constants.isProd ? config.theme.slug : _constants.nameFieldDefaults.slug,\n    \"package\": _constants.isProd ? config.theme.name : _constants.nameFieldDefaults.name,\n    bugReport: _constants.isProd ? config.theme.name : _constants.nameFieldDefaults.name,\n    lastTranslator: _constants.isProd ? config.theme.author : _constants.nameFieldDefaults.author\n  }), (0, _gulp.dest)(_constants.paths.languages.dest)], done);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zbGF0ZS5qcyJdLCJuYW1lcyI6WyJ0cmFuc2xhdGUiLCJkb25lIiwiY29uZmlnIiwiaXNQcm9kIiwiZ2VuZXJhdGVQb3RGaWxlIiwicGF0aHMiLCJsYW5ndWFnZXMiLCJzcmMiLCJndWxwUGx1Z2lucyIsInNvcnQiLCJ3cFBvdCIsImRvbWFpbiIsInRoZW1lIiwic2x1ZyIsIm5hbWVGaWVsZERlZmF1bHRzIiwibmFtZSIsImJ1Z1JlcG9ydCIsImxhc3RUcmFuc2xhdG9yIiwiYXV0aG9yIiwiZGVzdCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUVBOzs7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFLQTs7QUFDQTs7OztBQUpBOzs7O0FBTUE7OztBQUdlLFNBQVNBLFNBQVQsQ0FBbUJDLElBQW5CLEVBQXlCO0FBQ3BDLE1BQU1DLE1BQU0sR0FBRyw0QkFBZixDQURvQyxDQUdwQzs7QUFDQSxNQUFLQyxxQkFBVSxDQUFFRCxNQUFNLFVBQU4sQ0FBY0UsZUFBL0IsRUFBaUQ7QUFDN0MsV0FBT0gsSUFBSSxFQUFYO0FBQ0g7O0FBRUosd0JBQUssQ0FDRSxlQUFJSSxpQkFBTUMsU0FBTixDQUFnQkMsR0FBcEIsQ0FERixFQUVFQyx1QkFBWUMsSUFBWixFQUZGLEVBR0VELHVCQUFZRSxLQUFaLENBQWtCO0FBQ2RDLElBQUFBLE1BQU0sRUFBR1IsaUJBQUQsR0FBV0QsTUFBTSxDQUFDVSxLQUFQLENBQWFDLElBQXhCLEdBQStCQyw2QkFBa0JELElBRDNDO0FBRWQsZUFBVVYsaUJBQUQsR0FBV0QsTUFBTSxDQUFDVSxLQUFQLENBQWFHLElBQXhCLEdBQStCRCw2QkFBa0JDLElBRjVDO0FBR2RDLElBQUFBLFNBQVMsRUFBR2IsaUJBQUQsR0FBV0QsTUFBTSxDQUFDVSxLQUFQLENBQWFHLElBQXhCLEdBQStCRCw2QkFBa0JDLElBSDlDO0FBSWRFLElBQUFBLGNBQWMsRUFBR2QsaUJBQUQsR0FBV0QsTUFBTSxDQUFDVSxLQUFQLENBQWFNLE1BQXhCLEdBQWlDSiw2QkFBa0JJO0FBSnJELEdBQWxCLENBSEYsRUFTRSxnQkFBS2IsaUJBQU1DLFNBQU4sQ0FBZ0JhLElBQXJCLENBVEYsQ0FBTCxFQVVNbEIsSUFWTjtBQVdBIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9hdXN0aW50dWRlL0RvY3VtZW50cy9TdXByZW1lIEhhcmR3b29kIEZsb29ycyBJbmMvd3AtY29udGVudC90aGVtZXMvd3ByaWctc3VwcmVtZWhhcmR3b29kZmxvb3JzaW5jL2d1bHAiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZW52IGVzNiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQge3NyYywgZGVzdH0gZnJvbSAnZ3VscCc7XG5pbXBvcnQgcHVtcCBmcm9tICdwdW1wJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHtwYXRocywgZ3VscFBsdWdpbnMsIG5hbWVGaWVsZERlZmF1bHRzLCBpc1Byb2R9IGZyb20gJy4vY29uc3RhbnRzJztcbmltcG9ydCB7Z2V0VGhlbWVDb25maWd9IGZyb20gJy4vdXRpbHMnO1xuXG4vKipcbiAqIEdlbmVyYXRlIHRyYW5zbGF0aW9uIGZpbGVzLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0cmFuc2xhdGUoZG9uZSkge1xuICAgIGNvbnN0IGNvbmZpZyA9IGdldFRoZW1lQ29uZmlnKCk7XG5cbiAgICAvLyBEb24ndCBnZW5lcmF0ZSAucG90IGZpbGUgb24gcHJvZHVjdGlvbiBpZiB0aGUgY29uZmlnIGZsYWcgaXMgZmFsc2VcbiAgICBpZiAoIGlzUHJvZCAmJiAhIGNvbmZpZy5leHBvcnQuZ2VuZXJhdGVQb3RGaWxlICkge1xuICAgICAgICByZXR1cm4gZG9uZSgpO1xuICAgIH1cblxuXHRwdW1wKFtcbiAgICAgICAgc3JjKHBhdGhzLmxhbmd1YWdlcy5zcmMpLFxuICAgICAgICBndWxwUGx1Z2lucy5zb3J0KCksXG4gICAgICAgIGd1bHBQbHVnaW5zLndwUG90KHtcbiAgICAgICAgICAgIGRvbWFpbjogKGlzUHJvZCkgPyBjb25maWcudGhlbWUuc2x1ZyA6IG5hbWVGaWVsZERlZmF1bHRzLnNsdWcsXG4gICAgICAgICAgICBwYWNrYWdlOiAoaXNQcm9kKSA/IGNvbmZpZy50aGVtZS5uYW1lIDogbmFtZUZpZWxkRGVmYXVsdHMubmFtZSxcbiAgICAgICAgICAgIGJ1Z1JlcG9ydDogKGlzUHJvZCkgPyBjb25maWcudGhlbWUubmFtZSA6IG5hbWVGaWVsZERlZmF1bHRzLm5hbWUsXG4gICAgICAgICAgICBsYXN0VHJhbnNsYXRvcjogKGlzUHJvZCkgPyBjb25maWcudGhlbWUuYXV0aG9yIDogbmFtZUZpZWxkRGVmYXVsdHMuYXV0aG9yXG4gICAgICAgIH0pLFxuICAgICAgICBkZXN0KHBhdGhzLmxhbmd1YWdlcy5kZXN0KSxcbiAgICBdLCBkb25lKTtcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "translate.js"
      ],
      "names": [
        "translate",
        "done",
        "config",
        "isProd",
        "generatePotFile",
        "paths",
        "languages",
        "src",
        "gulpPlugins",
        "sort",
        "wpPot",
        "domain",
        "theme",
        "slug",
        "nameFieldDefaults",
        "name",
        "bugReport",
        "lastTranslator",
        "author",
        "dest"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;AAGA;;AACA;;AAKA;;AACA;;;;AAJA;;;;AAMA;;;AAGe,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;AACpC,MAAMC,MAAM,GAAG,4BAAf,CADoC,CAGpC;;AACA,MAAKC,qBAAU,CAAED,MAAM,UAAN,CAAcE,eAA/B,EAAiD;AAC7C,WAAOH,IAAI,EAAX;AACH;;AAEJ,wBAAK,CACE,eAAII,iBAAMC,SAAN,CAAgBC,GAApB,CADF,EAEEC,uBAAYC,IAAZ,EAFF,EAGED,uBAAYE,KAAZ,CAAkB;AACdC,IAAAA,MAAM,EAAGR,iBAAD,GAAWD,MAAM,CAACU,KAAP,CAAaC,IAAxB,GAA+BC,6BAAkBD,IAD3C;AAEd,eAAUV,iBAAD,GAAWD,MAAM,CAACU,KAAP,CAAaG,IAAxB,GAA+BD,6BAAkBC,IAF5C;AAGdC,IAAAA,SAAS,EAAGb,iBAAD,GAAWD,MAAM,CAACU,KAAP,CAAaG,IAAxB,GAA+BD,6BAAkBC,IAH9C;AAIdE,IAAAA,cAAc,EAAGd,iBAAD,GAAWD,MAAM,CAACU,KAAP,CAAaM,MAAxB,GAAiCJ,6BAAkBI;AAJrD,GAAlB,CAHF,EASE,gBAAKb,iBAAMC,SAAN,CAAgBa,IAArB,CATF,CAAL,EAUMlB,IAVN;AAWA",
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport {src, dest} from 'gulp';\nimport pump from 'pump';\n\n/**\n * Internal dependencies\n */\nimport {paths, gulpPlugins, nameFieldDefaults, isProd} from './constants';\nimport {getThemeConfig} from './utils';\n\n/**\n * Generate translation files.\n */\nexport default function translate(done) {\n    const config = getThemeConfig();\n\n    // Don't generate .pot file on production if the config flag is false\n    if ( isProd && ! config.export.generatePotFile ) {\n        return done();\n    }\n\n\tpump([\n        src(paths.languages.src),\n        gulpPlugins.sort(),\n        gulpPlugins.wpPot({\n            domain: (isProd) ? config.theme.slug : nameFieldDefaults.slug,\n            package: (isProd) ? config.theme.name : nameFieldDefaults.name,\n            bugReport: (isProd) ? config.theme.name : nameFieldDefaults.name,\n            lastTranslator: (isProd) ? config.theme.author : nameFieldDefaults.author\n        }),\n        dest(paths.languages.dest),\n    ], done);\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1561222234000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"filename\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/watch.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/watch.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/watch.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/watch.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
        "sourceFileName": "watch.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = watch;\n\nvar _gulp = require(\"gulp\");\n\nvar _pump = _interopRequireDefault(require(\"pump\"));\n\nvar _constants = require(\"./constants\");\n\nvar _utils = require(\"./utils\");\n\nvar _browserSync = require(\"./browserSync\");\n\nvar _images = _interopRequireDefault(require(\"./images\"));\n\nvar _scripts = _interopRequireDefault(require(\"./scripts\"));\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _editorStyles = _interopRequireDefault(require(\"./editorStyles\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\n\n/**\n * Watch everything\n */\nfunction watch() {\n  /**\n   * gulp watch uses chokidar, which doesn't play well with backslashes\n   * in file paths, so they are replaced with forward slashes, which are\n   * valid for Windows paths in a NodeJS context.\n   */\n  var PHPwatcher = (0, _gulp.watch)((0, _utils.backslashToForwardSlash)(_constants.paths.php.src), _browserSync.reload);\n  var config = (0, _utils.getThemeConfig)(); // Only code sniff PHP files if the debug setting is true\n\n  if (config.dev.debug.phpcs) {\n    PHPwatcher.on('change', function (path) {\n      return (0, _pump[\"default\"])([(0, _gulp.src)(path), // Run code sniffing\n      _constants.gulpPlugins.phpcs(_constants.PHPCSOptions), // Log all problems that were found.\n      _constants.gulpPlugins.phpcs.reporter('log')]);\n    });\n  }\n\n  (0, _gulp.watch)((0, _utils.backslashToForwardSlash)(_constants.paths.styles.src[0]), (0, _gulp.series)(_styles[\"default\"], _editorStyles[\"default\"]));\n  (0, _gulp.watch)((0, _utils.backslashToForwardSlash)(_constants.paths.scripts.src[0]), (0, _gulp.series)(_scripts[\"default\"], _browserSync.reload));\n  (0, _gulp.watch)((0, _utils.backslashToForwardSlash)(_constants.paths.images.src), (0, _gulp.series)(_images[\"default\"], _browserSync.reload));\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhdGNoLmpzIl0sIm5hbWVzIjpbIndhdGNoIiwiUEhQd2F0Y2hlciIsInBhdGhzIiwicGhwIiwic3JjIiwicmVsb2FkIiwiY29uZmlnIiwiZGV2IiwiZGVidWciLCJwaHBjcyIsIm9uIiwicGF0aCIsImd1bHBQbHVnaW5zIiwiUEhQQ1NPcHRpb25zIiwicmVwb3J0ZXIiLCJzdHlsZXMiLCJlZGl0b3JTdHlsZXMiLCJzY3JpcHRzIiwiaW1hZ2VzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBRUE7Ozs7Ozs7OztBQUdBOztBQUNBOztBQUtBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBVEE7Ozs7QUFXQTs7O0FBR2UsU0FBU0EsS0FBVCxHQUFpQjtBQUMvQjs7Ozs7QUFLQSxNQUFNQyxVQUFVLEdBQUcsaUJBQVUsb0NBQXdCQyxpQkFBTUMsR0FBTixDQUFVQyxHQUFsQyxDQUFWLEVBQWtEQyxtQkFBbEQsQ0FBbkI7QUFDQSxNQUFNQyxNQUFNLEdBQUcsNEJBQWYsQ0FQK0IsQ0FTL0I7O0FBQ0EsTUFBSUEsTUFBTSxDQUFDQyxHQUFQLENBQVdDLEtBQVgsQ0FBaUJDLEtBQXJCLEVBQTZCO0FBQzVCUixJQUFBQSxVQUFVLENBQUNTLEVBQVgsQ0FBYyxRQUFkLEVBQXdCLFVBQVNDLElBQVQsRUFBZTtBQUN0QyxhQUFPLHNCQUFLLENBQ1gsZUFBSUEsSUFBSixDQURXLEVBRVg7QUFDQUMsNkJBQVlILEtBQVosQ0FBa0JJLHVCQUFsQixDQUhXLEVBSVg7QUFDQUQsNkJBQVlILEtBQVosQ0FBa0JLLFFBQWxCLENBQTJCLEtBQTNCLENBTFcsQ0FBTCxDQUFQO0FBT0EsS0FSRDtBQVNBOztBQUVELG1CQUFVLG9DQUF3QlosaUJBQU1hLE1BQU4sQ0FBYVgsR0FBYixDQUFpQixDQUFqQixDQUF4QixDQUFWLEVBQXdELGtCQUFRVyxrQkFBUixFQUFnQkMsd0JBQWhCLENBQXhEO0FBRUEsbUJBQVUsb0NBQXdCZCxpQkFBTWUsT0FBTixDQUFjYixHQUFkLENBQWtCLENBQWxCLENBQXhCLENBQVYsRUFBeUQsa0JBQU9hLG1CQUFQLEVBQWdCWixtQkFBaEIsQ0FBekQ7QUFFQSxtQkFBVSxvQ0FBd0JILGlCQUFNZ0IsTUFBTixDQUFhZCxHQUFyQyxDQUFWLEVBQXFELGtCQUFPYyxrQkFBUCxFQUFlYixtQkFBZixDQUFyRDtBQUNBIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9hdXN0aW50dWRlL0RvY3VtZW50cy9TdXByZW1lIEhhcmR3b29kIEZsb29ycyBJbmMvd3AtY29udGVudC90aGVtZXMvd3ByaWctc3VwcmVtZWhhcmR3b29kZmxvb3JzaW5jL2d1bHAiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZW52IGVzNiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQge3dhdGNoIGFzIGd1bHBXYXRjaCwgc2VyaWVzLCBzcmN9IGZyb20gJ2d1bHAnO1xuaW1wb3J0IHB1bXAgZnJvbSAncHVtcCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7cGF0aHMsIGd1bHBQbHVnaW5zLCBQSFBDU09wdGlvbnN9IGZyb20gJy4vY29uc3RhbnRzJztcbmltcG9ydCB7Z2V0VGhlbWVDb25maWcsIGJhY2tzbGFzaFRvRm9yd2FyZFNsYXNofSBmcm9tICcuL3V0aWxzJztcbmltcG9ydCB7cmVsb2FkfSBmcm9tICcuL2Jyb3dzZXJTeW5jJztcbmltcG9ydCBpbWFnZXMgZnJvbSAnLi9pbWFnZXMnO1xuaW1wb3J0IHNjcmlwdHMgZnJvbSAnLi9zY3JpcHRzJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMnO1xuaW1wb3J0IGVkaXRvclN0eWxlcyBmcm9tICcuL2VkaXRvclN0eWxlcyc7XG5cbi8qKlxuICogV2F0Y2ggZXZlcnl0aGluZ1xuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB3YXRjaCgpIHtcblx0LyoqXG5cdCAqIGd1bHAgd2F0Y2ggdXNlcyBjaG9raWRhciwgd2hpY2ggZG9lc24ndCBwbGF5IHdlbGwgd2l0aCBiYWNrc2xhc2hlc1xuXHQgKiBpbiBmaWxlIHBhdGhzLCBzbyB0aGV5IGFyZSByZXBsYWNlZCB3aXRoIGZvcndhcmQgc2xhc2hlcywgd2hpY2ggYXJlXG5cdCAqIHZhbGlkIGZvciBXaW5kb3dzIHBhdGhzIGluIGEgTm9kZUpTIGNvbnRleHQuXG5cdCAqL1xuXHRjb25zdCBQSFB3YXRjaGVyID0gZ3VscFdhdGNoKGJhY2tzbGFzaFRvRm9yd2FyZFNsYXNoKHBhdGhzLnBocC5zcmMpLCByZWxvYWQpO1xuXHRjb25zdCBjb25maWcgPSBnZXRUaGVtZUNvbmZpZygpO1xuXG5cdC8vIE9ubHkgY29kZSBzbmlmZiBQSFAgZmlsZXMgaWYgdGhlIGRlYnVnIHNldHRpbmcgaXMgdHJ1ZVxuXHRpZiggY29uZmlnLmRldi5kZWJ1Zy5waHBjcyApIHtcblx0XHRQSFB3YXRjaGVyLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbihwYXRoKSB7XG5cdFx0XHRyZXR1cm4gcHVtcChbXG5cdFx0XHRcdHNyYyhwYXRoKSxcblx0XHRcdFx0Ly8gUnVuIGNvZGUgc25pZmZpbmdcblx0XHRcdFx0Z3VscFBsdWdpbnMucGhwY3MoUEhQQ1NPcHRpb25zKSxcblx0XHRcdFx0Ly8gTG9nIGFsbCBwcm9ibGVtcyB0aGF0IHdlcmUgZm91bmQuXG5cdFx0XHRcdGd1bHBQbHVnaW5zLnBocGNzLnJlcG9ydGVyKCdsb2cnKSxcblx0XHRcdF0pO1xuXHRcdH0pO1xuXHR9XG5cblx0Z3VscFdhdGNoKGJhY2tzbGFzaFRvRm9yd2FyZFNsYXNoKHBhdGhzLnN0eWxlcy5zcmNbMF0pLCBzZXJpZXMoIHN0eWxlcywgZWRpdG9yU3R5bGVzICkgKTtcblxuXHRndWxwV2F0Y2goYmFja3NsYXNoVG9Gb3J3YXJkU2xhc2gocGF0aHMuc2NyaXB0cy5zcmNbMF0pLCBzZXJpZXMoc2NyaXB0cywgcmVsb2FkKSk7XG5cblx0Z3VscFdhdGNoKGJhY2tzbGFzaFRvRm9yd2FyZFNsYXNoKHBhdGhzLmltYWdlcy5zcmMpLCBzZXJpZXMoaW1hZ2VzLCByZWxvYWQpKTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "watch.js"
      ],
      "names": [
        "watch",
        "PHPwatcher",
        "paths",
        "php",
        "src",
        "reload",
        "config",
        "dev",
        "debug",
        "phpcs",
        "on",
        "path",
        "gulpPlugins",
        "PHPCSOptions",
        "reporter",
        "styles",
        "editorStyles",
        "scripts",
        "images"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;AAGA;;AACA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AATA;;;;AAWA;;;AAGe,SAASA,KAAT,GAAiB;AAC/B;;;;;AAKA,MAAMC,UAAU,GAAG,iBAAU,oCAAwBC,iBAAMC,GAAN,CAAUC,GAAlC,CAAV,EAAkDC,mBAAlD,CAAnB;AACA,MAAMC,MAAM,GAAG,4BAAf,CAP+B,CAS/B;;AACA,MAAIA,MAAM,CAACC,GAAP,CAAWC,KAAX,CAAiBC,KAArB,EAA6B;AAC5BR,IAAAA,UAAU,CAACS,EAAX,CAAc,QAAd,EAAwB,UAASC,IAAT,EAAe;AACtC,aAAO,sBAAK,CACX,eAAIA,IAAJ,CADW,EAEX;AACAC,6BAAYH,KAAZ,CAAkBI,uBAAlB,CAHW,EAIX;AACAD,6BAAYH,KAAZ,CAAkBK,QAAlB,CAA2B,KAA3B,CALW,CAAL,CAAP;AAOA,KARD;AASA;;AAED,mBAAU,oCAAwBZ,iBAAMa,MAAN,CAAaX,GAAb,CAAiB,CAAjB,CAAxB,CAAV,EAAwD,kBAAQW,kBAAR,EAAgBC,wBAAhB,CAAxD;AAEA,mBAAU,oCAAwBd,iBAAMe,OAAN,CAAcb,GAAd,CAAkB,CAAlB,CAAxB,CAAV,EAAyD,kBAAOa,mBAAP,EAAgBZ,mBAAhB,CAAzD;AAEA,mBAAU,oCAAwBH,iBAAMgB,MAAN,CAAad,GAArC,CAAV,EAAqD,kBAAOc,kBAAP,EAAeb,mBAAf,CAArD;AACA",
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport {watch as gulpWatch, series, src} from 'gulp';\nimport pump from 'pump';\n\n/**\n * Internal dependencies\n */\nimport {paths, gulpPlugins, PHPCSOptions} from './constants';\nimport {getThemeConfig, backslashToForwardSlash} from './utils';\nimport {reload} from './browserSync';\nimport images from './images';\nimport scripts from './scripts';\nimport styles from './styles';\nimport editorStyles from './editorStyles';\n\n/**\n * Watch everything\n */\nexport default function watch() {\n\t/**\n\t * gulp watch uses chokidar, which doesn't play well with backslashes\n\t * in file paths, so they are replaced with forward slashes, which are\n\t * valid for Windows paths in a NodeJS context.\n\t */\n\tconst PHPwatcher = gulpWatch(backslashToForwardSlash(paths.php.src), reload);\n\tconst config = getThemeConfig();\n\n\t// Only code sniff PHP files if the debug setting is true\n\tif( config.dev.debug.phpcs ) {\n\t\tPHPwatcher.on('change', function(path) {\n\t\t\treturn pump([\n\t\t\t\tsrc(path),\n\t\t\t\t// Run code sniffing\n\t\t\t\tgulpPlugins.phpcs(PHPCSOptions),\n\t\t\t\t// Log all problems that were found.\n\t\t\t\tgulpPlugins.phpcs.reporter('log'),\n\t\t\t]);\n\t\t});\n\t}\n\n\tgulpWatch(backslashToForwardSlash(paths.styles.src[0]), series( styles, editorStyles ) );\n\n\tgulpWatch(backslashToForwardSlash(paths.scripts.src[0]), series(scripts, reload));\n\n\tgulpWatch(backslashToForwardSlash(paths.images.src), series(images, reload));\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561222234000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"filename\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/prodPrep.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/prodPrep.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/prodPrep.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/prodPrep.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
        "sourceFileName": "prodPrep.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = prodPrep;\n\nvar _gulp = require(\"gulp\");\n\nvar _pump = _interopRequireDefault(require(\"pump\"));\n\nvar _fancyLog = _interopRequireDefault(require(\"fancy-log\"));\n\nvar _ansiColors = _interopRequireDefault(require(\"ansi-colors\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _constants = require(\"./constants\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\n\n/**\n * Create the production directory\n */\nfunction prodPrep(done) {\n  var config = (0, _utils.getThemeConfig)(); // Error if not in a production environment\n\n  if (!_constants.isProd) {\n    (0, _fancyLog[\"default\"])(_ansiColors[\"default\"].red(\"\".concat(_ansiColors[\"default\"].bold('Error:'), \" the bundle task may only be called from the production environment. Set NODE_ENV to production and try again.\")));\n    process.exit(1);\n  } // The dev theme and the prod theme can't have the same name\n\n\n  if (_path[\"default\"].basename(_constants.prodThemePath) === _path[\"default\"].basename(_constants.rootPath)) {\n    (0, _fancyLog[\"default\"])(_ansiColors[\"default\"].red(\"\".concat(_ansiColors[\"default\"].bold('Error:'), \" the theme slug cannot be the same as the dev theme directory name.\")));\n    process.exit(1);\n  }\n\n  var requiredConfigUpdates = ['slug', 'name'];\n  requiredConfigUpdates.map(function (requiredConfigField) {\n    // Error if config that must be set is still the default value.\n    if (_constants.nameFieldDefaults[requiredConfigField] === config.theme[requiredConfigField]) {\n      (0, _fancyLog[\"default\"])(_ansiColors[\"default\"].red(\"\".concat(_ansiColors[\"default\"].bold('Error:'), \" the theme \").concat(requiredConfigField, \" must be different than the default value \").concat(_constants.nameFieldDefaults[requiredConfigField], \".\")));\n      process.exit(1);\n    }\n  }); // Create the prod directory\n\n  (0, _utils.createProdDir)(); // Copying misc files to the prod directory\n\n  return (0, _pump[\"default\"])([(0, _gulp.src)(_constants.paths[\"export\"].src, {\n    allowEmpty: true\n  }), (0, _gulp.dest)(_utils.gulpRelativeDest)], done);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2RQcmVwLmpzIl0sIm5hbWVzIjpbInByb2RQcmVwIiwiZG9uZSIsImNvbmZpZyIsImlzUHJvZCIsImNvbG9ycyIsInJlZCIsImJvbGQiLCJwcm9jZXNzIiwiZXhpdCIsInBhdGgiLCJiYXNlbmFtZSIsInByb2RUaGVtZVBhdGgiLCJyb290UGF0aCIsInJlcXVpcmVkQ29uZmlnVXBkYXRlcyIsIm1hcCIsInJlcXVpcmVkQ29uZmlnRmllbGQiLCJuYW1lRmllbGREZWZhdWx0cyIsInRoZW1lIiwicGF0aHMiLCJzcmMiLCJhbGxvd0VtcHR5IiwiZ3VscFJlbGF0aXZlRGVzdCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUVBOzs7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFLQTs7QUFPQTs7OztBQVZBOzs7O0FBWUE7OztBQUdlLFNBQVNBLFFBQVQsQ0FBa0JDLElBQWxCLEVBQXdCO0FBRW5DLE1BQU1DLE1BQU0sR0FBRyw0QkFBZixDQUZtQyxDQUluQzs7QUFDQSxNQUFJLENBQUVDLGlCQUFOLEVBQWM7QUFDViw4QkFBSUMsdUJBQU9DLEdBQVAsV0FBY0QsdUJBQU9FLElBQVAsQ0FBWSxRQUFaLENBQWQsb0hBQUo7QUFDQUMsSUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWEsQ0FBYjtBQUNILEdBUmtDLENBVW5DOzs7QUFDQSxNQUFLQyxpQkFBS0MsUUFBTCxDQUFjQyx3QkFBZCxNQUFpQ0YsaUJBQUtDLFFBQUwsQ0FBY0UsbUJBQWQsQ0FBdEMsRUFBK0Q7QUFDM0QsOEJBQUlSLHVCQUFPQyxHQUFQLFdBQWNELHVCQUFPRSxJQUFQLENBQVksUUFBWixDQUFkLHlFQUFKO0FBQ0FDLElBQUFBLE9BQU8sQ0FBQ0MsSUFBUixDQUFhLENBQWI7QUFDSDs7QUFFRCxNQUFNSyxxQkFBcUIsR0FBRyxDQUMxQixNQUQwQixFQUUxQixNQUYwQixDQUE5QjtBQUtBQSxFQUFBQSxxQkFBcUIsQ0FBQ0MsR0FBdEIsQ0FBMkIsVUFBQ0MsbUJBQUQsRUFBeUI7QUFDaEQ7QUFDQSxRQUFLQyw2QkFBa0JELG1CQUFsQixNQUEyQ2IsTUFBTSxDQUFDZSxLQUFQLENBQWFGLG1CQUFiLENBQWhELEVBQW1GO0FBQy9FLGdDQUFJWCx1QkFBT0MsR0FBUCxXQUFjRCx1QkFBT0UsSUFBUCxDQUFZLFFBQVosQ0FBZCx3QkFBaURTLG1CQUFqRCx1REFBaUhDLDZCQUFrQkQsbUJBQWxCLENBQWpILE9BQUo7QUFDQVIsTUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWEsQ0FBYjtBQUNIO0FBRUosR0FQRCxFQXJCbUMsQ0E4Qm5DOztBQUNBLDhCQS9CbUMsQ0FpQ25DOztBQUNBLFNBQU8sc0JBQ0gsQ0FDSSxlQUFJVSwyQkFBYUMsR0FBakIsRUFBc0I7QUFBQ0MsSUFBQUEsVUFBVSxFQUFFO0FBQWIsR0FBdEIsQ0FESixFQUVJLGdCQUFLQyx1QkFBTCxDQUZKLENBREcsRUFLVHBCLElBTFMsQ0FBUDtBQU9IIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9hdXN0aW50dWRlL0RvY3VtZW50cy9TdXByZW1lIEhhcmR3b29kIEZsb29ycyBJbmMvd3AtY29udGVudC90aGVtZXMvd3ByaWctc3VwcmVtZWhhcmR3b29kZmxvb3JzaW5jL2d1bHAiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZW52IGVzNiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQge3NyYywgZGVzdH0gZnJvbSAnZ3VscCc7XG5pbXBvcnQgcHVtcCBmcm9tICdwdW1wJztcbmltcG9ydCBsb2cgZnJvbSAnZmFuY3ktbG9nJztcbmltcG9ydCBjb2xvcnMgZnJvbSAnYW5zaS1jb2xvcnMnO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7XG4gICAgaXNQcm9kLFxuICAgIHByb2RUaGVtZVBhdGgsXG4gICAgcm9vdFBhdGgsXG4gICAgcGF0aHMsXG4gICAgbmFtZUZpZWxkRGVmYXVsdHNcbn0gZnJvbSAnLi9jb25zdGFudHMnO1xuaW1wb3J0IHtjcmVhdGVQcm9kRGlyLCBndWxwUmVsYXRpdmVEZXN0LCBnZXRUaGVtZUNvbmZpZ30gZnJvbSAnLi91dGlscyc7XG5cbi8qKlxuICogQ3JlYXRlIHRoZSBwcm9kdWN0aW9uIGRpcmVjdG9yeVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwcm9kUHJlcChkb25lKSB7XG5cbiAgICBjb25zdCBjb25maWcgPSBnZXRUaGVtZUNvbmZpZygpO1xuXG4gICAgLy8gRXJyb3IgaWYgbm90IGluIGEgcHJvZHVjdGlvbiBlbnZpcm9ubWVudFxuICAgIGlmKCAhIGlzUHJvZCApe1xuICAgICAgICBsb2coY29sb3JzLnJlZChgJHtjb2xvcnMuYm9sZCgnRXJyb3I6Jyl9IHRoZSBidW5kbGUgdGFzayBtYXkgb25seSBiZSBjYWxsZWQgZnJvbSB0aGUgcHJvZHVjdGlvbiBlbnZpcm9ubWVudC4gU2V0IE5PREVfRU5WIHRvIHByb2R1Y3Rpb24gYW5kIHRyeSBhZ2Fpbi5gKSk7XG4gICAgICAgIHByb2Nlc3MuZXhpdCgxKTtcbiAgICB9XG5cbiAgICAvLyBUaGUgZGV2IHRoZW1lIGFuZCB0aGUgcHJvZCB0aGVtZSBjYW4ndCBoYXZlIHRoZSBzYW1lIG5hbWVcbiAgICBpZiAoIHBhdGguYmFzZW5hbWUocHJvZFRoZW1lUGF0aCkgPT09IHBhdGguYmFzZW5hbWUocm9vdFBhdGgpICl7XG4gICAgICAgIGxvZyhjb2xvcnMucmVkKGAke2NvbG9ycy5ib2xkKCdFcnJvcjonKX0gdGhlIHRoZW1lIHNsdWcgY2Fubm90IGJlIHRoZSBzYW1lIGFzIHRoZSBkZXYgdGhlbWUgZGlyZWN0b3J5IG5hbWUuYCkpO1xuICAgICAgICBwcm9jZXNzLmV4aXQoMSk7XG4gICAgfVxuXG4gICAgY29uc3QgcmVxdWlyZWRDb25maWdVcGRhdGVzID0gW1xuICAgICAgICAnc2x1ZycsXG4gICAgICAgICduYW1lJyxcbiAgICBdO1xuXG4gICAgcmVxdWlyZWRDb25maWdVcGRhdGVzLm1hcCggKHJlcXVpcmVkQ29uZmlnRmllbGQpID0+IHtcbiAgICAgICAgLy8gRXJyb3IgaWYgY29uZmlnIHRoYXQgbXVzdCBiZSBzZXQgaXMgc3RpbGwgdGhlIGRlZmF1bHQgdmFsdWUuXG4gICAgICAgIGlmICggbmFtZUZpZWxkRGVmYXVsdHNbcmVxdWlyZWRDb25maWdGaWVsZF0gPT09IGNvbmZpZy50aGVtZVtyZXF1aXJlZENvbmZpZ0ZpZWxkXSApe1xuICAgICAgICAgICAgbG9nKGNvbG9ycy5yZWQoYCR7Y29sb3JzLmJvbGQoJ0Vycm9yOicpfSB0aGUgdGhlbWUgJHtyZXF1aXJlZENvbmZpZ0ZpZWxkfSBtdXN0IGJlIGRpZmZlcmVudCB0aGFuIHRoZSBkZWZhdWx0IHZhbHVlICR7bmFtZUZpZWxkRGVmYXVsdHNbcmVxdWlyZWRDb25maWdGaWVsZF19LmApKTtcbiAgICAgICAgICAgIHByb2Nlc3MuZXhpdCgxKTtcbiAgICAgICAgfVxuXG4gICAgfSk7XG5cbiAgICAvLyBDcmVhdGUgdGhlIHByb2QgZGlyZWN0b3J5XG4gICAgY3JlYXRlUHJvZERpcigpO1xuXG4gICAgLy8gQ29weWluZyBtaXNjIGZpbGVzIHRvIHRoZSBwcm9kIGRpcmVjdG9yeVxuICAgIHJldHVybiBwdW1wKFxuICAgICAgICBbXG4gICAgICAgICAgICBzcmMocGF0aHMuZXhwb3J0LnNyYywge2FsbG93RW1wdHk6IHRydWV9KSxcbiAgICAgICAgICAgIGRlc3QoZ3VscFJlbGF0aXZlRGVzdCksXG4gICAgICAgIF0sXG5cdFx0ZG9uZVxuXHQpO1xufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "prodPrep.js"
      ],
      "names": [
        "prodPrep",
        "done",
        "config",
        "isProd",
        "colors",
        "red",
        "bold",
        "process",
        "exit",
        "path",
        "basename",
        "prodThemePath",
        "rootPath",
        "requiredConfigUpdates",
        "map",
        "requiredConfigField",
        "nameFieldDefaults",
        "theme",
        "paths",
        "src",
        "allowEmpty",
        "gulpRelativeDest"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;AAGA;;AACA;;AACA;;AACA;;AACA;;AAKA;;AAOA;;;;AAVA;;;;AAYA;;;AAGe,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;AAEnC,MAAMC,MAAM,GAAG,4BAAf,CAFmC,CAInC;;AACA,MAAI,CAAEC,iBAAN,EAAc;AACV,8BAAIC,uBAAOC,GAAP,WAAcD,uBAAOE,IAAP,CAAY,QAAZ,CAAd,oHAAJ;AACAC,IAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACH,GARkC,CAUnC;;;AACA,MAAKC,iBAAKC,QAAL,CAAcC,wBAAd,MAAiCF,iBAAKC,QAAL,CAAcE,mBAAd,CAAtC,EAA+D;AAC3D,8BAAIR,uBAAOC,GAAP,WAAcD,uBAAOE,IAAP,CAAY,QAAZ,CAAd,yEAAJ;AACAC,IAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACH;;AAED,MAAMK,qBAAqB,GAAG,CAC1B,MAD0B,EAE1B,MAF0B,CAA9B;AAKAA,EAAAA,qBAAqB,CAACC,GAAtB,CAA2B,UAACC,mBAAD,EAAyB;AAChD;AACA,QAAKC,6BAAkBD,mBAAlB,MAA2Cb,MAAM,CAACe,KAAP,CAAaF,mBAAb,CAAhD,EAAmF;AAC/E,gCAAIX,uBAAOC,GAAP,WAAcD,uBAAOE,IAAP,CAAY,QAAZ,CAAd,wBAAiDS,mBAAjD,uDAAiHC,6BAAkBD,mBAAlB,CAAjH,OAAJ;AACAR,MAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACH;AAEJ,GAPD,EArBmC,CA8BnC;;AACA,8BA/BmC,CAiCnC;;AACA,SAAO,sBACH,CACI,eAAIU,2BAAaC,GAAjB,EAAsB;AAACC,IAAAA,UAAU,EAAE;AAAb,GAAtB,CADJ,EAEI,gBAAKC,uBAAL,CAFJ,CADG,EAKTpB,IALS,CAAP;AAOH",
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport {src, dest} from 'gulp';\nimport pump from 'pump';\nimport log from 'fancy-log';\nimport colors from 'ansi-colors';\nimport path from 'path';\n\n/**\n * Internal dependencies\n */\nimport {\n    isProd,\n    prodThemePath,\n    rootPath,\n    paths,\n    nameFieldDefaults\n} from './constants';\nimport {createProdDir, gulpRelativeDest, getThemeConfig} from './utils';\n\n/**\n * Create the production directory\n */\nexport default function prodPrep(done) {\n\n    const config = getThemeConfig();\n\n    // Error if not in a production environment\n    if( ! isProd ){\n        log(colors.red(`${colors.bold('Error:')} the bundle task may only be called from the production environment. Set NODE_ENV to production and try again.`));\n        process.exit(1);\n    }\n\n    // The dev theme and the prod theme can't have the same name\n    if ( path.basename(prodThemePath) === path.basename(rootPath) ){\n        log(colors.red(`${colors.bold('Error:')} the theme slug cannot be the same as the dev theme directory name.`));\n        process.exit(1);\n    }\n\n    const requiredConfigUpdates = [\n        'slug',\n        'name',\n    ];\n\n    requiredConfigUpdates.map( (requiredConfigField) => {\n        // Error if config that must be set is still the default value.\n        if ( nameFieldDefaults[requiredConfigField] === config.theme[requiredConfigField] ){\n            log(colors.red(`${colors.bold('Error:')} the theme ${requiredConfigField} must be different than the default value ${nameFieldDefaults[requiredConfigField]}.`));\n            process.exit(1);\n        }\n\n    });\n\n    // Create the prod directory\n    createProdDir();\n\n    // Copying misc files to the prod directory\n    return pump(\n        [\n            src(paths.export.src, {allowEmpty: true}),\n            dest(gulpRelativeDest),\n        ],\n\t\tdone\n\t);\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1561222234000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"filename\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/prodStringReplace.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/prodStringReplace.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/prodStringReplace.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/prodStringReplace.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
        "sourceFileName": "prodStringReplace.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = prodStringReplace;\n\nvar _gulp = require(\"gulp\");\n\nvar _pump = _interopRequireDefault(require(\"pump\"));\n\nvar _constants = require(\"./constants\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\n\n/**\n * Run string replacement on production files\n */\nfunction prodStringReplace(done) {\n  // Bail if not in production\n  if (!_constants.isProd) {\n    return done();\n  }\n\n  return (0, _pump[\"default\"])([(0, _gulp.src)(_constants.paths[\"export\"].stringReplaceSrc), (0, _utils.getStringReplacementTasks)(), (0, _gulp.dest)(_constants.paths[\"export\"].dest)], done);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2RTdHJpbmdSZXBsYWNlLmpzIl0sIm5hbWVzIjpbInByb2RTdHJpbmdSZXBsYWNlIiwiZG9uZSIsImlzUHJvZCIsInBhdGhzIiwic3RyaW5nUmVwbGFjZVNyYyIsImRlc3QiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFFQTs7Ozs7Ozs7O0FBR0E7O0FBQ0E7O0FBS0E7O0FBQ0E7Ozs7QUFKQTs7OztBQU1BOzs7QUFHZSxTQUFTQSxpQkFBVCxDQUEyQkMsSUFBM0IsRUFBaUM7QUFFNUM7QUFDQSxNQUFLLENBQUVDLGlCQUFQLEVBQWdCO0FBQ1osV0FBT0QsSUFBSSxFQUFYO0FBQ0g7O0FBRUQsU0FBTyxzQkFDSCxDQUNJLGVBQUlFLDJCQUFhQyxnQkFBakIsQ0FESixFQUVJLHVDQUZKLEVBR0ksZ0JBQUtELDJCQUFhRSxJQUFsQixDQUhKLENBREcsRUFNVEosSUFOUyxDQUFQO0FBUUgiLCJzb3VyY2VSb290IjoiL1VzZXJzL2F1c3RpbnR1ZGUvRG9jdW1lbnRzL1N1cHJlbWUgSGFyZHdvb2QgRmxvb3JzIEluYy93cC1jb250ZW50L3RoZW1lcy93cHJpZy1zdXByZW1laGFyZHdvb2RmbG9vcnNpbmMvZ3VscCIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1lbnYgZXM2ICovXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7c3JjLCBkZXN0fSBmcm9tICdndWxwJztcbmltcG9ydCBwdW1wIGZyb20gJ3B1bXAnO1xuXG4vKipcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQge2lzUHJvZCwgcGF0aHN9IGZyb20gJy4vY29uc3RhbnRzJztcbmltcG9ydCB7Z2V0U3RyaW5nUmVwbGFjZW1lbnRUYXNrc30gZnJvbSAnLi91dGlscyc7XG5cbi8qKlxuICogUnVuIHN0cmluZyByZXBsYWNlbWVudCBvbiBwcm9kdWN0aW9uIGZpbGVzXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHByb2RTdHJpbmdSZXBsYWNlKGRvbmUpIHtcblxuICAgIC8vIEJhaWwgaWYgbm90IGluIHByb2R1Y3Rpb25cbiAgICBpZiAoICEgaXNQcm9kICkge1xuICAgICAgICByZXR1cm4gZG9uZSgpO1xuICAgIH1cblxuICAgIHJldHVybiBwdW1wKFxuICAgICAgICBbXG4gICAgICAgICAgICBzcmMocGF0aHMuZXhwb3J0LnN0cmluZ1JlcGxhY2VTcmMpLFxuICAgICAgICAgICAgZ2V0U3RyaW5nUmVwbGFjZW1lbnRUYXNrcygpLFxuICAgICAgICAgICAgZGVzdChwYXRocy5leHBvcnQuZGVzdClcbiAgICAgICAgXSxcblx0XHRkb25lXG5cdCk7XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "prodStringReplace.js"
      ],
      "names": [
        "prodStringReplace",
        "done",
        "isProd",
        "paths",
        "stringReplaceSrc",
        "dest"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;AAGA;;AACA;;AAKA;;AACA;;;;AAJA;;;;AAMA;;;AAGe,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AAE5C;AACA,MAAK,CAAEC,iBAAP,EAAgB;AACZ,WAAOD,IAAI,EAAX;AACH;;AAED,SAAO,sBACH,CACI,eAAIE,2BAAaC,gBAAjB,CADJ,EAEI,uCAFJ,EAGI,gBAAKD,2BAAaE,IAAlB,CAHJ,CADG,EAMTJ,IANS,CAAP;AAQH",
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport {src, dest} from 'gulp';\nimport pump from 'pump';\n\n/**\n * Internal dependencies\n */\nimport {isProd, paths} from './constants';\nimport {getStringReplacementTasks} from './utils';\n\n/**\n * Run string replacement on production files\n */\nexport default function prodStringReplace(done) {\n\n    // Bail if not in production\n    if ( ! isProd ) {\n        return done();\n    }\n\n    return pump(\n        [\n            src(paths.export.stringReplaceSrc),\n            getStringReplacementTasks(),\n            dest(paths.export.dest)\n        ],\n\t\tdone\n\t);\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561222234000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"filename\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/prodCompress.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/prodCompress.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/prodCompress.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/prodCompress.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
        "sourceFileName": "prodCompress.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = prodCompress;\n\nvar _gulp = require(\"gulp\");\n\nvar _pump = _interopRequireDefault(require(\"pump\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _constants = require(\"./constants\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\n\n/**\n * Create the zip file\n */\nfunction prodCompress(done) {\n  var config = (0, _utils.getThemeConfig)(); // Bail if the compress option is false\n\n  if (!config[\"export\"].compress) {\n    return done();\n  }\n\n  return (0, _pump[\"default\"])([(0, _gulp.src)(\"\".concat(_constants.prodThemePath, \"/**/*\")), _constants.gulpPlugins.zip(\"\".concat(config.theme.slug, \".zip\")), (0, _gulp.dest)(_path[\"default\"].normalize(\"\".concat(_constants.prodThemePath, \"/../\")))], done);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2RDb21wcmVzcy5qcyJdLCJuYW1lcyI6WyJwcm9kQ29tcHJlc3MiLCJkb25lIiwiY29uZmlnIiwiY29tcHJlc3MiLCJwcm9kVGhlbWVQYXRoIiwiZ3VscFBsdWdpbnMiLCJ6aXAiLCJ0aGVtZSIsInNsdWciLCJwYXRoIiwibm9ybWFsaXplIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBRUE7Ozs7Ozs7OztBQUdBOztBQUNBOztBQUNBOztBQUtBOztBQUNBOzs7O0FBSkE7Ozs7QUFNQTs7O0FBR2UsU0FBU0EsWUFBVCxDQUFzQkMsSUFBdEIsRUFBNEI7QUFDdkMsTUFBTUMsTUFBTSxHQUFHLDRCQUFmLENBRHVDLENBR3ZDOztBQUNBLE1BQUssQ0FBRUEsTUFBTSxVQUFOLENBQWNDLFFBQXJCLEVBQWdDO0FBQzVCLFdBQU9GLElBQUksRUFBWDtBQUNIOztBQUVELFNBQU8sc0JBQ0gsQ0FDSSx5QkFBT0csd0JBQVAsV0FESixFQUVJQyx1QkFBWUMsR0FBWixXQUFtQkosTUFBTSxDQUFDSyxLQUFQLENBQWFDLElBQWhDLFVBRkosRUFHSSxnQkFBS0MsaUJBQUtDLFNBQUwsV0FBa0JOLHdCQUFsQixVQUFMLENBSEosQ0FERyxFQU1USCxJQU5TLENBQVA7QUFRSCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYXVzdGludHVkZS9Eb2N1bWVudHMvU3VwcmVtZSBIYXJkd29vZCBGbG9vcnMgSW5jL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmlnLXN1cHJlbWVoYXJkd29vZGZsb29yc2luYy9ndWxwIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWVudiBlczYgKi9cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHtzcmMsIGRlc3R9IGZyb20gJ2d1bHAnO1xuaW1wb3J0IHB1bXAgZnJvbSAncHVtcCc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHtwcm9kVGhlbWVQYXRoLCBndWxwUGx1Z2luc30gZnJvbSAnLi9jb25zdGFudHMnO1xuaW1wb3J0IHtnZXRUaGVtZUNvbmZpZ30gZnJvbSAnLi91dGlscyc7XG5cbi8qKlxuICogQ3JlYXRlIHRoZSB6aXAgZmlsZVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwcm9kQ29tcHJlc3MoZG9uZSkge1xuICAgIGNvbnN0IGNvbmZpZyA9IGdldFRoZW1lQ29uZmlnKCk7XG5cbiAgICAvLyBCYWlsIGlmIHRoZSBjb21wcmVzcyBvcHRpb24gaXMgZmFsc2VcbiAgICBpZiAoICEgY29uZmlnLmV4cG9ydC5jb21wcmVzcyApIHtcbiAgICAgICAgcmV0dXJuIGRvbmUoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcHVtcChcbiAgICAgICAgW1xuICAgICAgICAgICAgc3JjKGAke3Byb2RUaGVtZVBhdGh9LyoqLypgKSxcbiAgICAgICAgICAgIGd1bHBQbHVnaW5zLnppcChgJHtjb25maWcudGhlbWUuc2x1Z30uemlwYCksXG4gICAgICAgICAgICBkZXN0KHBhdGgubm9ybWFsaXplKGAke3Byb2RUaGVtZVBhdGh9Ly4uL2ApKVxuICAgICAgICBdLFxuXHRcdGRvbmVcblx0KTtcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "prodCompress.js"
      ],
      "names": [
        "prodCompress",
        "done",
        "config",
        "compress",
        "prodThemePath",
        "gulpPlugins",
        "zip",
        "theme",
        "slug",
        "path",
        "normalize"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;AAGA;;AACA;;AACA;;AAKA;;AACA;;;;AAJA;;;;AAMA;;;AAGe,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;AACvC,MAAMC,MAAM,GAAG,4BAAf,CADuC,CAGvC;;AACA,MAAK,CAAEA,MAAM,UAAN,CAAcC,QAArB,EAAgC;AAC5B,WAAOF,IAAI,EAAX;AACH;;AAED,SAAO,sBACH,CACI,yBAAOG,wBAAP,WADJ,EAEIC,uBAAYC,GAAZ,WAAmBJ,MAAM,CAACK,KAAP,CAAaC,IAAhC,UAFJ,EAGI,gBAAKC,iBAAKC,SAAL,WAAkBN,wBAAlB,UAAL,CAHJ,CADG,EAMTH,IANS,CAAP;AAQH",
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport {src, dest} from 'gulp';\nimport pump from 'pump';\nimport path from 'path';\n\n/**\n * Internal dependencies\n */\nimport {prodThemePath, gulpPlugins} from './constants';\nimport {getThemeConfig} from './utils';\n\n/**\n * Create the zip file\n */\nexport default function prodCompress(done) {\n    const config = getThemeConfig();\n\n    // Bail if the compress option is false\n    if ( ! config.export.compress ) {\n        return done();\n    }\n\n    return pump(\n        [\n            src(`${prodThemePath}/**/*`),\n            gulpPlugins.zip(`${config.theme.slug}.zip`),\n            dest(path.normalize(`${prodThemePath}/../`))\n        ],\n\t\tdone\n\t);\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1561222234000
  },
  "{\"sourceRoot\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"filename\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/clean.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/clean.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/clean.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp/clean.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
        "sourceFileName": "clean.js"
      }
    },
    "ast": null,
    "code": "/* eslint-env es6 */\n'use strict';\n/**\n * External dependencies\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cleanCSS = cleanCSS;\nexports.cleanJS = cleanJS;\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _constants = require(\"./constants\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Internal dependencies\n */\n\n/**\n * Clean CSS\n */\nfunction cleanCSS() {\n  var delPath = [\"\".concat(_constants.paths.styles.dest, \"/**/*.css\"), \"!\".concat(_constants.paths.styles.srcDir), \"!\".concat(_constants.paths.styles.srcDir, \"/**\")];\n  return (0, _del[\"default\"])(delPath);\n}\n/**\n * Clean JS\n */\n\n\nfunction cleanJS() {\n  var delPath = [\"\".concat(_constants.paths.scripts.dest, \"/**/*.js\"), \"!\".concat(_constants.paths.scripts.srcDir), \"!\".concat(_constants.paths.scripts.srcDir, \"/**\")];\n  return (0, _del[\"default\"])(delPath);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsZWFuLmpzIl0sIm5hbWVzIjpbImNsZWFuQ1NTIiwiZGVsUGF0aCIsInBhdGhzIiwic3R5bGVzIiwiZGVzdCIsInNyY0RpciIsImNsZWFuSlMiLCJzY3JpcHRzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBRUE7Ozs7Ozs7Ozs7QUFHQTs7QUFLQTs7OztBQUhBOzs7O0FBS0E7OztBQUdPLFNBQVNBLFFBQVQsR0FBb0I7QUFDMUIsTUFBTUMsT0FBTyxHQUFHLFdBQ1pDLGlCQUFNQyxNQUFOLENBQWFDLElBREQsMkJBRVhGLGlCQUFNQyxNQUFOLENBQWFFLE1BRkYsY0FHWEgsaUJBQU1DLE1BQU4sQ0FBYUUsTUFIRixTQUFoQjtBQUtBLFNBQU8scUJBQUlKLE9BQUosQ0FBUDtBQUNBO0FBRUQ7Ozs7O0FBR08sU0FBU0ssT0FBVCxHQUFtQjtBQUN6QixNQUFNTCxPQUFPLEdBQUcsV0FDWkMsaUJBQU1LLE9BQU4sQ0FBY0gsSUFERiwwQkFFWEYsaUJBQU1LLE9BQU4sQ0FBY0YsTUFGSCxjQUdYSCxpQkFBTUssT0FBTixDQUFjRixNQUhILFNBQWhCO0FBS0EsU0FBTyxxQkFBSUosT0FBSixDQUFQO0FBQ0EiLCJzb3VyY2VSb290IjoiL1VzZXJzL2F1c3RpbnR1ZGUvRG9jdW1lbnRzL1N1cHJlbWUgSGFyZHdvb2QgRmxvb3JzIEluYy93cC1jb250ZW50L3RoZW1lcy93cHJpZy1zdXByZW1laGFyZHdvb2RmbG9vcnNpbmMvZ3VscCIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1lbnYgZXM2ICovXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBkZWwgZnJvbSAnZGVsJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHtwYXRoc30gZnJvbSAnLi9jb25zdGFudHMnO1xuXG4vKipcbiAqIENsZWFuIENTU1xuICovXG5leHBvcnQgZnVuY3Rpb24gY2xlYW5DU1MoKSB7XG5cdGNvbnN0IGRlbFBhdGggPSBbXG5cdFx0YCR7cGF0aHMuc3R5bGVzLmRlc3R9LyoqLyouY3NzYCxcblx0XHRgISR7cGF0aHMuc3R5bGVzLnNyY0Rpcn1gLFxuXHRcdGAhJHtwYXRocy5zdHlsZXMuc3JjRGlyfS8qKmBcblx0XTtcblx0cmV0dXJuIGRlbChkZWxQYXRoKTtcbn1cblxuLyoqXG4gKiBDbGVhbiBKU1xuICovXG5leHBvcnQgZnVuY3Rpb24gY2xlYW5KUygpIHtcblx0Y29uc3QgZGVsUGF0aCA9IFtcblx0XHRgJHtwYXRocy5zY3JpcHRzLmRlc3R9LyoqLyouanNgLFxuXHRcdGAhJHtwYXRocy5zY3JpcHRzLnNyY0Rpcn1gLFxuXHRcdGAhJHtwYXRocy5zY3JpcHRzLnNyY0Rpcn0vKipgXG5cdF07XG5cdHJldHVybiBkZWwoZGVsUGF0aCk7XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "clean.js"
      ],
      "names": [
        "cleanCSS",
        "delPath",
        "paths",
        "styles",
        "dest",
        "srcDir",
        "cleanJS",
        "scripts"
      ],
      "mappings": "AAAA;AACA;AAEA;;;;;;;;;;AAGA;;AAKA;;;;AAHA;;;;AAKA;;;AAGO,SAASA,QAAT,GAAoB;AAC1B,MAAMC,OAAO,GAAG,WACZC,iBAAMC,MAAN,CAAaC,IADD,2BAEXF,iBAAMC,MAAN,CAAaE,MAFF,cAGXH,iBAAMC,MAAN,CAAaE,MAHF,SAAhB;AAKA,SAAO,qBAAIJ,OAAJ,CAAP;AACA;AAED;;;;;AAGO,SAASK,OAAT,GAAmB;AACzB,MAAML,OAAO,GAAG,WACZC,iBAAMK,OAAN,CAAcH,IADF,0BAEXF,iBAAMK,OAAN,CAAcF,MAFH,cAGXH,iBAAMK,OAAN,CAAcF,MAHH,SAAhB;AAKA,SAAO,qBAAIJ,OAAJ,CAAP;AACA",
      "sourceRoot": "/Users/austintude/Documents/Supreme Hardwood Floors Inc/wp-content/themes/wprig-supremehardwoodfloorsinc/gulp",
      "sourcesContent": [
        "/* eslint-env es6 */\n'use strict';\n\n/**\n * External dependencies\n */\nimport del from 'del';\n\n/**\n * Internal dependencies\n */\nimport {paths} from './constants';\n\n/**\n * Clean CSS\n */\nexport function cleanCSS() {\n\tconst delPath = [\n\t\t`${paths.styles.dest}/**/*.css`,\n\t\t`!${paths.styles.srcDir}`,\n\t\t`!${paths.styles.srcDir}/**`\n\t];\n\treturn del(delPath);\n}\n\n/**\n * Clean JS\n */\nexport function cleanJS() {\n\tconst delPath = [\n\t\t`${paths.scripts.dest}/**/*.js`,\n\t\t`!${paths.scripts.srcDir}`,\n\t\t`!${paths.scripts.srcDir}/**`\n\t];\n\treturn del(delPath);\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561222234000
  }
}